{"componentChunkName":"component---src-templates-blog-template-js","path":"/write-log-231014/","result":{"data":{"cur":{"id":"ede8a21a-262c-5b40-a7ac-afdc931b49ef","html":"<h2 id=\"한주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한주 회고</h2>\n<h3 id=\"1-짜릿한-도커-이미지-줄인-경험\" style=\"position:relative;\"><a href=\"#1-%EC%A7%9C%EB%A6%BF%ED%95%9C-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A4%84%EC%9D%B8-%EA%B2%BD%ED%97%98\" aria-label=\"1 짜릿한 도커 이미지 줄인 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 짜릿한 도커 이미지 줄인 경험</h3>\n<p>결론부터 말하자면 Next에서 제공하는 <a href=\"https://nextjs.org/docs/pages/api-reference/next-config-js/output#automatically-copying-traced-files\">standalone</a>과 <a href=\"https://docs.docker.com/build/building/multi-stage/\">Docker 멀티 스테이지 빌드</a>를 DevOps팀과 함께 협업해서 기존에 약 1GB가 넘는 도커 이미지 파일을 약 60MB 정도까지 줄였다.(약 94% 줄임)</p>\n<br>\n<p>Next Stand Alone</p>\n<ul>\n<li>Next에서 아래와 같이 <code class=\"language-text\">next.config.js</code> 파일에 코드를 실행하면, 자동으로 Production 배포 환경에 <code class=\"language-text\">node_modules</code>에서 필요한 파일들만 추출해준다.</li>\n<li>그러면 <code class=\"language-text\">.next/standalone</code> 이라는 폴더가 생성되고, 이 폴더는 <code class=\"language-text\">node_modules</code>를 설치하지 않고도 자체적으로 배포할 수 있다.</li>\n<li>\n<p>또한 <code class=\"language-text\">next start</code> 대신 사용할 수 있는 최소한의 코드가 있는 <code class=\"language-text\">server.js</code> 파일도 생성이 된다. 이 때, <code class=\"language-text\">server.js</code> 파일 안에는 <code class=\"language-text\">public</code>과 <code class=\"language-text\">.next/static</code> 폴더를 복사하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\noutput<span class=\"token operator\">:</span> <span class=\"token string\">'standalone'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<p>Dockerfile - Multi-stage build</p>\n<ul>\n<li>컨테이너 이미지를 만들면서 빌드 등에는 필요하지만, 최종 컨테이너 이미지에는 필요 없는 환경을 제거할 수 있도록 단계를 나누어 기반 이미지를 만드는 방법이다.</li>\n</ul>\n<br>\n<p>위 경험을 통해 단순히 용량을 줄이는 것을 넘어서 회사 비즈니스 지출 비용과 더 나아가 지구 온난화에 좋은 영향을 주어서 신기하면서도 보람찬 경험을 했다고 생각한다.</p>\n<br>\n<h3 id=\"2-커피쳇\" style=\"position:relative;\"><a href=\"#2-%EC%BB%A4%ED%94%BC%EC%B3%87\" aria-label=\"2 커피쳇 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 커피쳇</h3>\n<p>이번 주에 팀 리더분과 함께 저녁을 먹으면서 이런저런 이야기를 했다.\n그 가운데 개인적으로 인사이트가 있어 글을 작성하면서 반성도 하고 다시 한번 생각해보는 시간을 가져보고자 한다.</p>\n<p>Q) 시니어 개발자가 되기 위해 필요한 것들은 무엇일까?</p>\n<ul>\n<li>함께 일하는 팀원분들이 더욱 시너지를 낼 수 있도록 도와줄 수 있어야 한다.</li>\n<li>빠르고 정확하게 문제를 파악하고 해결할 수 있어야 한다.</li>\n<li>개발하고 있는 코드가 회사 비즈니스에 어떤 영향을 주는지 더 나아가 사용자에게 어떤 가치를 주는지 항상 고민해야 한다.</li>\n<li>연차가 쌓일 수록 기본기가 중요하다(CS, NetWork 등)</li>\n<li>협업을 하는 과정에서 정확하게 의사 전달을 해야 한다.(이 부분은 너무 중요하다는 사실을 이번에 매우 깨닫게 되었다. 그 이유는 잘못 의사 전달하면 다른 팀원분의 업무가 늘어날 수 있기 때문이다. 이렇게 되면 팀원분의 컨디션에 악영향을 미칠 수 있다는 생각이 많이 들었다.)</li>\n<li>스스로 목표설정을 통해 동기부여를 할 줄 알아야 한다.</li>\n</ul>\n<p>이렇게 시간을 내어서 인사이트를 주신 팀 리더분께 매우 감사함을 전하고 싶다.</p>\n<br>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<p>결혼 일주일을 앞두고 최대한 일을 잘 매듭지고 가고 싶다. 정신이 많이 없지만 하나씩 잘 정리 정돈해서 결혼 이후에 더 멋있게 성장하고 싶다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://velog.io/@jadenkim5179/Next.js-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-docker-%EB%B0%B0%ED%8F%AC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%81%AC%EA%B8%B0-%EC%A4%84%EC%9D%B4%EA%B8%B0\">Next 프로젝트 Docker 이미지 크기 줄이기</a></li>\n<li><a href=\"https://steady-study.super.site/frontend-engineer-career-roadmap\">프론트엔드 로드맵 관련 글</a></li>\n<li><a href=\"https://kimjingo.tistory.com/63\">멀티스테이지 빌드란</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%9C%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한주 회고</a></p>\n<ul>\n<li><a href=\"#1-%EC%A7%9C%EB%A6%BF%ED%95%9C-%EB%8F%84%EC%BB%A4-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A4%84%EC%9D%B8-%EA%B2%BD%ED%97%98\">1. 짜릿한 도커 이미지 줄인 경험</a></li>\n<li><a href=\"#2-%EC%BB%A4%ED%94%BC%EC%B3%87\">2. 커피쳇</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"한주 회고 1. 짜릿한 도커 이미지 줄인 경험 결론부터 말하자면 Next에서 제공하는 standalone과 Docker 멀티 스테이지 빌드를 DevOps팀과 함께 협업해서 기존에 약 1GB가 넘는 도커 이미지 파일을 약 60MB 정도까지 줄였다.(약 94% 줄임) Next Stand Alone Next에서 아래와 같이  파일에 코드를 실행하면, 자동으로 Production 배포 환경에 에서 필요한 파일들만 추출해준다. 그러면  이라는 폴더가 생성되고, 이 폴더는 를 설치하지 않고도 자체적으로 배포할 수 있다. 또한  대신 사용할 수 있는 최소한의 코드가 있는  파일도 생성이 된다. 이 때,  파일 안에는 과  폴더를 복사하지 않는다. Dockerfile - Multi-stage build 컨테이너 이미지를 만들면서 빌드 등에는 필요하지만, 최종 컨테이너 이미지에는 필요 없는 환경을 제거할 수 있도록 단계를 나누어 기반 이미지를 만드는 방법이다. 위 경험을 통해 단순히 용량을 줄이는…","frontmatter":{"date":"October 14, 2023","title":"10월 3주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-231014/"}},"next":{"id":"51822c9a-5360-5af8-b9ec-914eef4596fc","html":"<h2 id=\"111-질의-함수와-변경-함수-분리하기\" style=\"position:relative;\"><a href=\"#111-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EC%99%80-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"111 질의 함수와 변경 함수 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.1 질의 함수와 변경 함수 분리하기</h2>\n<ul>\n<li>겉보기 부수효과가 있는 함수와 없는 함수는 명확히 구분하는 것이 좋음. 질의 함수(읽기 함수)는 모두 부수효과가 없어야 함. 이를 ‘명령-질의 분리’라고도 함</li>\n</ul>\n<h3 id=\"절차\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8\" aria-label=\"절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>대상 함수를 복제하고 질의 목적에 충실한 이름을 지음</li>\n<li>새 질의 함수에서 부수효과를 모두 제거</li>\n<li>정적 검사를 수행</li>\n<li>원래 함수(변경 함수)를 호출하는 곳을 모두 찾아냄. 호출하는 곳에서 반환 값을 사용한다면 질의 함수를 호출하도록 바꾸고, 원래 함수를 호출하는 코드를 바로 아래 줄에 새로 추가함.하나 수정할 때마다 테스트 진행</li>\n<li>원래 함수에서 질의 관련 코드를 제거함</li>\n<li>테스트</li>\n</ol>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변경 함수</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 질의 함수</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">findMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> found <span class=\"token operator\">=</span> <span class=\"token function\">findMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"112-함수-매개변수화하기\" style=\"position:relative;\"><a href=\"#112-%ED%95%A8%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"112 함수 매개변수화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.2 함수 매개변수화하기</h2>\n<ul>\n<li>두 함수의 로직이 아주 비슷하고 단지 리터럴 값만 다르다면, 그 다른 값만 매개변수로 받아 처리하는 함수 하나로 합쳐서 중복을 없앨 수 있음.</li>\n</ul>\n<h3 id=\"절차-1\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-1\" aria-label=\"절차 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>비슷한 함수 중 하나를 선택함</li>\n<li>함수 선언 바꾸기로 리터럴들을 매개변수로 추가함</li>\n<li>이 함수를 호출하는 곳 모두에 적절한 리터럴 값을 추가함</li>\n<li>테스트함</li>\n<li>매개변수로 받은 값을 사용하도록 함수 본문을 수정함. 하나 수정할 때마다 테스트함.</li>\n<li>비슷한 다른 함수를 호출하는 코드를 찾아 매개변수화된 함수를 호출하도록 하나씩 수정함.\n하나 수정할 때마다 테스트함</li>\n</ol>\n<h3 id=\"예시-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>usage <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> amount <span class=\"token operator\">=</span> <span class=\"token function\">bottomBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.03</span> <span class=\"token operator\">+</span> <span class=\"token function\">middleBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span> <span class=\"token operator\">+</span> <span class=\"token function\">topBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bottomBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">middleBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">100</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">topBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> <span class=\"token number\">200</span> <span class=\"token operator\">?</span> usage <span class=\"token operator\">-</span> <span class=\"token number\">200</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> bottom <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> bottom <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>usage <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> amount <span class=\"token operator\">=</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.03</span> <span class=\"token operator\">+</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span> <span class=\"token operator\">+</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"113-플래그-인수-제거하기\" style=\"position:relative;\"><a href=\"#113-%ED%94%8C%EB%9E%98%EA%B7%B8-%EC%9D%B8%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-label=\"113 플래그 인수 제거하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.3 플래그 인수 제거하기</h2>\n<ul>\n<li>플래그 인수란 호출되는 함수가 실행할 로직을 호출하는 쪽에서 선택하기 위해 전달하는 인수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">bookConcert</span><span class=\"token punctuation\">(</span>aCustomer<span class=\"token punctuation\">,</span> isPremium<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isPremium<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 프리미엄 예약용 로직</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 일반 예약용 로직</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">bookConcert</span><span class=\"token punctuation\">(</span>aCustomer<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>플래그 인수를 사용하면, 호출할 수 있는 함수들이 무엇이고 어떻게 호출해야 하는지를 이해하기 어려워짐. 플래그 인수가 있으면 함수들의 기능 차이가 잘 드러나지 않음</li>\n<li>플래그 인수를 제거하면 코드가 깔끔해짐은 물론 프로그래밍 도구에도 도움을 줌. 코드 분석 도구는 프리미엄 로직 호출과 일반 로직 호출의 차이를 더 쉽게 파악할 수 있게 됨</li>\n</ul>\n<h3 id=\"절차-2\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-2\" aria-label=\"절차 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>매개변수로 주어질 수 있는 값 각각에 대응하는 명시적 함수들을 생성함</li>\n<li>원래 함수를 호출하는 코드들을 모두 찾아서 각 리터럴 값에 대응되는 명시적 함수를 호출하도록 수정함</li>\n</ol>\n<h3 id=\"예시-2\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-2\" aria-label=\"예시 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\naShipment<span class=\"token punctuation\">.</span>deliveryDate <span class=\"token operator\">=</span> <span class=\"token function\">deliveryDate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naShipment<span class=\"token punctuation\">.</span>deliveryDate <span class=\"token operator\">=</span> <span class=\"token function\">deliveryDate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">deliveryDate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">,</span> isRush<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isRush<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// rush일 때 호출할 로직</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// rush가 아닐 때 호출할 로직</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rushDeliveryDate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// rush일 때 호출할 로직</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">regularDeliveryRate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// rush가 아닐 때 호출할 로직</span>\n<span class=\"token punctuation\">}</span>\n\naShipment<span class=\"token punctuation\">.</span>deliveryDate <span class=\"token operator\">=</span> <span class=\"token function\">rushDeliveryDate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\naShipment<span class=\"token punctuation\">.</span>deliveryDate <span class=\"token operator\">=</span> <span class=\"token function\">regularDeliveryRate</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"114-객체-통째로-넘기기\" style=\"position:relative;\"><a href=\"#114-%EA%B0%9D%EC%B2%B4-%ED%86%B5%EC%A7%B8%EB%A1%9C-%EB%84%98%EA%B8%B0%EA%B8%B0\" aria-label=\"114 객체 통째로 넘기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.4 객체 통째로 넘기기</h2>\n<ul>\n<li>레코드를 통째로 넘기면 변화에 대응하기 쉬움. 함수가 더 다양한 데이터를 사용하도록 바뀌어도 매개변수 목록은 수정할 필요가 없음. 그리고 매개변수 목록이 짧아져서 일반적으로는 함수 사용법을 이해하기 쉬워짐</li>\n<li>하지만 함수가 레코드 자체에 의존하기를 원치 않을 때, 특히 레코드와 함수가 서로 다른 모듈에 속한 상황이라면 이 리팩터링을 수행하지 않음</li>\n<li>한편, 한 객체가 제공하는 기능 중 항상 똑같은 일부만을 사용하는 코드가 많다면, 그 기능만 따로 묶어서 클래스로 추출할 수도 있음</li>\n</ul>\n<h3 id=\"절차-3\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-3\" aria-label=\"절차 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>매개변수들을 원하는 형태로 받는 빈 함수를 만듦</li>\n<li>새 함수의 본문에서는 원래 함수를 호출하도록 하며, 새 매개변수와 원래 함수의 매개변수를 매핑함</li>\n<li>정적 검사를 수행함</li>\n<li>모든 호출자가 새 함수를 사용하게 수정함. 하나씩 수정하며 테스트함</li>\n<li>호출자를 모두 수정했다면 원래 함수를 인라인함</li>\n<li>새 함수의 이름을 적절히 수정하고 모든 호출자에 반영함</li>\n</ol>\n<h3 id=\"예시-3\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-3\" aria-label=\"예시 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<ul>\n<li>일일 최저/최고 기온이 난방 계획에서 정한 범위를 벗어나는지 확인하는 실내온도 모니터링 시스템을 생각</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> low <span class=\"token operator\">=</span> aRoom<span class=\"token punctuation\">.</span>daysTempRange<span class=\"token punctuation\">.</span>low<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> high <span class=\"token operator\">=</span> aRoom<span class=\"token punctuation\">.</span>daysTempRange<span class=\"token punctuation\">.</span>high<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>aPlan<span class=\"token punctuation\">.</span><span class=\"token function\">withinRange</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  alerts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"방 온도가 지정 범위를 벗어났습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// HeatingPlan 클래스</span>\n<span class=\"token function\">withinRange</span><span class=\"token punctuation\">(</span>bottom<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>bottom <span class=\"token operator\">>=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_temperatureRange<span class=\"token punctuation\">.</span>low<span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_temperatureRange<span class=\"token punctuation\">.</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 최저/최고 기온을 뽑아내어 인수로 건내는 대신 범위 객체를 통째로 건넬 수도 있음</span>\n\n<span class=\"token comment\">// HeatingPlan 클래스</span>\n<span class=\"token function\">withinRange</span><span class=\"token punctuation\">(</span>aNumberRange<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>aNumberRange<span class=\"token punctuation\">.</span>low <span class=\"token operator\">>=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_temperatureRange<span class=\"token punctuation\">.</span>low<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         <span class=\"token punctuation\">(</span>aNumberRange<span class=\"token punctuation\">.</span>high <span class=\"token operator\">&lt;=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_temperatureRange<span class=\"token punctuation\">.</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>aPlan<span class=\"token punctuation\">.</span><span class=\"token function\">withinRange</span><span class=\"token punctuation\">(</span>aRoom<span class=\"token punctuation\">.</span>daysTempRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  alerts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"방 온도가 지정 범위를 벗어났습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"115-매개변수를-질의-함수로-바꾸기\" style=\"position:relative;\"><a href=\"#115-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"115 매개변수를 질의 함수로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.5 매개변수를 질의 함수로 바꾸기</h2>\n<ul>\n<li>매개변수 목록은 함수의 동작에 변화를 줄 수 있는 일차적인 수단. 매개변수 목록은 중복은 피하는 게 좋으며 짧을수록 이해하기 쉬움.</li>\n<li>피호출 함수가 스스로 ‘쉽게’ 결정할 수 있는 값을 매개변수로 건네는 것도 일종의 중복. 호출하는 쪽은 간소하게 만드는 것이 좋음. 즉, 책임 소재를 피호출 함수로 옮김</li>\n<li>매개변수 제거 시 피호출 함수에 원치 않는 의존성이 생긴다면 매개변수를 질의 함수로 바꾸지 말아야 함. 제거하려는 매개변수의 값을 다른 매개변수에 질의해서 얻을 수 있다면 안심하고 질의 함수로 바꿀 수 있음.</li>\n<li>이때 대상 함수가 참조 투명해야 한다. 즉, 함수에 똑같은 값을 건네 호출하면 항상 똑같이 동작해야 함.</li>\n</ul>\n<h3 id=\"절차-4\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-4\" aria-label=\"절차 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>필요하다면 대상 매개변수의 값을 계산하는 코드를 별도 함수로 추출해놓음</li>\n<li>함수 본문에서 대상 매개변수로의 참조를 모두 찾아서 그 매개변수의 값을 만들어주는 표현식을 참조하도록 바꿈. 하나 수정할 때마다 테스트함.</li>\n<li>함수 선언 바꾸기로 대상 매개변수를 없앰</li>\n</ol>\n<h3 id=\"예시-4\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-4\" aria-label=\"예시 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">finalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> discountLevel<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> basePrice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>itemPrice<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> discountLevel <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> discountLevel <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">discountedPrice</span><span class=\"token punctuation\">(</span>basePrice<span class=\"token punctuation\">,</span> discountLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">discountedPrice</span><span class=\"token punctuation\">(</span>basePrice<span class=\"token punctuation\">,</span> discountLevel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>discountLevel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> basePrice <span class=\"token operator\">*</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> basePrice <span class=\"token operator\">*</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Order</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">finalPrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> basePrice <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>itemPrice<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">discountedPrice</span><span class=\"token punctuation\">(</span>basePrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">discountLevel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">discountedPrice</span><span class=\"token punctuation\">(</span>basePrice<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountLevel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> basePrice <span class=\"token operator\">*</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> basePrice <span class=\"token operator\">*</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"116-질의-함수를-매개변수로-바꾸기\" style=\"position:relative;\"><a href=\"#116-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"116 질의 함수를 매개변수로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.6 질의 함수를 매개변수로 바꾸기</h2>\n<ul>\n<li>함수 안에서 전역 변수를 참조한다거나, 제거하길 원하는 원소를 참조하는 경우가 있을때, 해당 참조를 매개변수로 바꿔 해결할 수 있음. 참조를 풀어내는 책임을 호출자로 옮기는 것</li>\n<li>이런 상황 대부분은 코드의 의존 관계를 바꾸려 할 때, 예컨대 대상 함수가 더 이상 (매개변수화하려는) 특정 원소에 의존하길 원치 않을 때 일어남</li>\n<li>이 리팩터링의 단점은, 호출자가 복잡해진다는 것. 이 문제는 결국 책임 소재를 프로그램의 어디에 배정하느냐의 문제로 귀결되는 것으로, 항상 정답이 있는 것은 아님</li>\n</ul>\n<h3 id=\"절차-5\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-5\" aria-label=\"절차 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>변수 추출하기로 질의 코드를 함수 본문의 나머지 코드와 분리</li>\n<li>함수 본문 중 해당 질의를 호출하지 않는 코드들을 별도 함수로 추출</li>\n<li>방금 만든 변수를 인라인하여 제거</li>\n<li>원래 함수도 인라인</li>\n<li>새 함수의 이름을 원래 함수의 이름으로 고침</li>\n</ol>\n<h3 id=\"예시-5\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-5\" aria-label=\"예시 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// HeatingPlan 클래스</span>\n<span class=\"token keyword\">get</span> <span class=\"token function\">targetTemperature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thermostat<span class=\"token punctuation\">.</span>selectedTemperature <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_max<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_max<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thermostat<span class=\"token punctuation\">.</span>selectedTemperature <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_min<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_min<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> thermostat<span class=\"token punctuation\">.</span>selectedTemperature<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출자</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thePlan<span class=\"token punctuation\">.</span>targetTemperature <span class=\"token operator\">></span> thermostat<span class=\"token punctuation\">.</span>currentTemperature<span class=\"token punctuation\">)</span> <span class=\"token function\">setToHeat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thePlan<span class=\"token punctuation\">.</span>targetTemperature <span class=\"token operator\">&lt;</span> thermostat<span class=\"token punctuation\">.</span>currentTemperature<span class=\"token punctuation\">)</span> <span class=\"token function\">setToCool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token function\">setOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// targetTemperature() 메서드와 전역 객체인 thermostat사이의 의존성을 끊음</span>\n<span class=\"token comment\">// targetTemperature() 메서드와 전역 객체인 thermostat사이의 결합을 제거했을 뿐 아니라, HeatingPlan 클래스를 불변으로 만들었음</span>\n<span class=\"token comment\">// 모든 필드가 생성자에서 설정되며, 필드를 변경할 수 있는 메서드는 없음</span>\n\n<span class=\"token comment\">// HeatingPlan 클래스</span>\n<span class=\"token function\">targetTemperature</span><span class=\"token punctuation\">(</span>selectedTemperature<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedTemperature <span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_max<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_max<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedTemperature <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_min<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_min<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> selectedTemperature<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출자</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thePlan<span class=\"token punctuation\">.</span><span class=\"token function\">targetTemperature</span><span class=\"token punctuation\">(</span>thermostat<span class=\"token punctuation\">.</span>selectedTemperature<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> thermostat<span class=\"token punctuation\">.</span>currentTemperature<span class=\"token punctuation\">)</span> <span class=\"token function\">setToHeat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thePlan<span class=\"token punctuation\">.</span><span class=\"token function\">targetTemperature</span><span class=\"token punctuation\">(</span>thermostat<span class=\"token punctuation\">.</span>selectedTemperature<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> thermostat<span class=\"token punctuation\">.</span>currentTemperature<span class=\"token punctuation\">)</span> <span class=\"token function\">setToCool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span> <span class=\"token function\">setOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/89649360\">리팩터링 2판 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#111-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EC%99%80-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\">11.1 질의 함수와 변경 함수 분리하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#112-%ED%95%A8%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%ED%99%94%ED%95%98%EA%B8%B0\">11.2 함수 매개변수화하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-1\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-1\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#113-%ED%94%8C%EB%9E%98%EA%B7%B8-%EC%9D%B8%EC%88%98-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\">11.3 플래그 인수 제거하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-2\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-2\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#114-%EA%B0%9D%EC%B2%B4-%ED%86%B5%EC%A7%B8%EB%A1%9C-%EB%84%98%EA%B8%B0%EA%B8%B0\">11.4 객체 통째로 넘기기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-3\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-3\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#115-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A5%BC-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.5 매개변수를 질의 함수로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-4\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-4\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#116-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.6 질의 함수를 매개변수로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-5\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-5\">예시</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 14, 2023","title":"리팩터링 11장-1","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/refactoring-11-1/"}},"prev":{"id":"7688b33b-5bc5-5765-86c5-e0f51463f19f","html":"<h2 id=\"117-세터-제거하기\" style=\"position:relative;\"><a href=\"#117-%EC%84%B8%ED%84%B0-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-label=\"117 세터 제거하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.7 세터 제거하기</h2>\n<ul>\n<li>세터 메서드가 있다는 것은 필드가 수정될 수 있다는 뜻. 객체 생성 후에는 수정되지 않길 원하는 필드라면 세터를 제공하지 않았을 것</li>\n<li>세터 제거하기 리팩터링이 필요한 상황은 주로 두 가지임</li>\n<li>첫째, 사람들이 무조건 접근자 메서드를 통해서만 필드를 다루려 할 때</li>\n<li>두 번째는 클라이언트에서 생성 스크립트를 사용해 객체를 생성할 때</li>\n</ul>\n<h3 id=\"절차\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8\" aria-label=\"절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>설정해야 할 값을 생성자에서 받지 않는다면 그 값을 받을 매개변수를 생성자에 추가함. 그런 다음 생성자 안에서 적절한 세터를 호출</li>\n<li>생성자 밖에서 세터를 호출하는 곳을 찾아 제거하고, 대신 새로운 생성자를 사용하도록 함</li>\n<li>세터 메서드를 인라인. 가능하다면 해당 필드를 불변으로 만듦</li>\n</ol>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">id</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_id <span class=\"token operator\">=</span> arg<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> martin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmartin<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'마틴'</span><span class=\"token punctuation\">;</span>\nmargin<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">'1234'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// id 필드는 객체를 생성한 뒤에 변경되면 안 됨.</span>\n<span class=\"token comment\">// 생성자를 통해 id 를 설정하게끔 수정</span>\n\n<span class=\"token comment\">// after</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> martin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1234'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmartin<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'마틴'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"118-생성자를-팩터리-함수로-바꾸기\" style=\"position:relative;\"><a href=\"#118-%EC%83%9D%EC%84%B1%EC%9E%90%EB%A5%BC-%ED%8C%A9%ED%84%B0%EB%A6%AC-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"118 생성자를 팩터리 함수로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.8 생성자를 팩터리 함수로 바꾸기</h2>\n<ul>\n<li>생성자에는 이상한 제약이 따라붙기도 함.</li>\n<li>자바 생성자는 반드시 생성자를 정의한 클래스의 인스턴스를 반환해야 함.</li>\n<li>생성자의 이름도 고정되며, 생성자를 호출하려면 특별한 연산자(new)를 사용해야 함</li>\n</ul>\n<p>-> 팩터리 함수에는 이런 제약이 없다.</p>\n<h3 id=\"절차-1\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-1\" aria-label=\"절차 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>팩터리 함수를 만듦. 팩터리 함수의 본문에서는 원래의 생성자를 호출함</li>\n<li>생성자를 호출하던 코드를 팩터리 함수 호출로 바꿈</li>\n<li>하나씩 수정할 때마다 테스트</li>\n<li>생성자의 가시 범위가 최소가 되도록 제한</li>\n</ol>\n<h3 id=\"예시-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Employee</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">type</span>Code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_typeCode <span class=\"token operator\">=</span> <span class=\"token keyword\">type</span>Code<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Employee<span class=\"token punctuation\">.</span>legalTypeCodes<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_typeCode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">legalTypeCodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">E</span><span class=\"token operator\">:</span> <span class=\"token string\">'Engineer'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">M</span><span class=\"token operator\">:</span> <span class=\"token string\">'Manager'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">S</span><span class=\"token operator\">:</span> <span class=\"token string\">'Salesperson'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> leadEngineer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>leadEngineer<span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// afters</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createEmployee</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Employee</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> leadEngineer <span class=\"token operator\">=</span> <span class=\"token function\">createEmployee</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>leadEngineer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"119-함수를-명령으로-바꾸기\" style=\"position:relative;\"><a href=\"#119-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%AA%85%EB%A0%B9%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"119 함수를 명령으로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.9 함수를 명령으로 바꾸기</h2>\n<ul>\n<li>함수를 그 함수만을 위한 객체 안으로 캡슐화하면 더 유용해지는 상황이 있음</li>\n<li>이런 객체를 가리켜 ‘명령 객체’ 혹은 단순히 ‘명령’이라 함</li>\n<li>명령 객체 대부분은 메서드 하나로 구성되며, 이 메서드를 요청해 실행하는 것이 이 객체의 목적</li>\n<li>명령은 평범한 함수 메커니즘보다 훨씬 유연하게 함수를 제어하고 표현할 수 있음</li>\n<li>그러나 명령을 사용해 유연성을 얻더라도 복잡성이 커질 수 있음</li>\n<li>명령보다 더 간단한 방식으로는 얻을 수 없는 기능이 필요할 때만 명령을 선택</li>\n</ul>\n<h3 id=\"절차-2\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-2\" aria-label=\"절차 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>대상 함수의 기능을 옮길 빈 클래스를 만듦. 클래스 이름은 함수 이름에 기초해 지음</li>\n<li>방금 생성한 빈 클래스로 함수를 옮김</li>\n<li>함수의 인수들 각각은 명령의 필드로 만들어 생성자를 통해 설정할지 고민해봄</li>\n</ol>\n<h3 id=\"예시-2\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-2\" aria-label=\"예시 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">score</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> medicalExam<span class=\"token punctuation\">,</span> scoringGuide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> healthLevel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> highMedicalRiskFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>medicalExam<span class=\"token punctuation\">.</span>isSmoker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    healthLevel <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    highMedicalRiskFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> certificationGrade <span class=\"token operator\">=</span> <span class=\"token string\">'regular'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scoringGuide<span class=\"token punctuation\">.</span><span class=\"token function\">stateWithLowCertification</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">.</span>originState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    certificationGrade <span class=\"token operator\">=</span> <span class=\"token string\">'low'</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// ...</span>\n  result <span class=\"token operator\">-=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>healthLevel <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">score</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> medicalExam<span class=\"token punctuation\">,</span> scoringGuide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scorer</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> medicalExam<span class=\"token punctuation\">,</span> scoringGuide<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Scorer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">,</span> medicalExam<span class=\"token punctuation\">,</span> scoringGuide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_candidate <span class=\"token operator\">=</span> candidate<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_medicalExam <span class=\"token operator\">=</span> medicalExam<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scoringGuide <span class=\"token operator\">=</span> scoringGuide<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>medicalExam<span class=\"token punctuation\">,</span> scoringGuide<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_healthLevel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_highMedicalRiskFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">scoreSmoking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_certificationGrade <span class=\"token operator\">=</span> <span class=\"token string\">'regular'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scoringGuide<span class=\"token punctuation\">.</span><span class=\"token function\">stateWithLowCertification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_candidate<span class=\"token punctuation\">.</span>originState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_certificationGrade <span class=\"token operator\">=</span> <span class=\"token string\">'low'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_result <span class=\"token operator\">-=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ...</span>\n    result <span class=\"token operator\">-=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_healthLevel <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">scoreSmoking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_medicalExam<span class=\"token punctuation\">.</span>isSmoker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_healthLevel <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_highMedicalRiskFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"1110-명령을-함수로-바꾸기\" style=\"position:relative;\"><a href=\"#1110-%EB%AA%85%EB%A0%B9%EC%9D%84-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"1110 명령을 함수로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.10 명령을 함수로 바꾸기</h2>\n<ul>\n<li>명령 객체는 복잡한 연산을 다룰 수 있는 강력한 메커니즘을 제공하지만, 로직이 크게 복잡하지 않다면 명령 객체는 평범한 함수로 바꿔주는 게 나음</li>\n</ul>\n<h3 id=\"절차-3\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-3\" aria-label=\"절차 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>명령을 생성하는 코드와 명령의 실행 메서드를 호출하는 코드를 함께 함수로 추출함</li>\n<li>명령의 실행 함수가 호출하는 보조 메서드 각각을 인라인함</li>\n<li>함수 선언 바꾸기를 적용하여 생성자의 매개변수 모두를 명령의 실행 메서드로 옮김</li>\n<li>명령의 실행 메서드에서 참조하는 필드들 대신 대응하는 매개변수를 사용하게끔 바꿈</li>\n<li>생성자 호출과 명령의 실행 메서드 호출을 호출자(대체 함수) 안으로 인라인함</li>\n<li>죽은 코드 제거하기로 명령 클래스를 없앰</li>\n</ol>\n<h3 id=\"예시-3\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-3\" aria-label=\"예시 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ChargeCalculator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer <span class=\"token operator\">=</span> customer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_usage <span class=\"token operator\">=</span> usage<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_provider <span class=\"token operator\">=</span> provide<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer<span class=\"token punctuation\">.</span>baseRate <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_usage<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">charge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseCharge <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_provider<span class=\"token punctuation\">.</span>connectionCharge<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> monthCharge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChargeCalculator</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>charge<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">charge</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> baseCharge <span class=\"token operator\">=</span> customer<span class=\"token punctuation\">.</span>baseRate <span class=\"token operator\">*</span> usage<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> baseCharge <span class=\"token operator\">+</span> provider<span class=\"token punctuation\">.</span>connectionCharge<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> monthCharge <span class=\"token operator\">=</span> <span class=\"token function\">charge</span><span class=\"token punctuation\">(</span>customer<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"1111-수정된-값-반환하기\" style=\"position:relative;\"><a href=\"#1111-%EC%88%98%EC%A0%95%EB%90%9C-%EA%B0%92-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"1111 수정된 값 반환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.11 수정된 값 반환하기</h2>\n<ul>\n<li>데이터가 수정된다면 그 사실을 명확히 알려주어서, 어느 함수가 무슨 일을 하는지 쉽게 알 수 있게 하는 일이 대단히 중요</li>\n<li>데이터가 수정됨을 알려주는 방법 중 하나는, 변수를 갱신하는 함수라면 수정된 값을 반환하여 호출자가 그 값을 변수에 담아두는 것</li>\n</ul>\n<h3 id=\"절차-4\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-4\" aria-label=\"절차 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>함수가 수정된 값을 반환하게 하여 호출자가 그 값을 자신의 변수에 저장</li>\n<li>피호출 함수 안에 반환할 값을 가리키는 새로운 변수를 선언</li>\n<li>계산이 선언과 동시에 이뤄지도록 통합(즉, 선언 시점에 계산 로직을 바로 실행해 대입)</li>\n<li>피호출 함수의 변수 이름을 새 역할에 어울리도록 바꿈</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">let</span> totalAscent <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">calculateAscent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateAscent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> points<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> verticalChange <span class=\"token operator\">=</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elevation <span class=\"token operator\">-</span> points<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elevation<span class=\"token punctuation\">;</span>\n    totalAscent <span class=\"token operator\">+=</span> verticalChange <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> verticalChange <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// calculateAscent() 안에서 totalAscent 가 갱신된다는 사실이 드러나지 않음</span>\n\n<span class=\"token comment\">// after</span>\n<span class=\"token keyword\">const</span> totalAscent <span class=\"token operator\">=</span> <span class=\"token function\">calculateAscent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateAscent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> points<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> verticalChange <span class=\"token operator\">=</span> points<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elevation <span class=\"token operator\">-</span> points<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>elevation<span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">+=</span> verticalChange <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> verticalChange <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"1112-오류-코드를-예외로-바꾸기\" style=\"position:relative;\"><a href=\"#1112-%EC%98%A4%EB%A5%98-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%98%88%EC%99%B8%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"1112 오류 코드를 예외로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.12 오류 코드를 예외로 바꾸기</h2>\n<ul>\n<li>예외는 프로그래밍 언어에서 제공하는 독립적인 오류 처리 메커니즘으로, 예외가 던져지면 적절한 예외 핸들러를 찾을 때까지 콜스택을 타고 위로 전파됨</li>\n<li>예외는 프로그램의 정상 동작 범주에 들지 않는 오류를 나타낼 때만 쓰여야 함</li>\n<li>예외를 던지는 코드를 프로그램 종료 코드로 바꿔도 프로그램은 여전히 정상 동작 해야함</li>\n<li>정상 동작하지 않을 것 같다면, 예외 대신 오류를 검출하여 프로그램을 정상 흐름으로 되돌리게끔 처리해야 함</li>\n</ul>\n<h3 id=\"절차-5\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-5\" aria-label=\"절차 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ul>\n<li>콜스택 상위에 해당 예외를 처리할 예외 핸들러를 작성</li>\n<li>해당 오류 코드를 대체할 예외와 그 밖의 예외를 구분할 식별 방법을 찾음</li>\n<li>정적 검사를 수행</li>\n<li><code class=\"language-text\">catch</code>절을 수정하여 직접 처리할 수 있는 예외는 적절히 대처하고, 그렇지 않은 예외는 다시 던짐. 오류 코드를 반환하는 곳 모두에서 예외를 던지도록 수정</li>\n<li>모두 수정했다면 그 오류 코드를 콜스택 위로 전달하는 코드를 모두 제거</li>\n</ul>\n<h3 id=\"예시-4\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-4\" aria-label=\"예시 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">localShippingRules</span><span class=\"token punctuation\">(</span>country<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> countryData<span class=\"token punctuation\">.</span>shippingRules<span class=\"token punctuation\">[</span>country<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShippingRules</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token comment\">// 이 코드는 국가 정보(country)가 유효한지를 이 함수 호출 전에 다 검증했다고 가정</span>\n<span class=\"token comment\">// 이 함수에서 오류가 난다면 무언가 잘못됐음을 뜻함</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateShippingCosts</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">const</span> shippingRules <span class=\"token operator\">=</span> <span class=\"token function\">localShippingRules</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shippingRules <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> shippingRules<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류 전파</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> status <span class=\"token operator\">=</span> <span class=\"token function\">calculateShippingCosts</span><span class=\"token punctuation\">(</span>orderData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> errorList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> order<span class=\"token operator\">:</span> orderData<span class=\"token punctuation\">,</span> errorCode<span class=\"token operator\">:</span> status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">localShippingRules</span><span class=\"token punctuation\">(</span>country<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> countryData<span class=\"token punctuation\">.</span>shippingRules<span class=\"token punctuation\">[</span>country<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShippingRules</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OrderProcessingError</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateShippingCosts</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n  <span class=\"token keyword\">const</span> shippingRules <span class=\"token operator\">=</span> <span class=\"token function\">localShippingRules</span><span class=\"token punctuation\">(</span>anOrder<span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">calculateShippingCosts</span><span class=\"token punctuation\">(</span>orderData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">OrderProcessingError</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    errorList<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> order<span class=\"token operator\">:</span> orderData<span class=\"token punctuation\">,</span> errorCode<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>code <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> e<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OrderProcessingError</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>errorCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">주문 처리 오류: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>errorCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> errorCode<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'OrderProcessingError'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"1113-예외를-사전확인으로-바꾸기\" style=\"position:relative;\"><a href=\"#1113-%EC%98%88%EC%99%B8%EB%A5%BC-%EC%82%AC%EC%A0%84%ED%99%95%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"1113 예외를 사전확인으로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.13 예외를 사전확인으로 바꾸기</h2>\n<ul>\n<li>함수 수행 시 문제가 될 수 있는 조건을 함수 호출 전에 검사할 수 있다면, 예외를 던지는 대신 호출하는 곳에서 조건을 검사하도록 해야 함</li>\n</ul>\n<h3 id=\"절차-6\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-6\" aria-label=\"절차 6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>예외를 유발하는 상황을 검사할 수 있는 조건문을 추가. <code class=\"language-text\">catch</code> 블록의 코드를 조건문의 조건절 중 하나로 옮기고, 남은 <code class=\"language-text\">try</code> 블록의 코드를 다른 조건절로 옮김</li>\n<li><code class=\"language-text\">catch</code> 블록에 어서션을 추가하고 테스트</li>\n<li><code class=\"language-text\">try</code>문과 <code class=\"language-text\">catch</code> 블록을 제거</li>\n</ol>\n<h3 id=\"예시java\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9Cjava\" aria-label=\"예시java permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시(Java)</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// ResourcePool 클래스.</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Resource</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Resource</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> available<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    allocated<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchElementException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> <span class=\"token class-name\">Resource</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    allocated<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Deque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Resource</span><span class=\"token punctuation\">></span></span> available<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Resource</span><span class=\"token punctuation\">></span></span> allocated<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>풀에서 자원이 고갈되는 건 예상치 못한 조건이 아님. 사용하기 전에 <code class=\"language-text\">allocated</code> 컬렉션의 상태를 쉽게 확인할 수 있음</li>\n</ul>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/89649360\">리팩터링 2판 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#117-%EC%84%B8%ED%84%B0-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\">11.7 세터 제거하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#118-%EC%83%9D%EC%84%B1%EC%9E%90%EB%A5%BC-%ED%8C%A9%ED%84%B0%EB%A6%AC-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.8 생성자를 팩터리 함수로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-1\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-1\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#119-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%AA%85%EB%A0%B9%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.9 함수를 명령으로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-2\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-2\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#1110-%EB%AA%85%EB%A0%B9%EC%9D%84-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.10 명령을 함수로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-3\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-3\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#1111-%EC%88%98%EC%A0%95%EB%90%9C-%EA%B0%92-%EB%B0%98%ED%99%98%ED%95%98%EA%B8%B0\">11.11 수정된 값 반환하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-4\">절차</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#1112-%EC%98%A4%EB%A5%98-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%98%88%EC%99%B8%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.12 오류 코드를 예외로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-5\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-4\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#1113-%EC%98%88%EC%99%B8%EB%A5%BC-%EC%82%AC%EC%A0%84%ED%99%95%EC%9D%B8%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">11.13 예외를 사전확인으로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-6\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9Cjava\">예시(Java)</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 20, 2023","title":"리팩터링 11장-2","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/refactoring-11-2/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/write-log-231014/","nextSlug":"/refactoring-11-1/","prevSlug":"/refactoring-11-2/"}},"staticQueryHashes":["1073350324","2938748437"]}