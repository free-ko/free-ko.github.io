{"componentChunkName":"component---src-templates-blog-template-js","path":"/reflow-repaint/","result":{"data":{"cur":{"id":"28a89fe0-ff00-5ab7-a632-706d30889ba2","html":"<h1 id=\"브라우저-렌더링-과정\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95\" aria-label=\"브라우저 렌더링 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저 렌더링 과정</h1>\n<p>브라우저 렌더링 과정은 웹페이지를 표시하는 데 필요한 리소스를 다운로드하고 화면에 표시하는 과정을 크게 4단계로 나눌 수 있습니다.</p>\n<ol>\n<li>\n<p><strong>DOM + CSSOM 생성</strong></p>\n<ul>\n<li>DOM (Document Object Model): HTML 파일을 분석하여 브라우저가 이해할 수 있는 DOM 트리를 만듭니다. 각 HTML 요소가 노드로 변환되어 트리 구조를 형성합니다.</li>\n<li>CSSOM (CSS Object Model): CSS 파일을 분석하여 CSSOM 트리를 생성합니다. 이 트리는 CSS 규칙을 이해하고 각 DOM 요소에 스타일을 적용할 수 있도록 도와줍니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>Layout</strong></p>\n<ul>\n<li>DOM과 CSSOM 트리를 조합하여 렌더 트리를 생성합니다.</li>\n<li>각 요소의 위치와 크기를 계산하고 화면에 요소들을 배치합니다. 이 과정을 통해 브라우저는 각 요소가 화면에서 어디에 위치할지 결정합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>Paint</strong></p>\n<ul>\n<li>레이아웃 과정에서 배치된 요소에 색을 칠하고, 그림자나 테두리 같은 시각적 스타일을 적용합니다.</li>\n<li>이 단계에서 레이어로 요소를 분리하여, 이후의 단계에서 더 효율적으로 합칠 수 있도록 준비합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>Composite</strong></p>\n<ul>\n<li>페인트 단계에서 분리된 레이어들을 GPU가 처리할 수 있도록 각각 합성합니다. 이 과정은 하드웨어 가속을 사용하여 더 빠르게 화면에 그려지도록 도와줍니다.</li>\n</ul>\n</li>\n</ol>\n<br />\n<h1 id=\"reflow와-repaint\" style=\"position:relative;\"><a href=\"#reflow%EC%99%80-repaint\" aria-label=\"reflow와 repaint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reflow와 Repaint</h1>\n<h3 id=\"reflow\" style=\"position:relative;\"><a href=\"#reflow\" aria-label=\"reflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reflow</h3>\n<ul>\n<li>리플로우는 브라우저가 렌더링 과정을 재실행하는 과정입니다.</li>\n<li>화면 요소의 크기나 위치가 변경되면, 레이아웃을 다시 계산해야 하므로 DOM과 CSSOM 트리도 다시 처리됩니다.</li>\n<li>리플로우는 성능에 영향을 줄 수 있기 때문에 자주 발생하지 않도록 최적화가 필요합니다.</li>\n<li>\n<p>리플로우를 발생시키는 CSS 속성들</p>\n<ul>\n<li><code class=\"language-text\">position, display, width, height, margin, padding, font-size</code> 등 레이아웃에 영향을 미치는 속성들.</li>\n</ul>\n</li>\n</ul>\n<br />\n<h3 id=\"repaint\" style=\"position:relative;\"><a href=\"#repaint\" aria-label=\"repaint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repaint</h3>\n<ul>\n<li>리페인트는 화면 요소의 시각적 스타일만 변경되었을 때 발생하는 과정입니다. 레이아웃을 다시 계산하지 않고, 색상이나 배경 이미지와 같은 시각적 속성만 다시 그려집니다.</li>\n<li>리플로우보다 빠르지만 여전히 성능에 영향을 미칠 수 있으므로 빈번한 리페인트는 피하는 것이 좋습니다.</li>\n<li>\n<p>리페인트를 발생시키는 CSS 속성들</p>\n<ul>\n<li><code class=\"language-text\">background, color, border, box-shadow, outline</code> 등 시각적 스타일에만 영향을 미치는 속성들.</li>\n</ul>\n</li>\n</ul>\n<br />\n<h1 id=\"reflow-repaint-줄이는-방법\" style=\"position:relative;\"><a href=\"#reflow-repaint-%EC%A4%84%EC%9D%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"reflow repaint 줄이는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reflow, Repaint 줄이는 방법</h1>\n<p><strong>CSS 속성 활용</strong></p>\n<ol>\n<li><code class=\"language-text\">transform</code>과 <code class=\"language-text\">opacity</code> 같은 속성은 레이아웃에 영향을 주지 않으므로 리플로우나 리페인트를 발생시키지 않고 성능을 최적화할 수 있습니다.</li>\n<li>\n<p><code class=\"language-text\">transform: translate3d()</code>와 <code class=\"language-text\">will-change</code> 사용</p>\n<ul>\n<li><code class=\"language-text\">transform: translate3d()</code> 또는 <code class=\"language-text\">scale3d()</code>를 사용하면, 브라우저는 요소를 처음부터 레이어로 분리하여 변화를 더욱 빠르게 처리할 수 있습니다.</li>\n<li><code class=\"language-text\">will-change</code> 속성을 사용하여 미리 어떤 변화가 일어날지 브라우저에 알려줌으로써 최적화를 더욱 강화할 수 있습니다. 단, 너무 많은 레이어가 있으면 메모리 사용량이 증가할 수 있으므로 주의가 필요합니다.</li>\n</ul>\n</li>\n</ol>\n<p>이러한 속성들은 브라우저가 별도의 레이어로 처리하며, 이를 GPU에 위임해 하드웨어 가속을 사용할 수 있습니다.</p>\n<br />\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://product.kyobobook.co.kr/detail/S000200178292?utm_source=google&#x26;utm_medium=cpc&#x26;utm_campaign=googleSearch&#x26;gt_network=g&#x26;gt_keyword=&#x26;gt_target_id=aud-901091942354:dsa-435935280379&#x26;gt_campaign_id=9979905549&#x26;gt_adgroup_id=132556570510&#x26;gclid=Cj0KCQjw7PCjBhDwARIsANo7CglhTltoHznK7vMGKndqxx8dhWe4eeyj3wbqyiz3MaqZ4V8EEYQ8rRAaAjRDEALw_wcB\">책 - 프론트엔드 성능 최적화 가이드</a></li>\n</ul>","excerpt":"브라우저 렌더링 과정 브라우저 렌더링 과정은 웹페이지를 표시하는 데 필요한 리소스를 다운로드하고 화면에 표시하는 과정을 크게 4단계로 나눌 수 있습니다. DOM + CSSOM 생성 DOM (Document Object Model): HTML 파일을 분석하여 브라우저가 이해할 수 있는 DOM 트리를 만듭니다. 각 HTML 요소가 노드로 변환되어 트리 구조를 형성합니다. CSSOM (CSS Object Model): CSS 파일을 분석하여 CSSOM 트리를 생성합니다. 이 트리는 CSS 규칙을 이해하고 각 DOM 요소에 스타일을 적용할 수 있도록 도와줍니다. Layout DOM과 CSSOM 트리를 조합하여 렌더 트리를 생성합니다. 각 요소의 위치와 크기를 계산하고 화면에 요소들을 배치합니다. 이 과정을 통해 브라우저는 각 요소가 화면에서 어디에 위치할지 결정합니다. Paint 레이아웃 과정에서 배치된 요소에 색을 칠하고, 그림자나 테두리 같은 시각적 스타일을 적용합니다. 이 단계에서 …","frontmatter":{"date":"October 22, 2024","title":"Reflow와 Repaint 차이","categories":"TIL","author":"Kay","emoji":"👋"},"fields":{"slug":"/reflow-repaint/"}},"next":{"id":"928b40ef-aabd-512d-acd7-fcc1b06f75a9","html":"<h1 id=\"글또-10기를-시작하면서\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%98%90-10%EA%B8%B0%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%A9%B4%EC%84%9C\" aria-label=\"글또 10기를 시작하면서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글또 10기를 시작하면서</h1>\n<p>매번 바쁘다는 핑계로 지난 기수에서는 글또 활동을 충분히 하지 못했다.\n이번 기수는 마지막이라는 생각에, 그동안 아쉬웠던 부분을 채우고, 적극적으로 참여하고자 한다.\n특히 이번 글또를 통해 글쓰는 즐거움을 찾고 싶다. 글을 자연스럽게 표현하는 것이 개발뿐만 아니라 삶에도 큰 도움이 될 것이라고 믿기 때문이다.</p>\n<br/>\n<h1 id=\"글또-10기가-끝났을-때-나의-모습\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%98%90-10%EA%B8%B0%EA%B0%80-%EB%81%9D%EB%82%AC%EC%9D%84-%EB%95%8C-%EB%82%98%EC%9D%98-%EB%AA%A8%EC%8A%B5\" aria-label=\"글또 10기가 끝났을 때 나의 모습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글또 10기가 끝났을 때 나의 모습</h1>\n<h3 id=\"1-글쓰기-매력을-느낀다\" style=\"position:relative;\"><a href=\"#1-%EA%B8%80%EC%93%B0%EA%B8%B0-%EB%A7%A4%EB%A0%A5%EC%9D%84-%EB%8A%90%EB%82%80%EB%8B%A4\" aria-label=\"1 글쓰기 매력을 느낀다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 글쓰기 매력을 느낀다.</h3>\n<p>개인적으로 좋아하는 개발자 분들이 글쓰기의 중요성을 강조하는 것을 보고, 나 역시 공감했다. 단순한 의무감이 아니라 글쓰기의 매력을 발견하고, 이를 통해 개발뿐만 아니라 삶 전반에도 긍정적인 변화를 줄 수 있다고 생각한다. 그리고 언젠가는 많은 사람들에게 좋은 영향을 주는 글을 써보고 싶다.</p>\n<h3 id=\"2-개발관련-글쓰기를-2주안에-최소-1번-작성한다\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9C%EB%B0%9C%EA%B4%80%EB%A0%A8-%EA%B8%80%EC%93%B0%EA%B8%B0%EB%A5%BC-2%EC%A3%BC%EC%95%88%EC%97%90-%EC%B5%9C%EC%86%8C-1%EB%B2%88-%EC%9E%91%EC%84%B1%ED%95%9C%EB%8B%A4\" aria-label=\"2 개발관련 글쓰기를 2주안에 최소 1번 작성한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 개발관련 글쓰기를 2주안에 최소 1번 작성한다.</h3>\n<p>솔직히 말하면, 개발과 관련된 글을 쓰는 것이 어렵게 느껴진다. ‘혹시라도 내가 쓴 글에 잘못된 내용이 있으면 어떡하지?‘라는 두려움때문에 더욱 키보드에 손이 잘 가지 않는다.\n하지만 이런 두려움을 계속 가지고 있다면, 내가 바라는 모습에 다가갈 수 없을 것이다. 이번 기회에 두려움을 잠시 내려놓고, 솔직하게 글을 쓰고, 피드백을 받아 개선하는 과정을 통해 글쓰기 실력을 키우고 싶다.</p>\n<p>그래서 결과적으로 내가 일하면서 겪었던 문제를 해결한 부분을 글로 잘 풀어서 다른 개발자분들에게 좋은 영향을 주고 싶다.</p>\n<h3 id=\"3-개발에-대한-즐거움을-되찾는다\" style=\"position:relative;\"><a href=\"#3-%EA%B0%9C%EB%B0%9C%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A6%90%EA%B1%B0%EC%9B%80%EC%9D%84-%EB%90%98%EC%B0%BE%EB%8A%94%EB%8B%A4\" aria-label=\"3 개발에 대한 즐거움을 되찾는다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 개발에 대한 즐거움을 되찾는다.</h3>\n<p>내가 관심 없는 글을 읽는 것은 어렵고, 업무와 관련된 글이라면 더더욱 그렇다. 하지만 글또에서 다른 사람들이 쓴 글을 읽으며 새로운 것을 배우고, 내가 잘못 알고 있던 부분을 깨닫는 경험을 통해 글 읽는 즐거움과 개발에 대한 호기심을 되찾고 싶다. 글의 길이와 가독성에 얽매이지 않고, 열린 마음으로 읽고 배우다 보면 글또 10기가 끝날 즈음에는 내가 바라는 모습(퓨처셀프)에 한 걸음 더 가까워져 있을 거라 생각한다.</p>\n<h3 id=\"4-다양한-사람과-좋은-관계를-만든다\" style=\"position:relative;\"><a href=\"#4-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%82%AC%EB%9E%8C%EA%B3%BC-%EC%A2%8B%EC%9D%80-%EA%B4%80%EA%B3%84%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"4 다양한 사람과 좋은 관계를 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 다양한 사람과 좋은 관계를 만든다.</h3>\n<p>다른 분들의 개발 글을 보며 다양한 인사이트를 얻고 싶다. 또한 외부 활동을 통해 여러 사람들과 대화를 나누며, 내가 해보지 못했던 경험들을 간접적으로 경험하고 싶다.\n더 나아가, 나의 이야기가 누군가에게 긍정적인 영향을 주었으면 한다. 이런 과정을 통해 글또 10기 활동이 끝난 후에도, 지속적인 대화와 활동으로 글또 멤버들과 좋은 관계를 이어가고 싶다.</p>\n<br>\n<h1 id=\"도전-할-것들\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%A0%84-%ED%95%A0-%EA%B2%83%EB%93%A4\" aria-label=\"도전 할 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도전 할 것들</h1>\n<p>이번에는 꼭 ‘커피챗’과 ‘오프라인 반상회’에 참여하여 다른 분들의 이야기를 듣고 인사이트를 얻고 싶다.\n또한, 그 자리에서 서로가 겪는 어려움을 나누며 위로받고 싶다. ‘나만 힘든 게 아니구나’라는 공감과 위로를 직접 대면을 통해 느끼면, 마음이 한결 가벼워질 것 같다.\n이번 글또에서는 가벼운 마음으로 천천히, 그러나 꾸준히 글쓰기를 이어가며 나의 다짐을 실천해보고자 한다.</p>\n<br/>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<p><a href=\"https://www.notion.so/ac5b18a482fb4df497d4e8257ad4d516\">글또 소개</a></p>","frontmatter":{"date":"October 09, 2024","title":"글또 10기 - 다짐","categories":"Study","author":"Kay","emoji":"✍️"},"fields":{"slug":"/study-geulddo-10-OT/"}},"prev":{"id":"8517aa45-6bed-519e-bae3-05b25fc34422","html":"<br>\n<h1 id=\"1-foucflash-of-unstyled-content란\" style=\"position:relative;\"><a href=\"#1-foucflash-of-unstyled-content%EB%9E%80\" aria-label=\"1 foucflash of unstyled content란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. FOUC(Flash of Unstyled Content)란?</h1>\n<p>FOUC란 <code class=\"language-text\">Flash of Unstyled Content</code>의 약자로, 페이지가 로드될 때 스타일이 적용되지 않은 상태의 콘텐츠가 잠깐 깜빡이는 현상을 뜻합니다. 주로 서버 사이드 렌더링(SSR) 환경에서 발생하며, HTML이 먼저 렌더링되고 이후에 CSS가 로드되기 때문에 발생합니다.</p>\n<p>예시: 로딩 애니메이션이 있는 페이지가 있을 때, FOUC가 발생하면 스타일이 적용되지 않은 HTML이 잠깐 노출될 수 있습니다. 이는 사용자 경험에 좋지 않은 영향을 줄 수 있어, 초기 스타일을 잘 적용해 깜빡임을 최소화하는 것이 중요합니다.</p>\n<br>\n<h1 id=\"2-emotion-사용-시-fouc-발생-원인\" style=\"position:relative;\"><a href=\"#2-emotion-%EC%82%AC%EC%9A%A9-%EC%8B%9C-fouc-%EB%B0%9C%EC%83%9D-%EC%9B%90%EC%9D%B8\" aria-label=\"2 emotion 사용 시 fouc 발생 원인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Emotion 사용 시 FOUC 발생 원인</h1>\n<p>Emotion과 같은 CSS-in-JS 라이브러리는 SSR 환경에서 자주 FOUC 문제를 일으킵니다. SSR에서는 서버가 HTML을 먼저 렌더링한 후, 클라이언트에서 JavaScript로 CSS를 동적으로 로드합니다. 이 때문에 초기 렌더링 시 클라이언트와 서버 간의 스타일 불일치가 발생하여 스타일이 적용되지 않은 콘텐츠가 노출됩니다.</p>\n<br>\n<h1 id=\"3-fouc-해결-방법\" style=\"position:relative;\"><a href=\"#3-fouc-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"3 fouc 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. FOUC 해결 방법</h1>\n<p>FOUC 문제를 해결하기 위해 두 가지 방법을 함께 사용합니다. 하나는 <code class=\"language-text\">DisableTransitionsOnLoad</code> 컴포넌트를 사용하여 초기 css의 <code class=\"language-text\">transition(전환)</code>효과를 비활성화하는 것이고, 다른 하나는 NextJS <code class=\"language-text\">_document.tsx</code>에서 Emotion의 SSR 설정을 최적화하여 서버에서 스타일을 미리 추출하는 방법입니다.</p>\n<br>\n<h1 id=\"4-disabletransitionsonload-컴포넌트로-초기-전환-효과-비활성화\" style=\"position:relative;\"><a href=\"#4-disabletransitionsonload-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A1%9C-%EC%B4%88%EA%B8%B0-%EC%A0%84%ED%99%98-%ED%9A%A8%EA%B3%BC-%EB%B9%84%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"4 disabletransitionsonload 컴포넌트로 초기 전환 효과 비활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. DisableTransitionsOnLoad 컴포넌트로 초기 전환 효과 비활성화</h1>\n<p>전환 효과는 요소의 스타일이 변경될 때 시각적으로 부드럽게 보이도록 돕는 CSS 효과입니다. 그러나 초기 로딩 시 전환 효과가 활성화되어 있으면 FOUC와 겹쳐 보이면서 깜빡임 현상이 더욱 두드러질 수 있습니다. 이를 방지하기 위해, 초기 로딩 시 전환 효과를 비활성화하고 이후 활성화하여 깔끔한 화면을 제공할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DisableTransitionsOnLoad</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isTransitionAllowed<span class=\"token punctuation\">,</span> setIsTransitionAllowed<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setIsTransitionAllowed</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 컴포넌트가 마운트된 후 전환 효과 활성화</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isTransitionAllowed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 전환 효과 활성화 시 스타일 제거</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span>\n      <span class=\"token attr-name\">dangerouslySetInnerHTML</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        __html<span class=\"token operator\">:</span> <span class=\"token string\">'*, *::before, *::after { transition: none !important; }'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> DisableTransitionsOnLoad<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>구현 설명:</p>\n<ol>\n<li>초기 전환 비활성화: <code class=\"language-text\">dangerouslySetInnerHTML</code>로 모든 요소에 대해 <code class=\"language-text\">transition: none</code> 스타일을 적용하여 전환 효과를 비활성화합니다.</li>\n<li><code class=\"language-text\">useEffect</code>로 전환 활성화: useEffect로 컴포넌트가 처음 로드된 후 <code class=\"language-text\">isTransitionAllowed</code> 상태를 true로 설정하여 스타일 비활성화를 해제합니다.</li>\n<li>조건부 렌더링: <code class=\"language-text\">isTransitionAllowed</code>가 <code class=\"language-text\">true</code>가 되면 <code class=\"language-text\">&lt;style></code> 태그가 제거되고 전환 효과가 다시 활성화됩니다.</li>\n</ol>\n</li>\n<li>이 컴포넌트를 초기 로딩에 적용하면, 로딩 중에는 전환 효과가 비활성화되며, 이후에는 원래 전환 스타일로 복구됩니다.</li>\n</ul>\n<br>\n<h1 id=\"5-code-classlanguage-text_documenttsxcode-설정으로-ssr-스타일-최적화\" style=\"position:relative;\"><a href=\"#5-code-classlanguage-text_documenttsxcode-%EC%84%A4%EC%A0%95%EC%9C%BC%EB%A1%9C-ssr-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"5 code classlanguage text_documenttsxcode 설정으로 ssr 스타일 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. <code class=\"language-text\">_document.tsx</code> 설정으로 SSR 스타일 최적화</h1>\n<p>SSR 환경에서 Emotion의 스타일을 미리 추출하여 클라이언트와 동일한 스타일을 제공하면 초기 스타일 불일치로 인한 FOUC 문제를 완화할 수 있습니다. 이를 위해 <code class=\"language-text\">_document.tsx</code>에서 캐시와 스타일을 미리 설정합니다.</p>\n<ol>\n<li>\n<p><code class=\"language-text\">createCache</code>와 <code class=\"language-text\">CacheProvider</code>로 Emotion 캐시 생성</p>\n<ul>\n<li>Emotion에서 SSR 환경에서 스타일을 캐시하여 일관된 스타일을 유지하려면 <code class=\"language-text\">CacheProvider</code>와 <code class=\"language-text\">createCache</code>를 사용합니다. 이를 통해 동일한 캐시가 클라이언트와 서버에서 공유됩니다.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">extractCritical</code>을 사용하여 서버에서 CSS 추출</p>\n<ul>\n<li><code class=\"language-text\">@emotion/server</code>의 <code class=\"language-text\">extractCritical</code> 메서드를 사용하면, HTML에서 필요한 스타일만 추출하여 초기 로딩 시 클라이언트에 전달할 수 있습니다.</li>\n</ul>\n</li>\n</ol>\n<p>아래는 Next.js 프로젝트에서 <code class=\"language-text\">_document.tsx</code>를 설정하는 방법입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// pages/_document.tsx</span>\n<span class=\"token keyword\">import</span> Document<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Html<span class=\"token punctuation\">,</span> Head<span class=\"token punctuation\">,</span> Main<span class=\"token punctuation\">,</span> NextScript <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/document'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> createEmotionServer <span class=\"token keyword\">from</span> <span class=\"token string\">'@emotion/server/create-instance'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CacheProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@emotion/react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> createCache <span class=\"token keyword\">from</span> <span class=\"token string\">'@emotion/cache'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cache <span class=\"token operator\">=</span> <span class=\"token function\">createCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token operator\">:</span> <span class=\"token string\">'next'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 캐시 생성</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> extractCritical <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">createEmotionServer</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> initialProps <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Document<span class=\"token punctuation\">.</span><span class=\"token function\">getInitialProps</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 기본 초기 속성 가져오기</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">renderPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 페이지 렌더링</span>\n    <span class=\"token keyword\">const</span> emotionStyles <span class=\"token operator\">=</span> <span class=\"token function\">extractCritical</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 스타일 추출</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>initialProps<span class=\"token punctuation\">,</span>\n      styles<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>initialProps<span class=\"token punctuation\">.</span>styles<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span>\n            <span class=\"token attr-name\">data-emotion</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">css </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>emotionStyles<span class=\"token punctuation\">.</span>ids<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">dangerouslySetInnerHTML</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token operator\">:</span> emotionStyles<span class=\"token punctuation\">.</span>css <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Html</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Head</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/favicon.ico<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Head</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CacheProvider</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>cache<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Main</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CacheProvider</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NextScript</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Html</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> MyDocument<span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p>캐시 생성 및 설정:</p>\n<ul>\n<li><code class=\"language-text\">createCache</code>로 ‘next’라는 키로 Emotion 캐시를 생성합니다.</li>\n<li>캐시를 <code class=\"language-text\">&lt;CacheProvider value={cache}></code>로 감싸 Next.js와 Emotion이 SSR에서도 동일한 캐시를 사용하도록 설정합니다.</li>\n</ul>\n</li>\n<li>\n<p>스타일 추출 및 삽입:</p>\n<ul>\n<li><code class=\"language-text\">extractCritical</code> 메서드로 HTML에서 필요한 스타일만 추출하여 CSS와 ID 목록을 반환합니다.</li>\n<li><code class=\"language-text\">getInitialProps</code> 메서드에서 <code class=\"language-text\">&lt;style></code> 태그를 생성하고, <code class=\"language-text\">dangerouslySetInnerHTML</code>을 사용해 CSS를 HTML에 직접 삽입해 클라이언트에서 동일한 스타일을 바로 적용하도록 합니다.</li>\n</ul>\n</li>\n<li>\n<p>FOUC 방지:</p>\n<ul>\n<li><code class=\"language-text\">data-emotion=\"css ...\"</code> 속성으로 클라이언트와 서버가 동일한 스타일을 참조하게 하여, 초기 로딩 시 FOUC 현상을 방지합니다.</li>\n</ul>\n</li>\n</ol>\n<br>\n<h1 id=\"6-적용-및-요약\" style=\"position:relative;\"><a href=\"#6-%EC%A0%81%EC%9A%A9-%EB%B0%8F-%EC%9A%94%EC%95%BD\" aria-label=\"6 적용 및 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 적용 및 요약</h1>\n<ul>\n<li><code class=\"language-text\">DisableTransitionsOnLoad</code> 컴포넌트를 통해 초기 로딩 중 전환 효과를 비활성화하여 깜빡임 현상을 줄입니다.</li>\n<li><code class=\"language-text\">_document.tsx</code> 설정에서 Emotion의 SSR 스타일을 미리 추출하여 클라이언트와 서버의 스타일 불일치를 방지합니다.</li>\n</ul>\n<br>","frontmatter":{"date":"November 09, 2024","title":"Emotion을 사용할 때 발생하는 FOUC 문제 해결 방법","categories":"Study","author":"Kay","emoji":"🌈"},"fields":{"slug":"/fouc-study/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/reflow-repaint/","nextSlug":"/study-geulddo-10-OT/","prevSlug":"/fouc-study/"}},"staticQueryHashes":["1073350324","2938748437"]}