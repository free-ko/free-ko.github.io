{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-bit-1/","result":{"data":{"cur":{"id":"1b94842d-1fcc-56d9-ac5e-1e0314cf85f2","html":"<br>\n<h1 align=\"center\">\n  👋  Bit 연산자 - 비트, 바이트, 2진수 연산, 사인 비트, 음수 표현\n</h1>\n<br>\n<h2 id=\"1-개요\" style=\"position:relative;\"><a href=\"#1-%EA%B0%9C%EC%9A%94\" aria-label=\"1 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 개요</h2>\n<ul>\n<li>바이너리(Binary) 데이터 처리를 다룸</li>\n<li>\n<p>4개 섹션</p>\n<ul>\n<li>비트 연산자</li>\n<li>ArrayBufer</li>\n<li>TypedArray</li>\n<li>DataView</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-비트-바이트\" style=\"position:relative;\"><a href=\"#2-%EB%B9%84%ED%8A%B8-%EB%B0%94%EC%9D%B4%ED%8A%B8\" aria-label=\"2 비트 바이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 비트, 바이트</h2>\n<ul>\n<li>\n<p>값 표현의 기본 단위는 바이트(Byte)</p>\n<ul>\n<li>1바이트는 8비트(Bit)이며</li>\n<li>1비트 값은 0 아니면 1</li>\n</ul>\n</li>\n<li>비트 연산은 연산 속도가 빠름</li>\n<li>정수 연산만 가능, 소수 연산 불가</li>\n<li>\n<p>JS의 비트 연산 범위</p>\n<ul>\n<li>4바이트, 32비트</li>\n<li>-2의 32승 ~ 2의 32승 -1</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"3-2진수-연산\" style=\"position:relative;\"><a href=\"#3-2%EC%A7%84%EC%88%98-%EC%97%B0%EC%82%B0\" aria-label=\"3 2진수 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 2진수 연산</h2>\n<ul>\n<li>\n<p>아래는 사인 부호가 없는 형태임</p>\n<ul>\n<li>비트 값은 비트가 1일 때의 값, 2^n승</li>\n<li>누적 값은 9번 미트에서 해당 비트까지 전부 1일 때의 값</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"4-사인-비트\" style=\"position:relative;\"><a href=\"#4-%EC%82%AC%EC%9D%B8-%EB%B9%84%ED%8A%B8\" aria-label=\"4 사인 비트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 사인 비트</h2>\n<ul>\n<li>양수, 음수 부호를 나타내는 비트임</li>\n<li>7번 비트가 0이면 양수이고, 1이면 음수</li>\n<li>4바이트는 31번 비트가 사인 비트</li>\n<li>MSB: Most Significatn Bit</li>\n<li>\n<p>양수 표현 형태와 값</p>\n<ul>\n<li>7번(MSB) 비트가 0이며, 최댓값은 127</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"5-음수-표현\" style=\"position:relative;\"><a href=\"#5-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84\" aria-label=\"5 음수 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 음수 표현</h2>\n<ul>\n<li>MSB인 7번 비트 값이 1임</li>\n<li>누적값은 6번 비트의 누적 값 -127에 -1을 더함</li>\n<li>\n<p>1바이트 값 표현 범위</p>\n<ul>\n<li>사인을 사용하지 않음 : 255</li>\n<li>사인 사용 : -128 ~ +128</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EA%B0%9C%EC%9A%94\">1. 개요</a></li>\n<li><a href=\"#2-%EB%B9%84%ED%8A%B8-%EB%B0%94%EC%9D%B4%ED%8A%B8\">2. 비트, 바이트</a></li>\n<li><a href=\"#3-2%EC%A7%84%EC%88%98-%EC%97%B0%EC%82%B0\">3. 2진수 연산</a></li>\n<li><a href=\"#4-%EC%82%AC%EC%9D%B8-%EB%B9%84%ED%8A%B8\">4. 사인 비트</a></li>\n<li><a href=\"#5-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84\">5. 음수 표현</a></li>\n</ul>\n</div>","excerpt":"1. 개요 바이너리(Binary) 데이터 처리를 다룸 4개 섹션 비트 연산자 ArrayBufer TypedArray DataView 2. 비트, 바이트 값 표현의 기본 단위는 바이트(Byte) 1바이트는 8비트(Bit)이며 1비트 값은 0 아니면 1 비트 연산은 연산 속도가 빠름 정수 연산만 가능, 소수 연산 불가 JS의 비트 연산 범위 4바이트, 32비트 -2의 32승 ~ 2의 32승 -1 3. 2진수 연산 아래는 사인 부호가 없는 형태임 비트 값은 비트가 1일 때의 값, 2^n승 누적 값은 9번 미트에서 해당 비트까지 전부 1일 때의 값 4. 사인 비트 양수, 음수 부호를 나타내는 비트임 7번 비트가 0이면 양수이고, 1이면 음수 4바이트는 31번 비트가 사인 비트 MSB: Most Significatn Bit 양수 표현 형태와 값 7번(MSB) 비트가 0이며, 최댓값은 127 5. 음수 표현 MSB인 7번 비트 값이 1임 누적값은 6번 비트의 누적 값 -127에 -1을 더함 …","frontmatter":{"date":"December 25, 2021","title":"Bit 연산자 - 비트, 바이트, 2진수 연산, 사인 비트, 음수 표현","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-bit-1/"}},"next":{"id":"adf3ae6e-8d96-5f68-9289-373280d5a3b6","html":"<br>\n<h1 align=\"center\">\n  👋  HTTP 헤더 개요\n</h1>\n<br>\n<h2 id=\"1-http-헤더\" style=\"position:relative;\"><a href=\"#1-http-%ED%97%A4%EB%8D%94\" aria-label=\"1 http 헤더 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. HTTP 헤더</h2>\n<ul>\n<li>header-field = field-name ”:” OWS field-value OWS (OWS:띄어쓰기 허용)</li>\n<li>field-name은 대소문자 구문 없음</li>\n</ul>\n<br>\n<h2 id=\"2-http-헤더-용도\" style=\"position:relative;\"><a href=\"#2-http-%ED%97%A4%EB%8D%94-%EC%9A%A9%EB%8F%84\" aria-label=\"2 http 헤더 용도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. HTTP 헤더 용도</h2>\n<ul>\n<li>\n<p>HTTP 전송에 필요한 모든 부가정보</p>\n<ul>\n<li>ex) 메시지 마디의 내용, 메시지 바다의 크기, 압축, 인증, 요청 클라이언트, 서버 정보, 캐시 관리 정보 등</li>\n</ul>\n</li>\n<li>표준 헤더가 너무 많음</li>\n<li>필요시 임의의 헤더 추가 기능 ex) helloworld: hihi</li>\n</ul>\n<br>\n<h2 id=\"3http-헤더-분류---과거\" style=\"position:relative;\"><a href=\"#3http-%ED%97%A4%EB%8D%94-%EB%B6%84%EB%A5%98---%EA%B3%BC%EA%B1%B0\" aria-label=\"3http 헤더 분류   과거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.HTTP 헤더 분류 - 과거</h2>\n<ol>\n<li>General 헤더 : 메시지 전체에 적용되는 정보 ex) Connection: close</li>\n<li>Request 헤더 : 요청 정보 ex) User-Agent: Mozilla/5.0</li>\n<li>Response 헤더 : 응답 정보 ex) Server: Apache</li>\n<li>Entity 헤더 : 엔티티 바디 정보 ex) Content-Type: text/html, Content-Length: 3423</li>\n</ol>\n<br>\n<h2 id=\"4http-body---과거\" style=\"position:relative;\"><a href=\"#4http-body---%EA%B3%BC%EA%B1%B0\" aria-label=\"4http body   과거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.HTTP Body - 과거</h2>\n<ol>\n<li>메시지 본문은 엔티티 본문을 전달하는 사용</li>\n<li>엔티티 본문은 요청이나 응답에서 전달할 실제 데이터</li>\n<li>\n<p>엔티티 헤더는 엔티티 본문의 데이터를 해석할 수 있는 정보 제공</p>\n<ul>\n<li>데이터 유형(Html, Json), 데이터 길이, 압축 정보 등</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"5-rfc723x-변화\" style=\"position:relative;\"><a href=\"#5-rfc723x-%EB%B3%80%ED%99%94\" aria-label=\"5 rfc723x 변화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. RFC723x 변화</h2>\n<ul>\n<li>엔티티(Entity) —> 표현(Representation)</li>\n<li>Representation = representation Metadata + Representation Data</li>\n<li>표현 = 표현 메타 데이터 + 표현 데이터</li>\n</ul>\n<br>\n<h2 id=\"6-http-body---현재\" style=\"position:relative;\"><a href=\"#6-http-body---%ED%98%84%EC%9E%AC\" aria-label=\"6 http body   현재 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. HTTP BODY - 현재</h2>\n<ol>\n<li>메시지 본문을 통해 표현 데이터 전달</li>\n<li>메시지 본문 = 페이로드</li>\n<li>표현은 요청이나 응답에서 전달할 실제 데이터</li>\n<li>\n<p>표현 헤더는 표현 데이터를 해석할 수 있는 정보 제공</p>\n<ul>\n<li>데이터 유형, 데이터 길이, 압축 정보 등</li>\n</ul>\n</li>\n<li>참고 : 표현 헤더는 표현 메타 데이터와, 페이로드 메시지를 구분해야 함</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-http-%ED%97%A4%EB%8D%94\">1. HTTP 헤더</a></li>\n<li><a href=\"#2-http-%ED%97%A4%EB%8D%94-%EC%9A%A9%EB%8F%84\">2. HTTP 헤더 용도</a></li>\n<li><a href=\"#3http-%ED%97%A4%EB%8D%94-%EB%B6%84%EB%A5%98---%EA%B3%BC%EA%B1%B0\">3.HTTP 헤더 분류 - 과거</a></li>\n<li><a href=\"#4http-body---%EA%B3%BC%EA%B1%B0\">4.HTTP Body - 과거</a></li>\n<li><a href=\"#5-rfc723x-%EB%B3%80%ED%99%94\">5. RFC723x 변화</a></li>\n<li><a href=\"#6-http-body---%ED%98%84%EC%9E%AC\">6. HTTP BODY - 현재</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 25, 2021","title":"HTTP - 7.HTTP 일반 헤더(1)","categories":"CS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-cs-HTTP-14/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-bit-1/","nextSlug":"/study-cs-HTTP-14/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}