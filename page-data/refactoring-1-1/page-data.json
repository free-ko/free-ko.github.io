{"componentChunkName":"component---src-templates-blog-template-js","path":"/refactoring-1-1/","result":{"data":{"cur":{"id":"10d0f3fe-9002-558e-a444-ef16b7d66239","html":"<h2 id=\"12-예시-프로그램\" style=\"position:relative;\"><a href=\"#12-%EC%98%88%EC%8B%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8\" aria-label=\"12 예시 프로그램 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2 예시 프로그램</h2>\n<ol>\n<li>프로그램이 새로운 기능을 추가하기에 편한 구조가 아니라면, 먼저 기능을 추가하기 쉬운 형태로 리팩터링하고 나서 원하는 기능을 추가 함</li>\n</ol>\n<br>\n<h2 id=\"13-리팩터링의-첫-단계\" style=\"position:relative;\"><a href=\"#13-%EB%A6%AC%ED%8C%A9%ED%84%B0%EB%A7%81%EC%9D%98-%EC%B2%AB-%EB%8B%A8%EA%B3%84\" aria-label=\"13 리팩터링의 첫 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3 리팩터링의 첫 단계</h2>\n<ol>\n<li>리팩터링할 코드 영역을 꼼꼼하게 검사해줄 테스트 코드 마련하기</li>\n<li>리팩터링하기 전에 제대로 된 테스트부터 마련</li>\n</ol>\n<br>\n<h2 id=\"14-statement-함수-쪼개기\" style=\"position:relative;\"><a href=\"#14-statement-%ED%95%A8%EC%88%98-%EC%AA%BC%EA%B0%9C%EA%B8%B0\" aria-label=\"14 statement 함수 쪼개기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.4 statement() 함수 쪼개기</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Before refactoring</span>\n<span class=\"token keyword\">import</span> plays <span class=\"token keyword\">from</span> <span class=\"token string\">'./plays.json'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> invoices <span class=\"token keyword\">from</span> <span class=\"token string\">'./invoices.json'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>invoice<span class=\"token punctuation\">,</span> plays<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> totalAmount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> volumeCredits <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">청구내역 (고객명: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>invoice<span class=\"token punctuation\">.</span>customer<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> format <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl</span><span class=\"token punctuation\">.</span><span class=\"token function\">NumberFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token operator\">:</span> <span class=\"token string\">'currency'</span><span class=\"token punctuation\">,</span>\n    currency<span class=\"token operator\">:</span> <span class=\"token string\">'USD'</span><span class=\"token punctuation\">,</span>\n    minimumFractionDigits<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> perf <span class=\"token keyword\">of</span> invoice<span class=\"token punctuation\">.</span>performances<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> play <span class=\"token operator\">=</span> plays<span class=\"token punctuation\">[</span>perf<span class=\"token punctuation\">.</span>playID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> thisAmount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>play<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'tragedy'</span><span class=\"token operator\">:</span>\n        thisAmount <span class=\"token operator\">=</span> <span class=\"token number\">40000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          thisAmount <span class=\"token operator\">+=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">-</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'comedy'</span><span class=\"token operator\">:</span>\n        thisAmount <span class=\"token operator\">=</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          thisAmount <span class=\"token operator\">+=</span> <span class=\"token number\">10000</span> <span class=\"token operator\">+</span> <span class=\"token number\">500</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        thisAmount <span class=\"token operator\">+=</span> <span class=\"token number\">300</span> <span class=\"token operator\">*</span> perf<span class=\"token punctuation\">.</span>audience<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">알 수 없는 장르: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>play<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 포인트를 적립한다.</span>\n    volumeCredits <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">-</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 희극 관객 5명마다 추가 포인트를 제공한다.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'comedy'</span> <span class=\"token operator\">===</span> play<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> volumeCredits <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">.</span>audience <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 청구 내역을 출력한다.</span>\n    result <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>play<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>thisAmount <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>perf<span class=\"token punctuation\">.</span>audience<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">석)\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    totalAmount <span class=\"token operator\">+=</span> thisAmount<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  result <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">총액: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>totalAmount <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  result <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">적립 포인트: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>volumeCredits<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">점\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ninvoices<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>invoice<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>invoice<span class=\"token punctuation\">,</span> plays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>\n<p>테스트</p>\n<ul>\n<li>간단한 수정도 리팩터링 후에는 항상 테스트하는 습관</li>\n<li>조금씩 변경하고 매번 테스트하는 것은 리팩터링 절차의 핵심</li>\n</ul>\n</li>\n<li>\n<p>함수 추출하기</p>\n<ul>\n<li>자바스크립트에서는 중첩 함수를 사용하면 바깥 함수의 변수를 새로 추출한 함수에 매개변수로 전달할 필요가 없음.</li>\n<li>추출된 함수 코드에서 보다 명확하게 표현할 수 있는 것들을 찾아야 함 (ex. 변수 이름)</li>\n<li>추출된 함수의 반환 값은 result 등의 네이밍으로 통일해줄 수 있음</li>\n</ul>\n</li>\n<li>\n<p>임시 변수 제거</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 😵 bad</span>\n<span class=\"token keyword\">const</span> play <span class=\"token operator\">=</span> plays<span class=\"token punctuation\">[</span>perf<span class=\"token punctuation\">.</span>playID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 😗 normal</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span>aPerformance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> plays<span class=\"token punctuation\">[</span>aPerformance<span class=\"token punctuation\">.</span>playID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> play <span class=\"token operator\">=</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 😄 good (변수 인라인)</span>\n<span class=\"token keyword\">let</span> thisAmount <span class=\"token operator\">=</span> <span class=\"token function\">amountFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">,</span> <span class=\"token function\">playFor</span><span class=\"token punctuation\">(</span>perf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// -> 지역 변수를 제거하면 유효범위를 신경 썽 할 대상이 줄어들어 추출 작업이 쉬워짐</span></code></pre></div>\n</li>\n<li>적립 포인트 계산 코드 추출</li>\n<li>\n<p>format 변수 제거</p>\n<ul>\n<li>함수 선언 바꾸기(함수의 핵심 기능을 살려주는 네이밍으로 바꿈)</li>\n</ul>\n</li>\n<li>\n<p>volumeCredits 변수 제거</p>\n<ul>\n<li>\n<p>반복문 쪼개기</p>\n<ul>\n<li>로직에 따라 별도의 for문으로 분리</li>\n<li>반복문을 쪼개서 발생하는 중복은 성능에 미치는 영향이 미미</li>\n<li>리팩터링으로 인한 성능 문제는 “특별한 경우가 아니라면 일단 무시”</li>\n</ul>\n</li>\n<li>\n<p>문장 슬라이드하기</p>\n<ul>\n<li>volumeCredits 값 갱신과 관련한 문장들을 한데 모음</li>\n<li>임시 변수를 질의 함수로 바꾸기가 수월해짐</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/89649360\">리팩터링 2판 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#12-%EC%98%88%EC%8B%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8\">1.2 예시 프로그램</a></li>\n<li><a href=\"#13-%EB%A6%AC%ED%8C%A9%ED%84%B0%EB%A7%81%EC%9D%98-%EC%B2%AB-%EB%8B%A8%EA%B3%84\">1.3 리팩터링의 첫 단계</a></li>\n<li>\n<p><a href=\"#14-statement-%ED%95%A8%EC%88%98-%EC%AA%BC%EA%B0%9C%EA%B8%B0\">1.4 statement() 함수 쪼개기</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"1.2 예시 프로그램 프로그램이 새로운 기능을 추가하기에 편한 구조가 아니라면, 먼저 기능을 추가하기 쉬운 형태로 리팩터링하고 나서 원하는 기능을 추가 함 1.3 리팩터링의 첫 단계 리팩터링할 코드 영역을 꼼꼼하게 검사해줄 테스트 코드 마련하기 리팩터링하기 전에 제대로 된 테스트부터 마련 1.4 statement() 함수 쪼개기 테스트 간단한 수정도 리팩터링 후에는 항상 테스트하는 습관 조금씩 변경하고 매번 테스트하는 것은 리팩터링 절차의 핵심 함수 추출하기 자바스크립트에서는 중첩 함수를 사용하면 바깥 함수의 변수를 새로 추출한 함수에 매개변수로 전달할 필요가 없음. 추출된 함수 코드에서 보다 명확하게 표현할 수 있는 것들을 찾아야 함 (ex. 변수 이름) 추출된 함수의 반환 값은 result 등의 네이밍으로 통일해줄 수 있음 임시 변수 제거 적립 포인트 계산 코드 추출 format 변수 제거 함수 선언 바꾸기(함수의 핵심 기능을 살려주는 네이밍으로 바꿈) volumeCredits…","frontmatter":{"date":"July 06, 2023","title":"리팩터링 1장-1","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/refactoring-1-1/"}},"next":{"id":"d0b10aa6-4977-57e9-891f-dade6097cd40","html":"<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<p>새로운 직장에서 한 달이 지났습니다. 그 동안 온보딩과 스프린트 한 사이클을 경험하게 되었습니다.</p>\n<p>새로운 사람들과 협업하는 과정 새로운 업무 프로세스 그리고 새로운 도메인 등 낯설지만 그래도 한 걸음씩 나아가고 있다고 생각이 듭니다.</p>\n<p>이 과정에서 모르는 것에 대해 친절히 답변해주신 팀원분들에게 감사했습니다.</p>\n<p>그리고 스프린트를 하면서 ‘확장성’에 대한 피드백을 많이 받았습니다. 하나를 개발을 하더라도 다른 요구사항에도 잘 대응 할 수 있는 비즈니스 로직을 만드는 것이 중요하다는 이야기를 많이 들었고 이 과정에서 또는 앞으로 개발하면 ‘확장성’과 ‘유연함’에 대한 비즈니스 로직을 개발하는 실력을 키울 수 있다는 확신이 들어 설렜습니다.</p>\n<p>물론 이 과정 속에서 많은 고민과 힘듬이 있겠지만, 어쨌든 이 과정을 거치면 반드시 성장한다는 확신은 저에게 큰 동기부여가 되는 것 같습니다.</p>\n<p>아직 한 달 밖에 되지 않았지만, 확실히 성장할 수 있다는 동기를 느끼게 해준 팀 속에서 일을 한다는 것이 얼마나 중요한지 알게 되었고 또한 함께 일하는 사람들의 바이브 및 배려 그리고 커뮤니케이션이 저에게 있어서 일하는데 중요한 요소로 다가왔다는 것도 알게 되었습니다.</p>\n<p>마지막으로 2023년도 반 절이 지난 이 때에 스스로 가고자 하는 방향은 잘 가고 있는지, 나는 잘 안녕한지 되돌아 보는 시간을 틈틈히 가져야겠다는 필요성을 느낍니다.</p>\n<p>단순히 일에 매몰되는 삶이 아닌, 삶의 주체로서 삶을 만들어 가는 그러한 삶을 살아가고 싶습니다.</p>\n<p>이번 한 주도 수고 했습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 01, 2023","title":"7월 1주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230701/"}},"prev":{"id":"5346204c-0c4a-50e4-a974-b2a776df6d29","html":"<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<h3 id=\"협업\" style=\"position:relative;\"><a href=\"#%ED%98%91%EC%97%85\" aria-label=\"협업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>협업</h3>\n<p>언제 다른 팀원분들과 협업하는 과정은 힘들면서도 많은 것을 배우는 것 같습니다. 이번 Sprint에서는 BE분들과 API 명세를 논의하는 회의에 참여하게 되었습니다. FE에서는 어떤 값들이 필요한지, 더 나아가 어떤 타입의 값들이 필요한지 명확하고 구체적으로 요구사항을 BE에게 확실하게 전달하는 모습을 보면서 단순히 UI를 그리기위한 API 명세 논의를 넘어 서비스 전반적으로 사용되어야 하는 데이터 값과 타입을 고려하면서 명세 논의하는 부분이 인상 깊었습니다.</p>\n<p>그리고 협업은 나 뿐만아니라 상대방의 상황을 고려하고 더 나아가 서비스 전반적인 상황을 생각해야 한다는 것을 이번 시간을 통해 다시 한번 생각해 보게 되었습니다. 리소스는 한정적인 상황에서 최대한 리소스를 효율적으로 사용하기 위해서는 좋은 협업을 통해 서비스 개발을 해야 한다는 것은 당연하면서도 중요하다는 것을 다시 한번 되내어 보았습니다.</p>\n<p>마지막으로 협업이라는 것 다른 팀원분들에게 영향을 주기 때문에 항상 내가 하는 업무를 꼼꼼히 다양한 경우를 고려해 개발을 완료해야, 다른 팀원분들의 업무 효율을 늘릴 수 있다는 것도 알게 되었습니다.</p>\n<br>\n<h3 id=\"tailwindcss-동적-스타일-적용\" style=\"position:relative;\"><a href=\"#tailwindcss-%EB%8F%99%EC%A0%81-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%A0%81%EC%9A%A9\" aria-label=\"tailwindcss 동적 스타일 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TailwindCSS 동적 스타일 적용</h3>\n<p>이번 스프린트 개발 도중에 동적으로 TailwindCSS를 적용하는 부분이 간혈적으로 되었다가 안 되는 문제가 발생했습니다.\n알고보니, TailwindCSS는 이미 지정된 ClassName이 있기 때문에 동적으로 ClassName을 만들어서 적용하게 되면 Style은 적용되지 않지만, HTML에 ClassName은 들어간다는 것을 확인하였습니다. 또한 TailwindCSS 공식 문서에서도 동적으로 ClassName을 사용하지 않고 이미 완성된 Style ClassName을 만들어 놓은 Mapping 함수를 만들어서 사용하라는 것도 알게 되었습니다.</p>\n<p>그리고 TailwindCSS가 동적으로 Style을 적용하는 사례로 있다고 해서 아래 참고 문서를 통해 알게 되었습니다.</p>\n<br>\n<h3 id=\"storybook\" style=\"position:relative;\"><a href=\"#storybook\" aria-label=\"storybook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StoryBook</h3>\n<p>디자인 QA를 위해 컴포넌트를 개발 후에 StoryBook으로 개발한 컴포넌트를 적용하는 과정을 진행했습니다. 이 과정 속에서 디자이너분들이 조금 더 손 쉽게 QA를 확인하는 방법에 대해 알게 되었고, UI와 UI가 아닌 비즈니스 로직을 의식적으로 분리시킬 수 있다는 사실도 알게 되었습니다.</p>\n<p>아직 StoryBook에 대해 깊게 학습하지 않았지만, 학습을 통해 더욱 효율적으로 디자이너분들과 빠르게 QA하고 개발할 수 있는 방법을 찾아 적용하면 재밋을 것 같다는 생각을 했습니다.</p>\n<br>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<p>2023년 상반기가 지나가고 하반기가 시작되었습니다. 더욱 더 몸과 마음을 의식적으로 잘 관리해 더 나은 삶을 만들어 가고 싶은 생각이 드는 요즘입니다.</p>\n<p>잊고 있었던 꿈의 목록들을 펼쳐보며, 다시 한번 내가 원하는 것이 무엇인지 되내어보았습니다.</p>\n<p>흐르는 대로 삶을 사는 것이 아닌, 주체적으로 삶을 살아가고 싶은 생각이 많이 드는 여름입니다.</p>\n<p>생각에서 멈추는 것이 아닌, 작은 행동을 시작해 조금은 주체적인 삶을 살 수 있도록 다짐해봅니다.</p>\n<p>어쨋든 이번 한 주도 수고했습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://tailwindcss.com/docs/content-configuration#dynamic-class-names\">공식문서</a></li>\n<li><a href=\"https://fe-developers.kakaoent.com/2022/220303-tailwind-tips\">카카오 TailwindCSS 적용 사례</a></li>\n<li><a href=\"https://www.yes24.com/Product/Goods/67211854\">책 - 유연함의 힘</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%ED%98%91%EC%97%85\">협업</a></li>\n<li><a href=\"#tailwindcss-%EB%8F%99%EC%A0%81-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%A0%81%EC%9A%A9\">TailwindCSS 동적 스타일 적용</a></li>\n<li><a href=\"#storybook\">StoryBook</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 09, 2023","title":"7월 2주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230709/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/refactoring-1-1/","nextSlug":"/write-log-230701/","prevSlug":"/write-log-230709/"}},"staticQueryHashes":["1073350324","2938748437"]}