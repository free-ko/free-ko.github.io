{"componentChunkName":"component---src-templates-blog-template-js","path":"/react-translate-6/","result":{"data":{"cur":{"id":"786c3e7a-96cd-5016-b6f9-301e6dbfb860","html":"<blockquote>\n<p>이 글은 <a href=\"https://beta.reactjs.org/learn/javascript-in-jsx-with-curly-braces\">React 공식 문서 - JavaScript in JSX with Curly Braces\n</a>를 번역한 것 입니다.</p>\n</blockquote>\n<br>\n<h1 id=\"javascript-in-jsx-with-curly-braces\" style=\"position:relative;\"><a href=\"#javascript-in-jsx-with-curly-braces\" aria-label=\"javascript in jsx with curly braces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript in JSX with Curly Braces</h1>\n<p>마크업을 작성하는 과정에서 약간의 JS 로직을 추가하거나, 동적으로 Props를 참조하고 싶을 때가 있습니다.\n이럴 때에는 <code class=\"language-text\">{}</code>중괄호를 사용할 수 있습니다.</p>\n<p><b>우리가 배우게 될 내용들</b></p>\n<ul>\n<li>문자열을 전달하는 방법</li>\n<li>중괄호를 통해 JSX문법에 JS 변수를 사용하는 방법 </li>\n<li>중괄호를 통해 JSX문법에서 JS 함수를 실행하는 방법</li>\n<li>중괄호를 통해 JS Object를 사용하는 방법</li>\n</ul>\n<br>\n<h2 id=\"passing-strings-with-quotes\" style=\"position:relative;\"><a href=\"#passing-strings-with-quotes\" aria-label=\"passing strings with quotes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Passing strings with quotes</h2>\n<p>JSX 속성에 string을 전달 할려면, 따옴표나, 쌍따옴표를 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n        <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://i.imgur.com/7vQD0fPs.jpg<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gregorio Y. Zara<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">\"https://i.imgur.com/7vQD0fPs.jpg\"</code> 와 <code class=\"language-text\">\"Gregorio Y. Zara\"</code>를 동적인 값으로 특정 변수에 넣어서 JSX 속성으로 전달 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> avatar <span class=\"token operator\">=</span> <span class=\"token string\">'https://i.imgur.com/7vQD0fPs.jpg'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> description <span class=\"token operator\">=</span> <span class=\"token string\">'Gregorio Y. Zara'</span><span class=\"token punctuation\">;</span>\n   \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n        <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatar<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 주의 해야 할 부분은 className의 avatar와 변수 이름의 avatar의 차이를 알고 있어야 합니다. 그리고 중괄호를 통해 마크업 안에서 JS 작업을 할 수 있습니다.</p>\n<br/>\n<h2 id=\"using-curly-braces-a-window-into-the-javascript-world\" style=\"position:relative;\"><a href=\"#using-curly-braces-a-window-into-the-javascript-world\" aria-label=\"using curly braces a window into the javascript world permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using curly braces: A window into the JavaScript world</h2>\n<p>JSX는 JS를 작성하는 특별한 방법입니다. 특히, JSX 문법에서 <code class=\"language-text\">{}</code>중괄호를 통해 JS를 사용할 수 있습니다.\n아래는 <code class=\"language-text\">name</code>이라는 변수를 JSX 문법에 적용했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Gregorio Y. Zara'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">'s To Do List</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>그리고 <code class=\"language-text\">formatDate()</code>함수를 통해, 실시간 데이터를 표현할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">function</span> <span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">date</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DateTimeFormat</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> weekday<span class=\"token operator\">:</span> <span class=\"token string\">'long'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">To Do List for </span><span class=\"token punctuation\">{</span><span class=\"token function\">formatDate</span><span class=\"token punctuation\">(</span>today<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"where-to-use-curly-braces\" style=\"position:relative;\"><a href=\"#where-to-use-curly-braces\" aria-label=\"where to use curly braces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Where to use curly braces</h3>\n<p>JSX 내부에서 <code class=\"language-text\">{}</code>중괄호를 2가지 방법으로 사용할 수 있습니다.</p>\n<ol>\n<li>\n<p>JSX 태그 안에 직접 텍스트로 입력해야 합니다.</p>\n<ul>\n<li><code class=\"language-text\">&lt;h1>{name}'s To Do List&lt;/h1></code>는 작동하지만, <code class=\"language-text\">&lt;{tag}>Gregorio Y. Zara's To Do List&lt;/{tag}></code>는 작동하지 않습니다.</li>\n</ul>\n</li>\n<li>\n<p>JSX 속성에 JS 변수를 사용할 때 따옴표를 작성하면 안됩니다.</p>\n<ul>\n<li><code class=\"language-text\">src={avatar}</code>는 JS 변수로서 작동합니다.</li>\n<li><code class=\"language-text\">src=\"{avatar}\"</code>는 <code class=\"language-text\">\"{avatar}\"</code>라는 문자열을 나타냅니다.</li>\n</ul>\n</li>\n</ol>\n<br/>\n<h2 id=\"using-double-curlies-css-and-other-objects-in-jsx\" style=\"position:relative;\"><a href=\"#using-double-curlies-css-and-other-objects-in-jsx\" aria-label=\"using double curlies css and other objects in jsx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using “double curlies”: CSS and other objects in JSX</h2>\n<p>CSS를 JSX안에서 전달 할 때에는 중괄호를 중복해서 전달 할 수 있습니다. 이 때, 스타일 프로퍼티는 카멜케이스로 작성해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n      color<span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Improve the videophone</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Prepare aeronautics lectures</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Work on the alcohol-fuelled engine</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"more-fun-with-javascript-objects-and-curly-braces\" style=\"position:relative;\"><a href=\"#more-fun-with-javascript-objects-and-curly-braces\" aria-label=\"more fun with javascript objects and curly braces permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More fun with JavaScript objects and curly braces</h2>\n<p>JSX안에서 객체에 접근해서 사용할 때에도 중괄호를 사용할 수 있습니다. JSX는 JavaScript를 사용하여 데이터와 로직을 구성할 수 있기 때문에 템플릿 언어로서 매우 최소한의 기능을 제공합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Gregorio Y. Zara'</span><span class=\"token punctuation\">,</span>\n  theme<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token operator\">:</span> <span class=\"token string\">'pink'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>person<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">'s Todos</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"recap\" style=\"position:relative;\"><a href=\"#recap\" aria-label=\"recap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recap</h2>\n<ul>\n<li>JSX 안에서 속성은 따옴표 문자열로 작성해야 합니다.</li>\n<li>중괄호를 사용하면 JavaScript 로직과 변수를 마크업으로 가져올 수 있습니다.</li>\n<li>JSX 태그 콘텐츠 내부 또는 속성의 = 바로 뒤에 JS 객체 값을 사용할 수 있습니다.</li>\n<li>JSX 안에 있는 더블 중괄호는 특별한 구문이 아니라, JSX 중괄호 안에 들어 있는 JavaScript 객체입니다.</li>\n</ul>\n<br/>\n<p><b>📕 참고</b></p>\n<ul>\n<li><a href=\"https://reactjs.org/learn/javascript-in-jsx-with-curly-braces\">React - JavaScript in JSX with Curly Braces\n</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#passing-strings-with-quotes\">Passing strings with quotes</a></li>\n<li>\n<p><a href=\"#using-curly-braces-a-window-into-the-javascript-world\">Using curly braces: A window into the JavaScript world</a></p>\n<ul>\n<li><a href=\"#where-to-use-curly-braces\">Where to use curly braces</a></li>\n</ul>\n</li>\n<li><a href=\"#using-double-curlies-css-and-other-objects-in-jsx\">Using “double curlies”: CSS and other objects in JSX</a></li>\n<li><a href=\"#more-fun-with-javascript-objects-and-curly-braces\">More fun with JavaScript objects and curly braces</a></li>\n<li><a href=\"#recap\">Recap</a></li>\n</ul>\n</div>","excerpt":"이 글은 React 공식 문서 - JavaScript in JSX with Curly Braces\n를 번역한 것 입니다. JavaScript in JSX with Curly Braces 마크업을 작성하는 과정에서 약간의 JS 로직을 추가하거나, 동적으로 Props를 참조하고 싶을 때가 있습니다.\n이럴 때에는 중괄호를 사용할 수 있습니다. 우리가 배우게 될 내용들 문자열을 전달하는 방법 중괄호를 통해 JSX문법에 JS 변수를 사용하는 방법  중괄호를 통해 JSX문법에서 JS 함수를 실행하는 방법 중괄호를 통해 JS Object를 사용하는 방법 Passing strings with quotes JSX 속성에 string을 전달 할려면, 따옴표나, 쌍따옴표를 사용하면 됩니다.  와 를 동적인 값으로 특정 변수에 넣어서 JSX 속성으로 전달 할 수 있습니다. 여기서 주의 해야 할 부분은 className의 avatar와 변수 이름의 avatar의 차이를 알고 있어야 합니다. 그리고 중괄호…","frontmatter":{"date":"March 02, 2023","title":"React - JavaScript in JSX with Curly Braces 번역","categories":"번역","author":"Kay","emoji":"✏️"},"fields":{"slug":"/react-translate-6/"}},"next":{"id":"66859b66-1edf-5970-84b1-04524a8b5c1c","html":"<blockquote>\n<p>아래의 아키텍처가 정답이 아니라고 생각합니다. 너그러운 마음과 피드백을 주시면 감사하겠습니다.🙇🏻‍</p>\n</blockquote>\n<br/>\n<h2 id=\"️-새로운-아키텍처를-도입해-얻은-장점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%B4-%EC%96%BB%EC%9D%80-%EC%9E%A5%EC%A0%90\" aria-label=\"️ 새로운 아키텍처를 도입해 얻은 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔️ 새로운 아키텍처를 도입해 얻은 장점</h2>\n<ol>\n<li>코드 응집성을 높여 관리 포인트를 줄였습니다.</li>\n<li>코드 유지보수에 더 유연하게 대응할 수 있게 되었습니다.</li>\n<li>다른 팀원의 코드를 이해하는 데 필요한 리소스를 줄였습니다.</li>\n</ol>\n<br/>\n<h2 id=\"️-새로운-아키텍처를-도입한-이유\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"️ 새로운 아키텍처를 도입한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ 새로운 아키텍처를 도입한 이유</h2>\n<p>새로운 아키텍처를 도입한 가장 큰 이유는 협업을 통한 개발 환경과 코드 응집성을 개선하고, 이로 인해 관리 포인트를 줄이기 위함입니다.</p>\n<p>협업 시, 각자 다른 생각으로 폴더명을 지정해 개발을 진행하게 됩니다.(물론 팀내 폴더 컨벤션이 있을 때에는 다릅니다.)\n이로 인해 다른 사람이 개발한 코드뿐만 아니라 해당 폴더명에 코드를 추가한 이유까지 파악해야 하는 상황이 발생합니다.\n이는 코드를 이해하고 개발하는 데 많은 리소스를 필요로 하게 만듭니다.</p>\n<p>따라서 팀원들과 회의를 통해 이 문제를 해결하고자, 더 나은 코드 아키텍처를 만들기로 결정하였습니다.\n이를 위해 기존 아키텍처를 수정하면서 배우고 느꼈던 경험을 공유하고 적용하였습니다.</p>\n<br/>\n<h2 id=\"️-각-폴더-역할\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EA%B0%81-%ED%8F%B4%EB%8D%94-%EC%97%AD%ED%95%A0\" aria-label=\"️ 각 폴더 역할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✍️ 각 폴더 역할</h2>\n<h3 id=\"기존-modules-폴더-세분화\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EC%A1%B4-modules-%ED%8F%B4%EB%8D%94-%EC%84%B8%EB%B6%84%ED%99%94\" aria-label=\"기존 modules 폴더 세분화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기존 Modules 폴더 세분화</h3>\n<p>기존 modules 폴더 안에 있는 코드들 중에는 외부 라이브러리를 커스텀하여 서비스에 필요한 피쳐로 변경한 코드, 순수 서비스에 필요한 기능 등이 모여 있었습니다.\n처음 이 폴더 안의 코드를 볼 때, modules 폴더가 다소 넓은 기능들을 포함하고 있다는 인상을 주었습니다.</p>\n<p>그래서 modules 폴더를 제거하고, features와 plugins 폴더를 만들어 더 세분화된 구조로 변경하였습니다.\nfeatures 폴더는 서비스 내 필요한 기능을 담당하는 코드들을 모아놓은 공간, plugins 폴더는 외부 라이브러리를 프로젝트 내부 어디서든 쉽게 사용하고 관리할 수 있도록 Wrapping한 코드들을 모아놓았습니다.(shared 폴더 하위에 존재)</p>\n<br/>\n<h3 id=\"shared-설계한-이유\" style=\"position:relative;\"><a href=\"#shared-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"shared 설계한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Shared 설계한 이유</h3>\n<p>기존에는 폴더의 깊이를 동일하게 유지해서 폴더를 생성해 관리했습니다. 이 방법도 나쁘지 않았지만, 폴더의 개수가 많아짐에 따라 폴더를 명확히 구분이 필요했습니다.\n그 중 일부 프로젝트 내부에 공용적으로 사용되는 폴더가 필요해서 Shared 폴더를 만들었습니다.\nShared 폴더 안에는 constants, utils, types, plugins, uiComponents 등이 포함되어 있습니다.(uiComponents는 순수하게 UI만을 담당하는 독립적인 컴포넌트입니다.)</p>\n<br/>\n<h3 id=\"templates-설계한-이유\" style=\"position:relative;\"><a href=\"#templates-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"templates 설계한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>templates 설계한 이유</h3>\n<p>Next.js에서는 page 폴더가 라우터 기능, SSR 관련 함수 호출 등을 담당하는 역할을 수행하므로,\n이러한 기능을 수행하는 page 컴포넌트와 별도로 단일 책임 원칙을 따르기 위해 templates 폴더를 만들어\npage와 1:1 대응되는 templates 컴포넌트를 만들었습니다.</p>\n<br>\n<h3 id=\"features를-설계한-이유\" style=\"position:relative;\"><a href=\"#features%EB%A5%BC-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"features를 설계한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>features를 설계한 이유</h3>\n<p>templates 폴더는 클라이언트 데이터(DTO)와 서버에서 내려주는 데이터(Entity)를 분리하기 위해 설계되었습니다.\n이러한 설계는 백엔드와 프론트엔드가 병렬적으로 개발을 진행하면서 서버 데이터의 변경이 있더라도, 클라이언트 데이터(DTO)의 변경에만\n신경쓰면 되는 장점이 있어 features 폴더를 설계했습니다.</p>\n<br>\n<h3 id=\"폴더명-참조-방향-설정-및-eslint-설정\" style=\"position:relative;\"><a href=\"#%ED%8F%B4%EB%8D%94%EB%AA%85-%EC%B0%B8%EC%A1%B0-%EB%B0%A9%ED%96%A5-%EC%84%A4%EC%A0%95-%EB%B0%8F-eslint-%EC%84%A4%EC%A0%95\" aria-label=\"폴더명 참조 방향 설정 및 eslint 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>폴더명 참조 방향 설정 및 eslint 설정</h3>\n<ul>\n<li>아래와 같이 바로 앞에 있는 폴더만 참조가 가능하도록 설정해, 개발의 참조 일관성을 부여했습니다.</li>\n<li>참조 방향 : pages -> templates -> features -> shared/plugins -> shared/uiComponent -> shared/utils -> shared/constants -> shared/types</li>\n<li>\n<p>eslint 역참조 불가 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">rulse<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'import/no-restricted-paths'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      basePath<span class=\"token operator\">:</span> <span class=\"token string\">'./src'</span>\n      zones<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// templates 폴더가 pages 폴더를 역참조 할 수 없도록 설정</span>\n        <span class=\"token punctuation\">{</span> target<span class=\"token operator\">:</span> <span class=\"token string\">'./templates'</span><span class=\"token punctuation\">,</span> from<span class=\"token operator\">:</span> <span class=\"token string\">'./pages'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"적용한-코드-아키텍쳐\" style=\"position:relative;\"><a href=\"#%EC%A0%81%EC%9A%A9%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90\" aria-label=\"적용한 코드 아키텍쳐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>적용한 코드 아키텍쳐</h3>\n<table>\n<thead>\n<tr>\n<th>디렉토리</th>\n<th>정의</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>shared/types</td>\n<td>글로벌 타입</td>\n</tr>\n<tr>\n<td>shared/constants</td>\n<td>글로벌 상수</td>\n</tr>\n<tr>\n<td>shared/utils</td>\n<td>글로벌 유틸</td>\n</tr>\n<tr>\n<td>shared/uiComponents</td>\n<td>두 페이지 이상에서 사용되는 순수 UI 및 UI 로직</td>\n</tr>\n<tr>\n<td>shared/plugins</td>\n<td>3rd-party 라이브러리 커스텀 로직</td>\n</tr>\n<tr>\n<td>features</td>\n<td>프로젝트 의존성이 있는 공통 로직</td>\n</tr>\n<tr>\n<td>templates</td>\n<td>page와 1:1 대응되는 페이지 컴포넌트</td>\n</tr>\n<tr>\n<td>pages</td>\n<td>NextJS의 라우팅 기능</td>\n</tr>\n</tbody>\n</table>\n<br>\n<h2 id=\"-새로운-아키텍처를-적용하면서-느낀점\" style=\"position:relative;\"><a href=\"#-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80%EC%A0%90\" aria-label=\" 새로운 아키텍처를 적용하면서 느낀점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 새로운 아키텍처를 적용하면서 느낀점</h2>\n<p>이번 프로젝트를 통해 코드 이해도와 프로젝트 아키텍처에 대한 시야를 높일 수 있는 좋은 경험을 할 수 있었습니다.\n코드의 폴더 위치와 참조 관계 등에 대한 고민을 깊이 해볼 수 있었으며,\n팀원들의 코드를 보면서 해당 코드의 폴더 위치가 적절한지, 또한 어떤 의도로 해당 폴더에 코드를 작성했는지 물어봄으로써\n팀원들의 코드를 깊이 이해할 수 있었습니다.\n이번 경험을 통해 프로젝트 아키텍처에 대한 지식이 부족하다는 것을 느꼈고, <a href=\"http://www.yes24.com/Product/Goods/77283734\">Clean Achitecture</a> 책을 구입하여 공부할 계획입니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://yozm.wishket.com/magazine/detail/1663/\">FE 아키텍쳐 변천사</a></li>\n<li><a href=\"https://imagineu.tistory.com/82\">FE 아키텍쳐 다층화 구조</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EF%B8%8F-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%B4-%EC%96%BB%EC%9D%80-%EC%9E%A5%EC%A0%90\">✔️ 새로운 아키텍처를 도입해 얻은 장점</a></li>\n<li><a href=\"#%EF%B8%8F-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EB%8F%84%EC%9E%85%ED%95%9C-%EC%9D%B4%EC%9C%A0\">✏️ 새로운 아키텍처를 도입한 이유</a></li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EA%B0%81-%ED%8F%B4%EB%8D%94-%EC%97%AD%ED%95%A0\">✍️ 각 폴더 역할</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EC%A1%B4-modules-%ED%8F%B4%EB%8D%94-%EC%84%B8%EB%B6%84%ED%99%94\">기존 Modules 폴더 세분화</a></li>\n<li><a href=\"#shared-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\">Shared 설계한 이유</a></li>\n<li><a href=\"#templates-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\">templates 설계한 이유</a></li>\n<li><a href=\"#features%EB%A5%BC-%EC%84%A4%EA%B3%84%ED%95%9C-%EC%9D%B4%EC%9C%A0\">features를 설계한 이유</a></li>\n<li><a href=\"#%ED%8F%B4%EB%8D%94%EB%AA%85-%EC%B0%B8%EC%A1%B0-%EB%B0%A9%ED%96%A5-%EC%84%A4%EC%A0%95-%EB%B0%8F-eslint-%EC%84%A4%EC%A0%95\">폴더명 참조 방향 설정 및 eslint 설정</a></li>\n<li><a href=\"#%EC%A0%81%EC%9A%A9%ED%95%9C-%EC%BD%94%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90\">적용한 코드 아키텍쳐</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80%EC%A0%90\">💡 새로운 아키텍처를 적용하면서 느낀점</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 02, 2023","title":"FE 새로운 아키텍처 개발 후기","categories":"TIL","author":"Kay","emoji":"👋"},"fields":{"slug":"/new-architecture/"}},"prev":{"id":"6d812501-a4d2-5ce6-810e-26542841652c","html":"<h1 id=\"️-배운-내용\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EB%B0%B0%EC%9A%B4-%EB%82%B4%EC%9A%A9\" aria-label=\"️ 배운 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ 배운 내용</h1>\n<p>이번 주는 Open AI에서 제공하는 API를 통해, 작은 서비스를 기획하고 개발하는 경험을 했습니다. 먼저 처음 접하는 Open AI API를 이해하는 과정과 이해한 개념을 바탕으로 새로운 기능을 개발하는 부분은 역시나 쉽지 않았습니다. 특히 사용자가 돈을 내고 사용해야 하는 서비스를 만든다는 것이 이렇게 쉽지 않음을 깨닫게 되었습니다.</p>\n<p>제가 생각한 서비스는 사업 아이템을 입력하면 Open AI에게 미리 입력한 질문에 대해 답변을 해주는 것을 만들었습니다. 이 때, 미리 어떤 질문은 해야 최대한 구체적인 답변을 해주는지 파악하는 것이 관건이었습니다. 더군나, 영어로 질문한 것은 한글로 번역해서 보여주는 과정에서도 번역이 제대로 되지 않을 경우가 있었습니다. 이 때에는 단순히 Open AI를 넘어서 딥러닝을 통해 해결해야 한다는 생각이 들었습니다.</p>\n<p>이번주 개발을 하면서 솔직히 많은 어려움이 있었습니다. 낯선 개념을 이해하고 빠른 시간에 개발을 해야 한다는 것이 쉽지 않고 익숙하지 않은 시간이었지만, 팀원분들의 도움으로 조금씩 개발을 해 나아가는 경험은 개발자로써 많은 울림을 주었던 것 같습니다.</p>\n<p>마지막으로 기획을 해주시는 팀원분들의 노고를 다시 한번 느끼게 되었습니다.</p>\n<h1 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 마무리</h1>\n<p>한 주동안 재택근무를 하면서 혼자서 문제를 해결해 나아가는 시간을 많이 가졌습니다. 쉽지 않았지만, 앞으로 스스로 문제를 정의하고 해결해 나아가는 습관을 가져가면 좋을 것 같습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://platform.openai.com/playground\">Open AI PlayGround</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 05, 2023","title":"3월 1주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230305/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/react-translate-6/","nextSlug":"/new-architecture/","prevSlug":"/write-log-230305/"}},"staticQueryHashes":["1073350324","2938748437"]}