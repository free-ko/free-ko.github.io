{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/React","result":{"pageContext":{"currentCategory":"React","categories":["All","JS","Log","Study","TIL","CS","Book","React"],"edges":[{"node":{"id":"acc3ed8e-506b-5deb-86c2-c6c2a80ac229","excerpt":"🌈 Ref를 통해 DOM을 조작하는 방법. React는 자동적으로 우리가 만든 JSX 컴포넌트를 DOM에 업데이트 합니다. 그래서 우리는 DOM을 조작할 일이 흔치 않게 됩니다. 그러나, 우리는 때때로 React가 처리하는 DOM Node Element에 접근할 필요가 있습니다.  예를 들어 Node를 Focus, Scroll하거나 Size와 Position을 측정할 때 접근해야 합니다. 그래서 우리는 이번 시간에 를 통해 어떻게 React에서 관리는 DOM Node를 처리하는지 알아보겠습니다.  ✅ 학습 내용 Ref를 통해 특정 Node에 접근하는 방법. React가 관리하는 DOM Node를 접근하기 위해서는 import useRef hook을 합니다. 그런 다음, 아래와 같이 Component 내부에 ref를 선언 합니다.  마지막으로, React가 관리하는 DOM Node에  속성에 전달합니다.  Hook은 만 가지고 있는 object를 return합니다. 초기에는  값이 …","fields":{"slug":"/react-beta-translate2/"},"frontmatter":{"categories":"React","title":"React Beta 번역 - Ref를 통해 DOM(React)을 조작하는 방법","date":"January 20, 2023"}},"next":{"fields":{"slug":"/til-230120/"}},"previous":{"fields":{"slug":"/write-log-230121/"}}},{"node":{"id":"e9a0cd90-41dd-537c-9fd7-eb15212098da","excerpt":"🌈 Describing the UI 리액트는 UI를 랜더링하는 JS 라이브러리 입니다. UI는 , ,  같은 작은 단위로 구성되어 있습니다.\n리액트에서는 이러한 UI들을 통해 컴포넌트를 만들 수 있고, 이 컴포넌트들을 통해 재사용 혹은 연관성 있는 것들로 또 다른 컴포넌트들을 만들 수 있습니다.\n또한 웹 사이트, 앱 그리고 모든 스크린은 컴포넌트로 구성되어 있습니다. 그래서 우리는 이번 챕터에서 컴포넌트를 만들고, 조작해보는 시간을 가져보겠습니다. ✅ 학습 내용 Component React App은 독립적인 UI Component들로 구성되어 있습니다. 하나의 Component는 JS 함수입니다.(마크업이 안에 존재합니다.)\n그리고 Component는 작은 버튼일 수도 있고, 전체 페이지일 수도 있습니다. 📕 참고 React Beta - Describing the UI ✅ 학습 내용 Component 📕 참고","fields":{"slug":"/react-beta-translate1/"},"frontmatter":{"categories":"React","title":"React Beta 번역 - Describing th UI","date":"January 07, 2023"}},"next":{"fields":{"slug":"/write-log-230107/"}},"previous":{"fields":{"slug":"/til-230108/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}