{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-hoisting/","result":{"data":{"cur":{"id":"82dd1053-3180-5baa-9a62-c02292bc76fc","html":"<br>\n<h1 align=\"center\">\n  👋 호이스팅\n</h1>\n<br>\n<h2 id=\"1-es5의-실행-콘텍스트-처리-순서\" style=\"position:relative;\"><a href=\"#1-es5%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%BD%98%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC-%EC%88%9C%EC%84%9C\" aria-label=\"1 es5의 실행 콘텍스트 처리 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) ES5의 실행 콘텍스트 처리 순서</h2>\n<ol>\n<li>함수 선언문 설정(함수부터 찾음)</li>\n<li>변수 이름을 바인딩, 변숫 값은 <code class=\"language-text\">undefined</code>(변수 이름 찾고 값은 <code class=\"language-text\">undefined</code>라고 넣음)</li>\n<li>소스 코드 실행</li>\n</ol>\n<br>\n<h2 id=\"2-var-변수-호이스팅\" style=\"position:relative;\"><a href=\"#2-var-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85\" aria-label=\"2 var 변수 호이스팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) var 변수 호이스팅</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'music 변수:'</span><span class=\"token punctuation\">,</span> music<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> music <span class=\"token operator\">=</span> <span class=\"token string\">'음악'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">console.log(\"music 변수:\", music);</code> 코드 아래 <code class=\"language-text\">var music = \"음악\";</code> 이 존재</li>\n<li>변수가 아래에 있지만 식별자 해결을 할 수 있음 단, 이 위에서 <code class=\"language-text\">music</code> 값은 <code class=\"language-text\">undefined</code></li>\n<li>이것을 <code class=\"language-text\">호이스팅</code>이라고 함</li>\n<li>식별자 해결을 하지 못하면 에러가 발생</li>\n</ul>\n<br>\n<h2 id=\"3-let-변수-호이스팅-사용-불가\" style=\"position:relative;\"><a href=\"#3-let-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%82%AC%EC%9A%A9-%EB%B6%88%EA%B0%80\" aria-label=\"3 let 변수 호이스팅 사용 불가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) let 변수 호이스팅 사용 불가</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">let</code> 변수는 호이스팅되지 않음, 즉 <code class=\"language-text\">let</code> 변수 앞에서 변수 사용 불가</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'호이스팅 불가'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 호이스팅 불가</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">let</code> 변수를 인식하는 시점</li>\n<li><code class=\"language-text\">block</code> 안에 <code class=\"language-text\">let</code> 변수 작성</li>\n</ul>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-es5%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%BD%98%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC-%EC%88%9C%EC%84%9C\">1) ES5의 실행 콘텍스트 처리 순서</a></li>\n<li><a href=\"#2-var-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85\">2) var 변수 호이스팅</a></li>\n<li><a href=\"#3-let-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%82%AC%EC%9A%A9-%EB%B6%88%EA%B0%80\">3) let 변수 호이스팅 사용 불가</a></li>\n</ul>\n</div>","excerpt":"1) ES5의 실행 콘텍스트 처리 순서 함수 선언문 설정(함수부터 찾음) 변수 이름을 바인딩, 변숫 값은 (변수 이름 찾고 값은 라고 넣음) 소스 코드 실행 2) var 변수 호이스팅  코드 아래  이 존재 변수가 아래에 있지만 식별자 해결을 할 수 있음 단, 이 위에서  값은  이것을 이라고 함 식별자 해결을 하지 못하면 에러가 발생 3) let 변수 호이스팅 사용 불가  변수는 호이스팅되지 않음, 즉  변수 앞에서 변수 사용 불가  변수를 인식하는 시점  안에  변수 작성 1) ES5의 실행 콘텍스트 처리 순서 2) var 변수 호이스팅 3) let 변수 호이스팅 사용 불가","frontmatter":{"date":"September 01, 2021","title":"호이스팅","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-hoisting/"}},"next":{"id":"31224a95-5280-5fc7-b067-eea8c0a6b865","html":"<br>\n<h1 align=\"center\">\n  👋 const 변수\n</h1>\n<br>\n<h2 id=\"1-const-문법\" style=\"position:relative;\"><a href=\"#1-const-%EB%AC%B8%EB%B2%95\" aria-label=\"1 const 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) const 문법</h2>\n<ul>\n<li>구문: <code class=\"language-text\">name1 [= value1] [, name2 [= value2]]</code></li>\n<li>값을 바꿀 수 없는 변수 선언(예외로 배열이나, 객체면 값을 바꿀 수 있음)</li>\n<li>\n<p><code class=\"language-text\">name1</code>에 변수 이름 작성, 식별자로 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\nsports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'const 할당 불가'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">const sports = \"축구\";</code> sports를 <code class=\"language-text\">const</code>로 선언하고 값 할당</li>\n<li><code class=\"language-text\">try { sports = \"농구;</code> try 블록도 별도의 스코프이지만 const, let을 작성하지 않았으므로</li>\n<li>sports 변수에 값을 할당하게 됨 이때 <code class=\"language-text\">sports</code>가 <code class=\"language-text\">const</code> 변수 이므로 에러 발생</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"2-js에서-상수는-대문자-사용이-관례\" style=\"position:relative;\"><a href=\"#2-js%EC%97%90%EC%84%9C-%EC%83%81%EC%88%98%EB%8A%94-%EB%8C%80%EB%AC%B8%EC%9E%90-%EC%82%AC%EC%9A%A9%EC%9D%B4-%EA%B4%80%EB%A1%80\" aria-label=\"2 js에서 상수는 대문자 사용이 관례 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) JS에서 상수는 대문자 사용이 관례</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```tsx\nconst bonus = 100;\nconst POINT = 200;\n```</code></pre></div>\n<ol>\n<li><code class=\"language-text\">const</code>가 <code class=\"language-text\">상수</code>이지만 값 형태에 따라 바꿀 수 있음</li>\n<li><code class=\"language-text\">const POINT=- 200;</code> 대문자 사용이 코딩 관례이므로 괜찮음</li>\n<li>우선 <code class=\"language-text\">let</code>이 아닌 <code class=\"language-text\">const</code> 사용 가능을 검토(우선순위 <code class=\"language-text\">const</code> > <code class=\"language-text\">let</code> > <code class=\"language-text\">var</code>)</li>\n</ol>\n<br>\n<h2 id=\"3-const-변수-사용\" style=\"position:relative;\"><a href=\"#3-const-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9\" aria-label=\"3 const 변수 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) const 변수 사용</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">const</code> 변수 전체를 바꿀 수 없지만, <code class=\"language-text\">Object</code>의 프로퍼티 값을 바꿀수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'책'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\nbook <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'음악 책'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'const 전체 할당 불가'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbook<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">'미술 책'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// const 전체 할당 불가</span>\n<span class=\"token comment\">// 미술 책</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">book = {title: \"음악 책\"};</code> book에 값을 할당하면 에러 발생, <code class=\"language-text\">book</code> 전체를 바꿀 수 없음</li>\n<li><code class=\"language-text\">book.title = \"미술 책\";</code> 프로퍼티 값은 변경할 수 있음</li>\n<li><code class=\"language-text\">const</code> 변수의 변경 불가는 <code class=\"language-text\">book</code>에 값을 할당하는 것을 뜻 함</li>\n</ol>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">배열</code>의 엘리먼트 값도 바꿀 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"책\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\tbook <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"음악 책\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"const 전체 할당 불가\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbook<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"미술 책\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// const 전체 할당 불가</span>\n<span class=\"token comment\">// 미술 책</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">book = [\"음악 책\"];</code> book에 값을 할당하면 에러 발생</li>\n<li><code class=\"language-text\">book[0] = \"미술 책\";</code> 엘리먼트 값은 변경할 수 있음</li>\n</ol>\n<br>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-const-%EB%AC%B8%EB%B2%95\">1) const 문법</a></li>\n<li><a href=\"#2-js%EC%97%90%EC%84%9C-%EC%83%81%EC%88%98%EB%8A%94-%EB%8C%80%EB%AC%B8%EC%9E%90-%EC%82%AC%EC%9A%A9%EC%9D%B4-%EA%B4%80%EB%A1%80\">2) JS에서 상수는 대문자 사용이 관례</a></li>\n<li><a href=\"#3-const-%EB%B3%80%EC%88%98-%EC%82%AC%EC%9A%A9\">3) const 변수 사용</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 01, 2021","title":"const 변수","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-const/"}},"prev":{"id":"d5ec61f1-3748-546d-94a8-3e6a4bcc64f4","html":"<br>\n<h1 align=\"center\">\n  👋 let 변수 개요, let 변수 선언, 블록 스코프\n</h1>\n<br>\n<h2 id=\"1-let-변수-개요\" style=\"position:relative;\"><a href=\"#1-let-%EB%B3%80%EC%88%98-%EA%B0%9C%EC%9A%94\" aria-label=\"1 let 변수 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) let 변수 개요</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'밖:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 안: 농구</span>\n<span class=\"token comment\">// 밖: 축구</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">let book = \"책\";</code></p>\n<ul>\n<li>블록 스코프를 가진 변수</li>\n<li>변수가 선언된 블록이 스코프</li>\n</ul>\n</li>\n<li>\n<p>스코프 적용 기준</p>\n<ul>\n<li>블록<code class=\"language-text\">{}</code>, 문, 표현시</li>\n</ul>\n</li>\n<li>\n<p>블록<code class=\"language-text\">{}</code> 안과 밖이 스코프가 다름</p>\n<ul>\n<li>변수 이름이 같아도 값이 대체되지 않음</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-let-변수-선언\" style=\"position:relative;\"><a href=\"#2-let-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"2 let 변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) let 변수 선언</h2>\n<ul>\n<li>\n<p>Syntax</p>\n<ul>\n<li><code class=\"language-text\">let name1 [= value1] [, name2 [= value2]]</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">name1</code>, <code class=\"language-text\">name2</code>에 변수 이름 작성</p>\n<ul>\n<li>식별자로 사용</li>\n<li><code class=\"language-text\">[ ]</code>는 생략 가능을 나타냄</li>\n<li>값을 할당하지 않아도 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> book<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">let book;</code></li>\n<li>값을 할당하지 않고 변수만 선언할 수 있음, 초깃값 <code class=\"language-text\">undefined</code>가 할당됨</li>\n<li><code class=\"language-text\">let one, two;</code></li>\n<li>콤마로 구분하여 다수를 선언할 수 있음</li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">value1</code>, <code class=\"language-text\">value2</code>에 초깃값 작성</p>\n<ul>\n<li>표현식 작성 가능, 평가 결과 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> book <span class=\"token operator\">=</span> <span class=\"token string\">'책'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> one <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\ntwo <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// let five = 5, let six = 6;</span>\n<span class=\"token comment\">// let five = 5, var six = 6;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">let book = \"책\";</code></li>\n<li>변수를 선언하고 초깃값을 할당했습니다.</li>\n<li><code class=\"language-text\">let one = 1, two = (10 + 20);</code></li>\n<li>콤마로 구분하여 다수의 변수를 선언하고 값을 할당한 형태임</li>\n<li><code class=\"language-text\">let five = 5, let six = 6;</code></li>\n<li><code class=\"language-text\">SyntaxError</code> 발생, <code class=\"language-text\">let</code>을 처음에 한 번만 작성함</li>\n<li><code class=\"language-text\">let five = 5, var six = 6;</code></li>\n<li>콤마로 구분하여 let과 var을 같이 사용할 수 없음</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"3-블록-스코프\" style=\"position:relative;\"><a href=\"#3-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"3 블록 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 블록 스코프</h2>\n<ul>\n<li>\n<p>블록 기준</p>\n<ul>\n<li>중괄호 <code class=\"language-text\">{ 코드 }</code></li>\n<li><code class=\"language-text\">function name() { 코드 }</code></li>\n<li><code class=\"language-text\">if (a === 1) { 코드 }</code></li>\n</ul>\n</li>\n<li>\n<p>블록 안과 밖이 스코프가 다름</p>\n<ul>\n<li>변수 이름이 같아도 값이 대체되지 않음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 블록 스코프</span>\n\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'밖:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">if (sports) {...}</code> 블록 <code class=\"language-text\">{}</code> 안과 밖에 <code class=\"language-text\">let sports</code>를 작성했으며 스코프가 다르므로 같은 이름을 사용할 수 있음</li>\n<li>변숫값이 대체되지 않고 유지 됨</li>\n<li>블록 안에서 블록 밖의 변수는 접근 할수 있지만(<code class=\"language-text\">if</code>문 안의 <code class=\"language-text\">sports</code>의 <code class=\"language-text\">let</code>를 빼면 밖의 <code class=\"language-text\">sports</code>에 접근)</li>\n<li>블록 밖에서 블록 안의 변수는 접근 할수 없음</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\nsports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 농구</span>\n\n<span class=\"token comment\">// let sports = \"배구\";</span>\n\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'탁구'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">sports = \"농구\";</code> 스코프에서 <code class=\"language-text\">sports</code> 식별자를 해결함, 바로 앞에 있으므로 값을 할당</li>\n<li><code class=\"language-text\">// let sports = \"배구\";</code> <code class=\"language-text\">let</code>을 사용하여 같은 스코프에 같은 이름의 변수를 선언할 수 없음</li>\n<li><code class=\"language-text\">{ let sports =\"탁구\"; }</code> 블록 <code class=\"language-text\">{}</code>을 사용했으므로 스코프가 다르므로 <code class=\"language-text\">let</code>을 사용하여 변수를 선언할 수 있음</li>\n</ol>\n</li>\n<li>스코프에 같은 이름 사용 불가</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-let-%EB%B3%80%EC%88%98-%EA%B0%9C%EC%9A%94\">1) let 변수 개요</a></li>\n<li><a href=\"#2-let-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\">2) let 변수 선언</a></li>\n<li><a href=\"#3-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\">3) 블록 스코프</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 01, 2021","title":"let 변수","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-let/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-hoisting/","nextSlug":"/study-js-es6-const/","prevSlug":"/study-js-es6-let/"}},"staticQueryHashes":["1073350324","2938748437"]}