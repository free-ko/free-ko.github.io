{"componentChunkName":"component---src-templates-blog-template-js","path":"/write-log-231112/","result":{"data":{"cur":{"id":"5d350157-0d2a-5a6d-94ae-c4dbaf36bc5d","html":"<h2 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<h3 id=\"1-blob-객체란\" style=\"position:relative;\"><a href=\"#1-blob-%EA%B0%9D%EC%B2%B4%EB%9E%80\" aria-label=\"1 blob 객체란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Blob 객체란</h3>\n<ol>\n<li>\n<p>Blob(Binary Large Object)이란</p>\n<ul>\n<li>바이너리 형태로 큰 객체를 저장(이미지, 비디오, 사운등 등 멀티미디어 객체들에서 사용)</li>\n<li>4GB의 이진 데이터를 저장(DB에 직접 저장하는 것이 아닌, Large Object의 위치 포인터만 저장)</li>\n<li>데이터를 간접적으로 접근하기 위한 객체</li>\n<li>웹에서 사용되는 데이터 형식으로, 이진 데이터를 나타내며, 텍스트, 이미지, 오디오, 비디오 등 다양한 형식을 지원(파일 업로드, 이미지 프로세싱, 미디어 처리 등에 사용)</li>\n<li>JS에서 Blob 객체는ㄴ 데이터 덩어리를 참조하는 용도로 사용</li>\n<li>메모리상의 데이터(바이트 배열)도 참조할 수 있으며 파일의 데이터도 참조할 수 있음</li>\n<li>웹브라우저는 메모리 또는 디스크에 Blob을 저장할 수 있으며, Blob은 비디오 파일과 같이 매우 커서, 메모리에 적재하려면 <code class=\"language-text\">slice()</code>를 활용하여 작은 조각으로 먼저 분리해야 할 수도 있음</li>\n<li>Blob API 는 비동기 방식으로 동작</li>\n</ul>\n</li>\n<li>\n<p>Blob 객체 생성하는 방법\n<code class=\"language-text\">new Blob()</code> 생성자를 사용하여 Blob 객체를 만들 수 있으며, 이 생성자는 데이터와 해당 데이터의 <code class=\"language-text\">MIME</code>(인터넷에서 다양한 종류의 데이터를 표현하고 전송하기 위한 표준 방식) 타입을 인자로 받음</p>\n<ul>\n<li>\n<p>Blob 객체 생성자 구조</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// data: Blob 객체에 들어갈 데이터.</span>\n<span class=\"token comment\">// mimeType: 데이터의 MIME 타입을 나타내는 문자열.</span>\n<span class=\"token comment\">// - Blob 객체를 생성할 때 MIME 타입을 지정하는 것은 해당 데이터의 형식을 명시하는 중요한 부분.</span>\n<span class=\"token comment\">// - MIME 타입을 올바르게 설정하면 브라우저나 다른 소프트웨어가 데이터를 올바르게 처리하고 해석할 수 있음</span>\n<span class=\"token keyword\">let</span> myBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> mimeType <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>데이터 타입</p>\n<ul>\n<li>문자열, ArrayBuffer, TypedArray, DataView, Blob, String 등 다양한 데이터 타입 사용 가능.</li>\n<li>String은 UTF-8 바이너리로 변환됨.</li>\n</ul>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 텍스트 데이터로 Blob 객체 생성</span>\n<span class=\"token keyword\">let</span> textBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'text/plain'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 형식화 배열로 Blob 객체 생성</span>\n<span class=\"token keyword\">let</span> dataArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arrayBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>dataArray<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'application/octet-stream'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Blob 객체의 프로퍼티 및 메서드</p>\n<ul>\n<li>size: Blob 객체가 참조하는 데이터 크기(바이트 단위).</li>\n<li>type: Blob 객체가 참조하는 데이터의 MIME 타입을 나타내는 문자열.</li>\n<li>slice(start, end, contentType): Blob 객체의 일부를 MIME 타입이 contentType인 새로운 Blob 객체로 반환.</li>\n</ul>\n</li>\n<li>\n<p>활용 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// JSON 객체를 문자열로 Blob 객체 생성</span>\n<span class=\"token keyword\">const</span> jsonObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> hello<span class=\"token operator\">:</span> <span class=\"token string\">'world'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> jsonBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>jsonObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 빈 Blob 객체 생성</span>\n<span class=\"token keyword\">const</span> emptyBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"csv-파일-다운로드-로직-구현\" style=\"position:relative;\"><a href=\"#csv-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EB%A1%9C%EC%A7%81-%EA%B5%AC%ED%98%84\" aria-label=\"csv 파일 다운로드 로직 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSV 파일 다운로드 로직 구현</h3>\n<ul>\n<li><code class=\"language-text\">responseType: blob</code>을 통해서 서버로부터 받아온 데이터를 <code class=\"language-text\">Blob</code> 객체로 처리해서 Blob 객체를 CSV 파일을 생성하고 다운로드하는 로직을 아래와 같이 구현</li>\n<li><code class=\"language-text\">content-disposition</code>은 HTTP 헤더 중 하나로, 컨텐츠의 표현 방식과 전송 방법을 지정. 주로 파일 다운로드에 활용되며, 클라이언트에게 전송된 파일의 이름을 지정하는 데 사용됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">downloadFile</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>response<span class=\"token operator\">:</span> AxiosResponse<span class=\"token operator\">&lt;</span>Blob<span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> contentDisposition <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'content-disposition'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> csvFileName <span class=\"token operator\">=</span> contentDisposition<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filename='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'download'</span><span class=\"token punctuation\">,</span> csvFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"2-피드백을-받고-스스로-생각-정리\" style=\"position:relative;\"><a href=\"#2-%ED%94%BC%EB%93%9C%EB%B0%B1%EC%9D%84-%EB%B0%9B%EA%B3%A0-%EC%8A%A4%EC%8A%A4%EB%A1%9C-%EC%83%9D%EA%B0%81-%EC%A0%95%EB%A6%AC\" aria-label=\"2 피드백을 받고 스스로 생각 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 피드백을 받고 스스로 생각 정리</h3>\n<ul>\n<li>이제는 단순히 동작을 구현하는 것을 넘어서 협업하기 좋은 코드, 비즈니스 적으로 도움을 줄 수 있는 코드를 적용하자</li>\n<li>순수한 컴포넌트 UI는 내가 생각할 때 어떤 역할만 해야 하는지 정보를 찾아보고 스스로 정리를 해보자 그래야 남들에게 설득을 할 수 있다.(팀원분들께서는 순수한 UI 컴포넌트를 만드는 목적부터 생각을 해봐야 한다고 말씀해주셨다. 순수한 컴포넌트 UI를 만드는 목적은 테스트 하기 위함인데 실제로 테스트를 하지 않고 있는 상황은 순수한 UI 컴포넌트를 만드는 이유가 없는 것과 마찬가지라고 이야기를 나누어주셨다.)</li>\n<li>코드리뷰를 받기 위해서는 PR 단위와 커밋을 정말 잘 분리해야 한다.</li>\n<li>정말 쉬우면서도 놓치기 쉬운 변수명과 함수명을 정말 여러번 고민하자.</li>\n</ul>\n<br>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>갑자기 추워진 날씨 때문에 마음이 움추러든다. 이럴 때 일 수록 따뜻한 커피와 함께 따뜻한 위로를 스스로에게 주는 시간들이 필요하지 않을 까 생각해 본다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://velog.io/@minh0518/Blob%EA%B0%9D%EC%B2%B4%EB%9E%80\">Blob 객체란</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n<ul>\n<li><a href=\"#1-blob-%EA%B0%9D%EC%B2%B4%EB%9E%80\">1. Blob 객체란</a></li>\n<li><a href=\"#csv-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EB%A1%9C%EC%A7%81-%EA%B5%AC%ED%98%84\">CSV 파일 다운로드 로직 구현</a></li>\n<li><a href=\"#2-%ED%94%BC%EB%93%9C%EB%B0%B1%EC%9D%84-%EB%B0%9B%EA%B3%A0-%EC%8A%A4%EC%8A%A4%EB%A1%9C-%EC%83%9D%EA%B0%81-%EC%A0%95%EB%A6%AC\">2. 피드백을 받고 스스로 생각 정리</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"회고 1. Blob 객체란 Blob(Binary Large Object)이란 바이너리 형태로 큰 객체를 저장(이미지, 비디오, 사운등 등 멀티미디어 객체들에서 사용) 4GB의 이진 데이터를 저장(DB에 직접 저장하는 것이 아닌, Large Object의 위치 포인터만 저장) 데이터를 간접적으로 접근하기 위한 객체 웹에서 사용되는 데이터 형식으로, 이진 데이터를 나타내며, 텍스트, 이미지, 오디오, 비디오 등 다양한 형식을 지원(파일 업로드, 이미지 프로세싱, 미디어 처리 등에 사용) JS에서 Blob 객체는ㄴ 데이터 덩어리를 참조하는 용도로 사용 메모리상의 데이터(바이트 배열)도 참조할 수 있으며 파일의 데이터도 참조할 수 있음 웹브라우저는 메모리 또는 디스크에 Blob을 저장할 수 있으며, Blob은 비디오 파일과 같이 매우 커서, 메모리에 적재하려면 를 활용하여 작은 조각으로 먼저 분리해야 할 수도 있음 Blob API 는 비동기 방식으로 동작 Blob 객체 생성하는 방법\n 생…","frontmatter":{"date":"November 12, 2023","title":"11월 2주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-231112/"}},"next":{"id":"edc6ada0-f723-5bff-ad80-c6d42072c37a","html":"<h2 id=\"업무-회고\" style=\"position:relative;\"><a href=\"#%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\" aria-label=\"업무 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>업무 회고</h2>\n<ol>\n<li><code class=\"language-text\">변수명이 이상하다 === 본인도 뭘 짜는지 이해를 못했다</code>에 대한 피드백을 들었다. 물론 개발 할 때 당시에는 최선이라고 생각하지만, 그래도 개발 코드를 작성하기 전에는 내가 ‘무엇’을 개발하는지 명확하게 인지하고 더 나아가 팀원분들이 잘 이해할 수 있는 코드를 작성할 수 있도록 노력해야 한다고 다시 한번 깨닫게 되었습니다.(추가로 <a href=\"https://www.yes24.com/Product/Goods/108748841\">쏙쏙 들어오는 함수형 코딩</a> 책을 리더분에게 추천받아 구체적으로 현재 작성된 코드가 <code class=\"language-text\">액션</code>으로 이루어져있어 나중에 해당 책을 바탕으로 리팩토링하면 좋을 것 같다는 피드백을 주셨습니다. 이 말을 듣고 책을 읽었을 당시에는 액션, 계산, 데이터를 생각하면서 개발을 했는데, 현재 그러지 못해 스스로 반성하게 되었습니다. 추후 책을 다시 읽으면서 다시 블로그에 정리하면서 리팩토링할 예정입니다.)</li>\n<li>개인적으로 업무를 할 때, 급한 변경 사항을 받게 되면 마음이 조급해져서 할 수 있는 것들도 하지 못하는 경우가 있었던 것 같습니다. 어떠한 상황에서 차분히 문제를 해결할 수 있는 마음가짐을 가질 수 있도록 평소에 심호흡과 마인드 컨트롤을 연습해야 겠습니다.</li>\n<li>조직에서 내가 어떤 영향을 주고 있는지, 그리고 어떤 성장을 하고 싶은지 고민을 매일 해야 한다고 생각합니다. 하지만 쉽지 않은 것 같습니다. 매일 빠르게 해결해야 하는 문제를 해결하다보면 본질적인 질문들을 놓칠 때가 많은 것 같습니다.</li>\n<li>\n<p>upstream에 Fork 뜬 Repo의 최신 변경사항을 fetch 하는 과정에서 특정 브랜치만 fetch 되는 문제가 있었습니다. 그 이유를 확인해보니 아래와 같이 fetch 설정이 develop 브랜치만 되어있었습니다. 아래 수정을 통해서 정상적으로 upstream에 올라온 최신 브랜치들을 fetch 할 수 있도록 해결했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token punctuation\">[</span>remote <span class=\"token string\">\"upstream\"</span><span class=\"token punctuation\">]</span>\nurl <span class=\"token operator\">=</span> git<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">github</span></span><span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>repo<span class=\"token punctuation\">.</span>git\n\n<span class=\"token comment\">// 변경 전</span>\nfetch <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>refs<span class=\"token operator\">/</span>heads<span class=\"token operator\">/</span>develop<span class=\"token operator\">:</span>refs<span class=\"token operator\">/</span>remotes<span class=\"token operator\">/</span>upstream<span class=\"token operator\">/</span>develop\n\n<span class=\"token comment\">// 변경 후</span>\nfetch <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>refs<span class=\"token operator\">/</span>heads<span class=\"token comment\">/*:refs/remotes/upstream/*</span></code></pre></div>\n</li>\n<li>Postmen을 통해서 API TEST를 손쉽게 할 수 있음을 깨달아서, 현재 개발하고 있는 API를 Postmen으로 옮겨놓았고 더 나아가 팀원분들에게 나중에 공유할 수 있어서 뿌듯했습니다.</li>\n</ol>\n<br>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>2023년도 2개월도 남지 않은 이 시점에서 본질적으로 ‘미래에 내가 어떤 개발자가 되고 싶은지, 어떤 가치와 어떤 영향을 주는 사람’이 되고 싶은지 고민이 많은 시기인 것 같습니다. 이 과정 속에서 위 질문에 대답을 찾을 수 있도록 끝임없이 고민하고 행동하고 노력하는 사람이 먼저 되자고 다짐을 해봅니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/108748841\">쏙쏙 들어오는 함수형 코딩</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\">업무 회고</a></li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 05, 2023","title":"11월 1주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-231105/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/write-log-231112/","nextSlug":"/write-log-231105/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}