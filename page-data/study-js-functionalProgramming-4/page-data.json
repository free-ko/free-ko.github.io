{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-functionalProgramming-4/","result":{"data":{"cur":{"id":"d996c1e8-9ed3-5e73-bd28-693f27aa9537","html":"<h1 id=\"-내용\" style=\"position:relative;\"><a href=\"#-%EB%82%B4%EC%9A%A9\" aria-label=\" 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 내용</h1>\n<ul>\n<li>\n<p>함수형 프로그래밍에서 가져갈 수 있는 것</p>\n<ul>\n<li><code class=\"language-text\">관점(체계)</code>을 제공 → 클린한 코드를 작성할 수 있습니다.</li>\n<li>함수형 프로그래밍의 대체제 = <code class=\"language-text\">OOP</code></li>\n<li>OOP → 관련된 데이터를 엮는 것</li>\n</ul>\n</li>\n<li>함수형 프로그래밍에서는 데이터를 재가공해서 보겠다는 의미</li>\n<li>액션 → 계산(명시적 입출력) → 액션(외부 상황에 영향을 주는 것)</li>\n<li>액션을 최소화 하고, 계산을 많이 만듭니다.</li>\n<li>\n<p>사용자가 할 수 있는 행동 = 요구사항</p>\n<ul>\n<li><code class=\"language-text\">요구 사항 → 계산 → DOM 조작(화면이 바뀌는 것)</code></li>\n<li>유사한 계층을 정리 정돈 = PIPE → 이름을 명시</li>\n<li>다양한 요구사항에 유연적으로 대응할 수 있는지 확인</li>\n</ul>\n</li>\n<li>결국 사용사의 요구 사항에 맞게 데이터를 계산해서 계산된 데이터를 화면에 업데이트 하는 과정</li>\n</ul>\n<br>\n<h1 id=\"️-실습\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EC%8B%A4%EC%8A%B5\" aria-label=\"️ 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✏️ 실습</h1>\n<ul>\n<li>하나의 프로젝에서 액션 - 계산 - 데이터를 나누는 실습을 진행</li>\n<li>계산을 <code class=\"language-text\">도메인, 비즈니스 로직, 타입 컨벌트, 포메터</code>로 나누는 실습을 진행</li>\n<li>또한 이러한 계산을 하나의 Hook안에 작성한다고 생각할 수 있음</li>\n</ul>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://github.com/FECrash/FunctionalProgramming\">함수형 프로그래밍 스터디</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","excerpt":"👀 내용 함수형 프로그래밍에서 가져갈 수 있는 것 을 제공 → 클린한 코드를 작성할 수 있습니다. 함수형 프로그래밍의 대체제 =  OOP → 관련된 데이터를 엮는 것 함수형 프로그래밍에서는 데이터를 재가공해서 보겠다는 의미 액션 → 계산(명시적 입출력) → 액션(외부 상황에 영향을 주는 것) 액션을 최소화 하고, 계산을 많이 만듭니다. 사용자가 할 수 있는 행동 = 요구사항  유사한 계층을 정리 정돈 = PIPE → 이름을 명시 다양한 요구사항에 유연적으로 대응할 수 있는지 확인 결국 사용사의 요구 사항에 맞게 데이터를 계산해서 계산된 데이터를 화면에 업데이트 하는 과정 ✏️ 실습 하나의 프로젝에서 액션 - 계산 - 데이터를 나누는 실습을 진행 계산을 로 나누는 실습을 진행 또한 이러한 계산을 하나의 Hook안에 작성한다고 생각할 수 있음 참고 함수형 프로그래밍 스터디 참고","frontmatter":{"date":"January 27, 2023","title":"함수형 프로그래밍 - 스터디 4주차","categories":"Study","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-functionalProgramming-4/"}},"next":{"id":"5c23ff2a-9aa4-5616-bebc-691cd0428d0f","html":"<h1 id=\"-복습\" style=\"position:relative;\"><a href=\"#-%EB%B3%B5%EC%8A%B5\" aria-label=\" 복습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👋 복습</h1>\n<ul>\n<li>함수형 사고에서 말하는 <code class=\"language-text\">액션 / 계산 / 데이터</code>의 3가지 영역으로 나눠서 만들어진 함수들간의 계층을 시각화 함</li>\n<li>더 나은 구조에 대해서 생각하고, 요구사항의 추가나 변화가 발생했을 때, 꼭 필요한 만큼의 <code class=\"language-text\">추가/변화</code>가 발생하는지 혹은 더 복잡한 사항이 발생하는지 팀끼리 실습을 함</li>\n</ul>\n<br/>\n<h1 id=\"-fe의-요구-사항이란\" style=\"position:relative;\"><a href=\"#-fe%EC%9D%98-%EC%9A%94%EA%B5%AC-%EC%82%AC%ED%95%AD%EC%9D%B4%EB%9E%80\" aria-label=\" fe의 요구 사항이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙋‍ FE의 요구 사항이란?</h1>\n<ul>\n<li>사용자가 특정 <code class=\"language-text\">액션(동작)</code>을 하면</li>\n<li>관련된 <code class=\"language-text\">기존 데이터</code>를 찾아서,</li>\n<li>특정 <code class=\"language-text\">조건에 의해</code> 기존 <code class=\"language-text\">데이터를 가공</code> 하고,</li>\n<li>그 결과를 다시 <code class=\"language-text\">사용자가 보기 편하게 바꿔서</code> 화면에 보여주는 큰 틀을 가짐</li>\n</ul>\n<br/>\n<h1 id=\"-계층과-흐름에-관한-보충-설명\" style=\"position:relative;\"><a href=\"#-%EA%B3%84%EC%B8%B5%EA%B3%BC-%ED%9D%90%EB%A6%84%EC%97%90-%EA%B4%80%ED%95%9C-%EB%B3%B4%EC%B6%A9-%EC%84%A4%EB%AA%85\" aria-label=\" 계층과 흐름에 관한 보충 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 계층과 흐름에 관한 보충 설명</h1>\n<ul>\n<li>계층 보단, <code class=\"language-text\">흐름(요구 사항)</code>을 먼저 생각해보자.</li>\n<li>위 요구 사항을 보면, <code class=\"language-text\">함수들 간의 순서</code>를 잡고, 함수 전 후 데이터들의 Input &#x26; Output을 생각해보자.</li>\n<li><code class=\"language-text\">계산</code>은 명시적 입출력이 있는 함수라면, <code class=\"language-text\">액션</code>은 암묵적 입출력이 있는 함수.</li>\n<li>이렇게 여러개의 큰 흐름을 그리다 보면, 같은 계층의 함수 그룹을 발견 할 수 있음.</li>\n<li>계층에 대한 개념이 확립되고 나면 새로운 요구사항들을 구현할 때, 요구사항에 맞게 계층에 맞는 함수들을 조립하는 형식으로 발전 가능</li>\n</ul>\n<br/>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://github.com/FECrash/FunctionalProgramming\">함수형 프로그래밍 스터디</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 26, 2023","title":"함수형 프로그래밍 - 스터디 3주차","categories":"Study","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-functionalProgramming-3/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-functionalProgramming-4/","nextSlug":"/study-js-functionalProgramming-3/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}