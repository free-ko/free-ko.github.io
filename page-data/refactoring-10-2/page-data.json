{"componentChunkName":"component---src-templates-blog-template-js","path":"/refactoring-10-2/","result":{"data":{"cur":{"id":"65596f4c-1ca9-550a-9a2c-525492bd89db","html":"<h2 id=\"105-특이-케이스-추가하기\" style=\"position:relative;\"><a href=\"#105-%ED%8A%B9%EC%9D%B4-%EC%BC%80%EC%9D%B4%EC%8A%A4-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"105 특이 케이스 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10.5 특이 케이스 추가하기</h2>\n<ul>\n<li>코드베이스에서 특정 값에 대해 똑같이 반응하는 코드가 여러 곳이라면 그 반응들을 한 데로 모으는 게 효율적임 이때 특수한 경우의 공통 동작을 요소 하나에 모아서 사용하는 특이 케이스 패턴을 사용함</li>\n</ul>\n<h3 id=\"절차\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8\" aria-label=\"절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ul>\n<li>리팩터링의 대상이 될 속성을 담은 데이터 구조(혹은 클래스)를 컨테이너라고 함</li>\n<li>컨테이너에 특이 케이스인지를 검사하는 속성을 추가하고, <code class=\"language-text\">false</code>를 반환하게 함</li>\n<li>특이 케이스 객체를 만듦. 이 객체는 특이 케이스인지를 검사하는 속성만 포함하며, 이 속성은 <code class=\"language-text\">true</code>를 반환하게 함</li>\n<li>클라이언트에서 특이 케이스인지를 검사하는 코드를 함수로 추출함. 모든 클라이언트가 값을 직접 비교하는 대신 방금 추출한 함수를 사용하도록 고침</li>\n<li>코드에 새로운 특이 케이스 대상을 추가함. 함수의 반환 값으로 받거나 변환 함수를 적용</li>\n<li>특이 케이스를 검사하는 함수 본문을 수정하여 특이 케이스 객체의 속성을 사용</li>\n<li>테스트</li>\n<li>여러 함수를 클래스로 묶기나 여러 함수를 변환 함수로 묶기를 적용하여 특이 케이스를 처리하는 공통 동작을 새로운 요소로 옮김.</li>\n<li>아직도 특이 케이스 검사 함수를 이용하는 곳이 남아 있다면 검사 함수를 인라인함</li>\n</ul>\n<h3 id=\"예시-클래스\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"예시 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시: 클래스</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Site</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">paymentHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 1</span>\n<span class=\"token keyword\">const</span> aCustomer <span class=\"token operator\">=</span> site<span class=\"token punctuation\">.</span>customer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> customerName<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aCustomer <span class=\"token operator\">===</span> <span class=\"token string\">\"미확인 고객\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  customerName <span class=\"token operator\">=</span> <span class=\"token string\">\"거주자\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  customerName <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 2</span>\n<span class=\"token keyword\">const</span> plan <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>aCustomer <span class=\"token operator\">===</span> <span class=\"token string\">\"미확인 고객\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n      registry<span class=\"token punctuation\">.</span>billingPlans<span class=\"token punctuation\">.</span>basic\n\t\t\t<span class=\"token operator\">:</span> aCustomer<span class=\"token punctuation\">.</span>billingPlans<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 클라이언트 3</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>aCustomer <span class=\"token operator\">!==</span> <span class=\"token string\">\"미확인 고객\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  aCustomer<span class=\"token punctuation\">.</span>billingPlan <span class=\"token operator\">=</span> newPlan<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 4</span>\n<span class=\"token keyword\">const</span> weekDelinquent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>aCustomer <span class=\"token operator\">===</span> <span class=\"token string\">\"미확인 고객\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n      <span class=\"token number\">0</span>\n      <span class=\"token operator\">:</span> aCustomer<span class=\"token punctuation\">.</span>paymentHistory<span class=\"token punctuation\">.</span>weeksDelinquentInLastYear<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 클라이언트들은 알려지지 않은 “미확인 고객” 필드를 처리</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Site</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer <span class=\"token operator\">===</span> <span class=\"token string\">'미확인 고객'</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnknownCustomer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">isUnknown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UnknownCustomer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">isUnknown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'거주자'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> registry<span class=\"token punctuation\">.</span>billingPlans<span class=\"token punctuation\">.</span>basic<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">set</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isUnknown</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>arg <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Customer</span> <span class=\"token operator\">||</span> arg <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnknownCustomer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">잘못된 값과 비교: &lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">.</span>isUnknown<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 (읽는 경우)</span>\n<span class=\"token keyword\">const</span> plan <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>billingPlan<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 클라이언트 (쓰는 경우)</span>\naCustomer<span class=\"token punctuation\">.</span>billingPlan <span class=\"token operator\">=</span> newPlan<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NullPaymentHistory</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">weeksDelinquentInLastYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 4</span>\n<span class=\"token keyword\">const</span> weekDelinquent <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>paymentHistory<span class=\"token punctuation\">.</span>weeksDelinquentInLastYear<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"예시-객체-리터럴\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-%EA%B0%9D%EC%B2%B4-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"예시 객체 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시: 객체 리터럴</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Site</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer <span class=\"token operator\">===</span> <span class=\"token string\">\"미확인 고객\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">createUnknownCustomer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_customer<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">billingPlan</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">paymentHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">isUnknown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createUnknownCustomer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    isUnknown<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"거주자\"</span><span class=\"token punctuation\">,</span>\n    billingPlan<span class=\"token operator\">:</span> registry<span class=\"token punctuation\">.</span>billingPlans<span class=\"token punctuation\">.</span>basic<span class=\"token punctuation\">,</span>\n    paymentHistory<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      weeksDelinquentInLastYear<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isUnknown</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> arg<span class=\"token punctuation\">.</span>isUnknown<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 클라이언트 1</span>\ncustomerName <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 클라이언트 2</span>\n<span class=\"token keyword\">const</span> plan <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>billingPlans<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 클라이언트 3</span>\n<span class=\"token keyword\">const</span> weekDelinquent <span class=\"token operator\">=</span> aCustomer<span class=\"token punctuation\">.</span>paymentHistory<span class=\"token punctuation\">.</span>weeksDelinquentInLastYear<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h2 id=\"106-어서션-추가하기\" style=\"position:relative;\"><a href=\"#106-%EC%96%B4%EC%84%9C%EC%85%98-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"106 어서션 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10.6 어서션 추가하기</h2>\n<ul>\n<li>특정 조건이 참일 때만 제대로 동작하는 코드 영역이 있을 수 있음. 어서션을 이용하면, 코드 자체에 필요한 가정을 항상 명시적으로 기술할 수 있음</li>\n<li>어서션은 항상 참이라고 가정하는 조건부 문장으로, 어서션이 실패했다는 건 프로그래머가 잘못했다는 뜻. 어서션은 오류 찾기에 활용될 뿐 아니라, 프로그램이 어떤 상태임을 가정한 채 실행되는지를 다른 개발자에게 알려주는 훌륭한 소통 도구</li>\n</ul>\n<h3 id=\"절차-1\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-1\" aria-label=\"절차 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>참이라고 가정하는 조건이 보이면 그 조건을 명시하는 어서션을 추가</li>\n</ol>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 이 코드에는 할인율이 항상 양수라는 가정이 깔려 있음</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">applyDiscount</span><span class=\"token punctuation\">(</span>aNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountRate <span class=\"token operator\">?</span> aNumber <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountRate <span class=\"token operator\">*</span> aNumber <span class=\"token operator\">:</span> aNumber<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 이런 어서션은 오류의 출처를 특정하기 어려울 때 도움이 됨</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Customer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">applyDiscount</span><span class=\"token punctuation\">(</span>aNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountRate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> aNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountRate <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> aNumber <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>discountRate <span class=\"token operator\">*</span> aNumber<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">set</span> <span class=\"token function\">discountRate</span><span class=\"token punctuation\">(</span>aNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> aNumber <span class=\"token operator\">||</span> aNumber <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_discountRate <span class=\"token operator\">=</span> aNumber<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"107-제어-플래그를-탈출문으로-바꾸기\" style=\"position:relative;\"><a href=\"#107-%EC%A0%9C%EC%96%B4-%ED%94%8C%EB%9E%98%EA%B7%B8%EB%A5%BC-%ED%83%88%EC%B6%9C%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"107 제어 플래그를 탈출문으로 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10.7 제어 플래그를 탈출문으로 바꾸기</h2>\n<ul>\n<li>제어 플래그란 코드의 동작을 변경하는 데 사용되는 변수를 말하며, 어딘가에서 값을 계산해 제어 플래그에 설정한 후 다른 어딘가의 조건문에서 검사하는 형태로 쓰임</li>\n<li>제어 플래그는 리팩터링으로 충분히 간소화할 수 있음. 제어 플래그의 주 서식지는 반복문 안으로, 주로 <code class=\"language-text\">return, break, continue</code>와 함께 사용</li>\n</ul>\n<h3 id=\"절차-2\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-2\" aria-label=\"절차 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>제어 플래그를 사용하는 코드를 함수로 추출할지 고려 함</li>\n<li>제어 플래그를 갱신하는 코드 각각을 적절한 제어문으로 바꿈. 하나 바꿀 때마다 테스트함</li>\n<li>모두 수정했다면 제어 플래그를 제거</li>\n</ol>\n<h3 id=\"예시-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">let</span> found <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>found<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'해적'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">sendAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      found <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'해병'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">sendAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      found <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token function\">checkForMiscreants</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">checkForMiscreants</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'해적'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">sendAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'해병'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">sendAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/89649360\">리팩터링 2판 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#105-%ED%8A%B9%EC%9D%B4-%EC%BC%80%EC%9D%B4%EC%8A%A4-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\">10.5 특이 케이스 추가하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-%ED%81%B4%EB%9E%98%EC%8A%A4\">예시: 클래스</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-%EA%B0%9D%EC%B2%B4-%EB%A6%AC%ED%84%B0%EB%9F%B4\">예시: 객체 리터럴</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#106-%EC%96%B4%EC%84%9C%EC%85%98-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\">10.6 어서션 추가하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-1\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#107-%EC%A0%9C%EC%96%B4-%ED%94%8C%EB%9E%98%EA%B7%B8%EB%A5%BC-%ED%83%88%EC%B6%9C%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">10.7 제어 플래그를 탈출문으로 바꾸기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-2\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-1\">예시</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","excerpt":"10.5 특이 케이스 추가하기 코드베이스에서 특정 값에 대해 똑같이 반응하는 코드가 여러 곳이라면 그 반응들을 한 데로 모으는 게 효율적임 이때 특수한 경우의 공통 동작을 요소 하나에 모아서 사용하는 특이 케이스 패턴을 사용함 절차 리팩터링의 대상이 될 속성을 담은 데이터 구조(혹은 클래스)를 컨테이너라고 함 컨테이너에 특이 케이스인지를 검사하는 속성을 추가하고, 를 반환하게 함 특이 케이스 객체를 만듦. 이 객체는 특이 케이스인지를 검사하는 속성만 포함하며, 이 속성은 를 반환하게 함 클라이언트에서 특이 케이스인지를 검사하는 코드를 함수로 추출함. 모든 클라이언트가 값을 직접 비교하는 대신 방금 추출한 함수를 사용하도록 고침 코드에 새로운 특이 케이스 대상을 추가함. 함수의 반환 값으로 받거나 변환 함수를 적용 특이 케이스를 검사하는 함수 본문을 수정하여 특이 케이스 객체의 속성을 사용 테스트 여러 함수를 클래스로 묶기나 여러 함수를 변환 함수로 묶기를 적용하여 특이 케이스를 처…","frontmatter":{"date":"October 11, 2023","title":"리팩터링 10장-2","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/refactoring-10-2/"}},"next":{"id":"51853431-e664-57cd-a478-10418d8a8d42","html":"<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<p>9월달에 업무적으로 그리고 개인적으로 결혼 준비 때문에 주간회고를 작성하지 못했습니다.(물론 핑계입니다.)\n그래도 지금 이 시점에서 간략하게 9월에 한 일들에 대해 정리를 해보고자 합니다.</p>\n<br>\n<h3 id=\"대규모-트래픽-경험\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EA%B7%9C%EB%AA%A8-%ED%8A%B8%EB%9E%98%ED%94%BD-%EA%B2%BD%ED%97%98\" aria-label=\"대규모 트래픽 경험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대규모 트래픽 경험</h3>\n<p>처음으로 대규모 트래픽을 경험했습니다.(대기업들이 겪고 있는 대규모 트래픽보다는 적을 수 있겠지만 개인적으로 대규모 트래픽이라고 생각합니다.) 저희 콘크릿앱을 통해서 현대카드에서 주최하는 <a href=\"https://www.youtube.com/watch?v=v1Iy10VGDRA\">다빈치모텔</a> 티켓을 NFT 형태로 사용자에게 너무나 편리하게 제공했습니다.</p>\n<p>이 과정에서 저희 팀은 주중, 주말 가릴 것 없이 너무나 열심히 일을 했고 저 또한 티켓을 구매하는 체크아웃 페이지를 개발한 입장에서 책임감과 부담감이 많이 있었습니다. 그래서 사용자가 겪을 수 있는 UX 부분에 대해 PM분들 뿐만아니라 모든 팀원들에게 의견을 구하고 그에 맞는 테스트 코드를 작성해서 최대한 에러를 예방할 수 있도록 했습니다.(너무나 티켓 판매 현장 당일에 감사하게도 티켓 결제 페이지에서는 특별한 이슈가 없었습니다.)</p>\n<p>또한 이번 프로젝트를 준비하면서 간접적으로 다른팀 또는 같은 팀에서 대규모 트래픽을 처리하기 위해 다양한 시도하는 부분을 간접적으로 볼 수 있게 되었습니다. 저희 팀에서는 웹소켓을 통해 대기열을 만들어서 사용자가 체크아웃 페이지(결제 페이지)에 순차적으로 들어올 수 있도록 처리를 해 주었습니다.(그래서 결제 페이지에서 큰 이슈가 없었습니다. 다시 한번 감사합니다.)</p>\n<p>그리고 사용자가 현장에서 저희 앱을 통해 티켓처럼 사용할 수 있는 서비스(클레임)를 인수인계 받아서 실시간으로 대응하는 경험했습니다. 이 때 큰 이슈는 아니였지만 사용자가 QR코드 사용을 위해 버튼을 눌렀을 때, 팝업 QR이 나타나는데 뒷 배경이 스크롤되는 문제가 발생해 이 부분을 해결했습니다.</p>\n<p>개인적으로 입사한지 얼마 되지 않은 저에게 중요한 업무를 주어 빠른 성장을 도와준 팀원분들에게 너무나 감사했습니다. 또한 모르는 부분을 여러번 질문을 했는데도 불구하고 친절하게 대답해주고 개발하는 과정 속에서도 저에게 많은 피드백을 통해 개발 시야를 넓힐 수 있도록 도와주셨습니다.</p>\n<p>어떻게 보면 짧은 시간이었을지 몰라도 지금 생각해보면 짧은 시간 안에 팀원분들 깊은 이해관계를 만들고 개발하고 있는 서비스의 이해를 높일 수 있는 시간이었던 것 같습니다. (이렇게 멋있는 팀원분들과 함께 일할 수 있어 너무나 감사하고 영광입니다.)</p>\n<br>\n<h3 id=\"대시보드의-필요성\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"대시보드의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대시보드의 필요성</h3>\n<p>이번 다빈치모텔 프로젝트를 통해 기존 대시보드의 기능 확장이 필요하다고 저뿐만아니라 BE발 팀원분들이 생각하고 있었습니다. 왜냐하면 PM분들이 필요한 데이터 수정을 일일히 BE분들에게 요청을 하고 있었습니다.(물론 저희 서비스에서 가장 중요한 기능은 PM분들이 직접 수정 및 사용이 가능합니다.)</p>\n<p>그래서 9월 말부터 저 혼자 대시보드를 <a href=\"https://refine.new/\">Refine</a>이라는 CRUD 프레임워크를 통해 개발을 진행하게 되었습니다. 사실 저는 대시보드를 혼자 개발해본 경험이 없는데, 저의 성장에 도움이 많이 될 거라는 팀 리더분의 이야기와 개발하고 있는 서비스를 깊게 이해할 수 있을 거라는 이야기를 통해 스스로 한번 해보자고 마음을 다잡고 개발을 진행했습니다.</p>\n<p>이 과정에서 특정 라이브러리의 코드를 직접 파악하고 어떤 속성이 있고 어떻게 동작하는지 파악하는 노력을 많이 했던 것 같습니다.</p>\n<p>정말 더 겸손하게 낮은 자세로 모르는 것을 모른다고 인정하고 차분히 파악하거나 다른 사람에게 물어보면서 개발을 해야 한다고 다시 한번 깨닫게 되었습니다.</p>\n<p>개인적으로 이번 대시보드를 잘 개발해서 기존 대시보드보다 더 좋은 UX와 특히 BE분들과 PM분들에게 많은 도움을 주고 싶습니다.</p>\n<br>\n<h3 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h3>\n<p>마지막으로 결혼 준비한다고 팀원분들이 저에게 많은 배려를 해주시는 것에 대해 너무나 감사하다고 전하고 싶습니다.</p>\n<p>한 사람을 만나는 것은 또 하나의 우주를 만나는 것이라고 하는데, 이 처럼 좋은 우주를 그것도 많은 우주를 만나는 것도 저에게 있어 더할 나위 없는 큰 행운이라고 생각하며 매일 감사하는 마음으로 임해야겠습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%EB%8C%80%EA%B7%9C%EB%AA%A8-%ED%8A%B8%EB%9E%98%ED%94%BD-%EA%B2%BD%ED%97%98\">대규모 트래픽 경험</a></li>\n<li><a href=\"#%EB%8C%80%EC%8B%9C%EB%B3%B4%EB%93%9C%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\">대시보드의 필요성</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"October 09, 2023","title":"10월 2주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-231009/"}},"prev":{"id":"51822c9a-5360-5af8-b9ec-914eef4596fc","html":"<h2 id=\"111-질의-함수와-변경-함수-분리하기\" style=\"position:relative;\"><a href=\"#111-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EC%99%80-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"111 질의 함수와 변경 함수 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.1 질의 함수와 변경 함수 분리하기</h2>\n<ul>\n<li>겉보기 부수효과가 있는 함수와 없는 함수는 명확히 구분하는 것이 좋음. 질의 함수(읽기 함수)는 모두 부수효과가 없어야 함. 이를 ‘명령-질의 분리’라고도 함</li>\n</ul>\n<h3 id=\"절차\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8\" aria-label=\"절차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>대상 함수를 복제하고 질의 목적에 충실한 이름을 지음</li>\n<li>새 질의 함수에서 부수효과를 모두 제거</li>\n<li>정적 검사를 수행</li>\n<li>원래 함수(변경 함수)를 호출하는 곳을 모두 찾아냄. 호출하는 곳에서 반환 값을 사용한다면 질의 함수를 호출하도록 바꾸고, 원래 함수를 호출하는 코드를 바로 아래 줄에 새로 추가함.하나 수정할 때마다 테스트 진행</li>\n<li>원래 함수에서 질의 관련 코드를 제거함</li>\n<li>테스트</li>\n</ol>\n<h3 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변경 함수</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 질의 함수</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">findMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> found <span class=\"token operator\">=</span> <span class=\"token function\">findMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">alertForMiscreant</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> p <span class=\"token keyword\">of</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'범인'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">===</span> <span class=\"token string\">'경찰'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setOffAlarms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"112-함수-매개변수화하기\" style=\"position:relative;\"><a href=\"#112-%ED%95%A8%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%ED%99%94%ED%95%98%EA%B8%B0\" aria-label=\"112 함수 매개변수화하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11.2 함수 매개변수화하기</h2>\n<ul>\n<li>두 함수의 로직이 아주 비슷하고 단지 리터럴 값만 다르다면, 그 다른 값만 매개변수로 받아 처리하는 함수 하나로 합쳐서 중복을 없앨 수 있음.</li>\n</ul>\n<h3 id=\"절차-1\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8-1\" aria-label=\"절차 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차</h3>\n<ol>\n<li>비슷한 함수 중 하나를 선택함</li>\n<li>함수 선언 바꾸기로 리터럴들을 매개변수로 추가함</li>\n<li>이 함수를 호출하는 곳 모두에 적절한 리터럴 값을 추가함</li>\n<li>테스트함</li>\n<li>매개변수로 받은 값을 사용하도록 함수 본문을 수정함. 하나 수정할 때마다 테스트함.</li>\n<li>비슷한 다른 함수를 호출하는 코드를 찾아 매개변수화된 함수를 호출하도록 하나씩 수정함.\n하나 수정할 때마다 테스트함</li>\n</ol>\n<h3 id=\"예시-1\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C-1\" aria-label=\"예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// before</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>usage <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> amount <span class=\"token operator\">=</span> <span class=\"token function\">bottomBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.03</span> <span class=\"token operator\">+</span> <span class=\"token function\">middleBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span> <span class=\"token operator\">+</span> <span class=\"token function\">topBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">bottomBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">middleBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> <span class=\"token number\">100</span> <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">100</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">topBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> <span class=\"token number\">200</span> <span class=\"token operator\">?</span> usage <span class=\"token operator\">-</span> <span class=\"token number\">200</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// after</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> usage <span class=\"token operator\">></span> bottom <span class=\"token operator\">?</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> bottom <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">baseCharge</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>usage <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> amount <span class=\"token operator\">=</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.03</span> <span class=\"token operator\">+</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span> <span class=\"token operator\">+</span>\n    <span class=\"token function\">withinBand</span><span class=\"token punctuation\">(</span>usage<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">usd</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://www.yes24.com/Product/Goods/89649360\">리팩터링 2판 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#111-%EC%A7%88%EC%9D%98-%ED%95%A8%EC%88%98%EC%99%80-%EB%B3%80%EA%B2%BD-%ED%95%A8%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\">11.1 질의 함수와 변경 함수 분리하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C\">예시</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#112-%ED%95%A8%EC%88%98-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98%ED%99%94%ED%95%98%EA%B8%B0\">11.2 함수 매개변수화하기</a></p>\n<ul>\n<li><a href=\"#%EC%A0%88%EC%B0%A8-1\">절차</a></li>\n<li><a href=\"#%EC%98%88%EC%8B%9C-1\">예시</a></li>\n</ul>\n</li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 14, 2023","title":"리팩터링 11장-1","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/refactoring-11-1/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/refactoring-10-2/","nextSlug":"/write-log-231009/","prevSlug":"/refactoring-11-1/"}},"staticQueryHashes":["1073350324","2938748437"]}