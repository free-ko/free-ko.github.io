{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-spread-1/","result":{"data":{"cur":{"id":"75a0b161-d7c9-5a5f-8633-ca714bcf7f32","html":"<br>\n<h1 align=\"center\">\n  👋  let, const 사용 기준, spread, Array spread, String spread, Object spread, push(...spread)\n</h1>\n<br>\n<h2 id=\"1-let-const-사용-기준\" style=\"position:relative;\"><a href=\"#1-let-const-%EC%82%AC%EC%9A%A9-%EA%B8%B0%EC%A4%80\" aria-label=\"1 let const 사용 기준 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. let, const 사용 기준</h2>\n<ul>\n<li><code class=\"language-text\">let</code> : 변경 할 수 있음</li>\n<li><code class=\"language-text\">const</code> : 변경 할 수 없음</li>\n<li>\n<p><code class=\"language-text\">let</code>, <code class=\"language-text\">const</code> 변수의 시맨틱을 우선하여 사용</p>\n<ul>\n<li>값이 변경되면 <code class=\"language-text\">let</code></li>\n<li>초깃값이 변경되지 않으면 <code class=\"language-text\">const</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// let, const 사용 기준</span>\n\n<span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nvalues<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">book</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> param <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"2-spread\" style=\"position:relative;\"><a href=\"#2-spread\" aria-label=\"2 spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Spread</h2>\n<ul>\n<li>Syntax: <code class=\"language-text\">[...iterable]</code></li>\n<li>\n<p><code class=\"language-text\">[...iterable]</code></p>\n<ul>\n<li><code class=\"language-text\">[...]</code>처럼 [ ] 안에 점<code class=\"language-text\">(.)</code> 3개를 작성하고</li>\n<li>이어서 이터러블 오브젝트 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>list<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [11, 21, 22, 12]</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> key<span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {key: 50}</span></code></pre></div>\n</li>\n<li>이터러블 오브젝트를 하나씩 전개</li>\n<li><code class=\"language-text\">{key: value}</code>의 <code class=\"language-text\">Object</code>가 이터러블 오브젝트는 아니지만 전개 가능</li>\n</ul>\n<br>\n<h2 id=\"3-array-speard\" style=\"position:relative;\"><a href=\"#3-array-speard\" aria-label=\"3 array speard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Array Speard</h2>\n<ul>\n<li><code class=\"language-text\">Spread</code> 대상 배열을 작성한 위치에 엘리머트 단위로 분리(전개)</li>\n<li>\n<p><code class=\"language-text\">Array Spread</code> 작성 형태</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> two <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>one<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>two<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [11, 21, 22, 12, 31, 32[</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">...one</code> : <code class=\"language-text\">one</code> 배열의 <code class=\"language-text\">[21, 22]</code>를 엘리먼트 단위로 분리(전개) 함</li>\n<li><code class=\"language-text\">...two</code> : <code class=\"language-text\">two</code> 위치에 <code class=\"language-text\">two</code> 배열의 <code class=\"language-text\">[31, 32]</code>를 엘리먼트 단위로 분리(전개) 함</li>\n</ol>\n</li>\n<li>\n<p>값이 대체되지 않고 전개</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>one<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [11, 12, 11, 12]</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4</span></code></pre></div>\n<ul>\n<li>앞에 <code class=\"language-text\">11</code>과 <code class=\"language-text\">12</code>가 있지만 값을 대체하지 않고 <code class=\"language-text\">...</code>을 작성한 위치에 전개 함</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"4-string-spread\" style=\"position:relative;\"><a href=\"#4-string-spread\" aria-label=\"4 string spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. String Spread</h2>\n<ul>\n<li><code class=\"language-text\">spread</code> 대상 문자열을 작성한 위치에 문자 단위로 전개</li>\n<li>\n<p><code class=\"language-text\">String Spread</code> 작성 형태</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token string\">'ABC'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [A, B, C]</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">[...target];</code></li>\n<li><code class=\"language-text\">target</code>의 <code class=\"language-text\">\"ABC\"</code>를 문자 단위로 분리하여 <code class=\"language-text\">...target</code> 위치에 설정</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"5-object-spread\" style=\"position:relative;\"><a href=\"#5-object-spread\" aria-label=\"5 object spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Object Spread</h2>\n<ul>\n<li><code class=\"language-text\">Spread</code> 대상 <code class=\"language-text\">Object</code>를 작성한 위치에 프로퍼티 단위로 전개</li>\n<li>\n<p><code class=\"language-text\">Object Spread</code> 작성 형태</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> key1<span class=\"token operator\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> key2<span class=\"token operator\">:</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> key3<span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>one <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// {key3: 33, key1: 11, key2: 22}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">...one</code> : <code class=\"language-text\">one</code> 오브젝트의 프로퍼티를 전개</li>\n</ol>\n</li>\n<li>\n<p>프로퍼티 이름이 같으면 값 대체</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> book<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> music<span class=\"token operator\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> book<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>one <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {book: 10, music: 20}</span>\n\n<span class=\"token comment\">// const check = [...one];</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">{book: 30}</code>과 <code class=\"language-text\">{book: 10}</code>에서 프로퍼티 이름이 같으므로 30이 뒤에 작성한 <code class=\"language-text\">10</code>으로 대체됨</li>\n<li><code class=\"language-text\">Object</code>는 이터러블 오브젝트가 아니므로 <code class=\"language-text\">[...one]</code> 형태로 작성하면 에러가 발생</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"6-pushspread\" style=\"position:relative;\"><a href=\"#6-pushspread\" aria-label=\"6 pushspread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Push(…spread)</h2>\n<ul>\n<li><code class=\"language-text\">push()</code> 파라미터에 <code class=\"language-text\">spread</code> 대상 작성</li>\n<li>\n<p>배열 끝에 대상을 분리하여 첨부</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> five <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>five<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [21, 22, 51, 52]</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [21, 22, 51, 52, a, b, c]</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">result</code> 배열 끝에 첨부</li>\n<li>배열이면 엘리먼트로 분리하여 첨부하고 문자열이면 문자 단위로 분리하여 첨부</li>\n</ol>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-let-const-%EC%82%AC%EC%9A%A9-%EA%B8%B0%EC%A4%80\">1. let, const 사용 기준</a></li>\n<li><a href=\"#2-spread\">2. Spread</a></li>\n<li><a href=\"#3-array-speard\">3. Array Speard</a></li>\n<li><a href=\"#4-string-spread\">4. String Spread</a></li>\n<li><a href=\"#5-object-spread\">5. Object Spread</a></li>\n<li><a href=\"#6-pushspread\">6. Push(…spread)</a></li>\n</ul>\n</div>","excerpt":"1. let, const 사용 기준  : 변경 할 수 있음  : 변경 할 수 없음 ,  변수의 시맨틱을 우선하여 사용 값이 변경되면  초깃값이 변경되지 않으면  2. Spread Syntax:   처럼   안에 점 3개를 작성하고 이어서 이터러블 오브젝트 작성 이터러블 오브젝트를 하나씩 전개 의 가 이터러블 오브젝트는 아니지만 전개 가능 3. Array Speard  대상 배열을 작성한 위치에 엘리머트 단위로 분리(전개)  작성 형태  :  배열의 를 엘리먼트 단위로 분리(전개) 함  :  위치에  배열의 를 엘리먼트 단위로 분리(전개) 함 값이 대체되지 않고 전개 앞에 과 가 있지만 값을 대체하지 않고 을 작성한 위치에 전개 함 4. String Spread  대상 문자열을 작성한 위치에 문자 단위로 전개  작성 형태  의 를 문자 단위로 분리하여  위치에 설정 5. Object Spread  대상 를 작성한 위치에 프로퍼티 단위로 전개  작성 형태  :  오브젝트의 프로퍼티를 …","frontmatter":{"date":"September 06, 2021","title":"Spread(스프레드)","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-spread-1/"}},"next":{"id":"8b1dc758-8371-5eeb-bb5b-45b6a438c3a4","html":"<br>\n<h1 align=\"center\">\n  👋 이터레이터 오브젝트, 이터레이터 프로토콜\n</h1>\n<br>\n<h2 id=\"1-이터레이터-프로토콜\" style=\"position:relative;\"><a href=\"#1-%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\" aria-label=\"1 이터레이터 프로토콜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 이터레이터 프로토콜</h2>\n<ul>\n<li>\n<p>이터레이터(iterator) 프로토콜</p>\n<ul>\n<li>값을 순서대로 생성하는 방법(규약)</li>\n</ul>\n</li>\n<li>\n<p>이터레이터 오브젝트</p>\n<ul>\n<li><code class=\"language-text\">Symbol.iterator()</code>를 호출하면</li>\n<li>이터레이터 오브젝트를 생성하여 반환</li>\n<li>이터레이터 오브젝트에 <code class=\"language-text\">next()</code>가 있음</li>\n<li>생성한 오브젝트를 이터레이터라고 부름</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// {value: 10, done: false}</span>\n<span class=\"token comment\">// {value: 20, done: false}</span>\n<span class=\"token comment\">// {value: undefined, done: true}</span></code></pre></div>\n<ol>\n<li>이터레이터 오브젝트의 <code class=\"language-text\">next()</code>를 호출하면 이터레이터를 호출한다고도 함</li>\n<li><code class=\"language-text\">{value: 10, done: false}</code> 를 반환함, <code class=\"language-text\">value는 [10, 20]</code>에서 첫 번째 값이고 <code class=\"language-text\">done: false</code>는 이터레이터 상태 임</li>\n<li>두 번째 <code class=\"language-text\">next()</code> 호출</li>\n<li><code class=\"language-text\">{value: 20, done: false}</code> 를 반환함, <code class=\"language-text\">value는 [10, 20]</code>에서 두 번째 값이고 <code class=\"language-text\">done: false</code>는 이터레이터 상태 임</li>\n<li>세 번째 <code class=\"language-text\">next()</code> 호출</li>\n<li><code class=\"language-text\">{value: undefined, done: true}</code> 반환, <code class=\"language-text\">undefined</code>는 처리할 값이 없다는 것을 뜻하며 <code class=\"language-text\">done: true</code>는 이터레이터의 종료를 뜻함</li>\n</ol>\n<br>\n</li>\n<li>\n<p>이터레이터 오브젝트 구조</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n\t\t1. list.__proto__를 펼치면 Symbol(Symbol.iterator)가 있으므로 \n\t\t\t- 이터레이터 오브젝트를 만들 수 있음\n\t*/</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n\t\t1. 위 형태로 호출하면 이터레이터 오브젝트를 생성하여 반환 함\n\t\n\t\t2. obj.__proto__를 펼치면 next()가 있음\n\t\t\t- next()가 있으므로 obj는 이터레이터 오브젝트임\n\t*/</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\">1. 이터레이터 프로토콜</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 05, 2021","title":"이터레이터 오브젝트, 프로토콜","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-iteration-3/"}},"prev":{"id":"23108339-f626-55ab-a972-f25ba373992b","html":"<br>\n<h1 align=\"center\">\n  👋  Rest 파라미터, function spread, Array-like, rest와 arguments 차이\n</h1>\n<br>\n<h2 id=\"1-function-spread\" style=\"position:relative;\"><a href=\"#1-function-spread\" aria-label=\"1 function spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Function Spread</h2>\n<ul>\n<li>호출하는 함수의 파라미터에 <code class=\"language-text\">Spread</code> 대상 작성</li>\n<li>\n<p>처리 순서 및 방법</p>\n<ul>\n<li>함수가 호출되면 우선, 파라미터의 배열을 엘리먼트 단위로 전개</li>\n<li>전개한 순서대로 파라미터 값으로 넘겨 줌</li>\n<li>호출 받는 함수의 파라미터에 순서대로 매핑됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one <span class=\"token operator\">+</span> two <span class=\"token operator\">+</span> three<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 60</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">one: 10</code>, <code class=\"language-text\">two: 20</code>, <code class=\"language-text\">three: 30</code>이 매핑 됨</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-rest-파라미터\" style=\"position:relative;\"><a href=\"#2-rest-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0\" aria-label=\"2 rest 파라미터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Rest 파라미터</h2>\n<ul>\n<li>Syntax: <code class=\"language-text\">function(param, paramN, ...name)</code></li>\n<li>\n<p>분리하여 받은 파라미터를 배열로 결합</p>\n<ul>\n<li><code class=\"language-text\">Spread</code> : 분리, <code class=\"language-text\">Rest</code>: 결합</li>\n</ul>\n</li>\n<li>\n<p>작성 방법</p>\n<ul>\n<li>호출받은 함수의 파라미터에</li>\n<li><code class=\"language-text\">...</code>에 이어서 파라미터 이름 작성</li>\n<li>호출한 함수에서 보낸 순서로 매핑</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [10, 20, 30]</span>\n<span class=\"token comment\">// true</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">one: 10</code>, <code class=\"language-text\">two: 20</code>, <code class=\"language-text\">three: 30</code>이 매핑 됨</li>\n</ul>\n<br>\n<ul>\n<li>파라미터와 <code class=\"language-text\">Rest</code> 파라미터 혼합 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ten<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ten<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 10</span>\n<span class=\"token comment\">// [20, 30]</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">ten</code>에 10이 설정되고</li>\n<li>설정되지 않은 나머지 값 전체가 파라미터 <code class=\"language-text\">rest</code>에 설정됨 그래서 <code class=\"language-text\">rest</code> 파라미터 임</li>\n<li>나머지라는 시맨틱을 나타내기 위해 파라미터 이름을 <code class=\"language-text\">rest</code>로 사용하기도 함</li>\n</ol>\n<br>\n</li>\n</ul>\n<h2 id=\"3-array-like\" style=\"position:relative;\"><a href=\"#3-array-like\" aria-label=\"3 array like permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Array-like</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Object</code> 타입이지만</p>\n<ul>\n<li>배열처럼 이터러블 가능한 오브젝트</li>\n<li><code class=\"language-text\">for()</code>문으로 전개할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>작성 방법</p>\n<ul>\n<li>프로퍼티 <code class=\"language-text\">key</code> 값을 0부터 1씩 증가하면서 프로퍼티 값을 작성</li>\n<li><code class=\"language-text\">length</code>에 전체 프로퍼티 수 작성</li>\n<li>이렇게 작성하지 않으면 그냥 <code class=\"language-text\">Object</code>임</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">'가'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'나'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">'다'</span><span class=\"token punctuation\">,</span> length<span class=\"token operator\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 가</span>\n<span class=\"token comment\">// 나</span>\n<span class=\"token comment\">// 다</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">length</code> 프로퍼티는 전개되지 않음</li>\n<li><code class=\"language-text\">for - in</code> 문으로 전개하면 length 프로퍼티도 전개됨</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"4-rest와-arguments-차이\" style=\"position:relative;\"><a href=\"#4-rest%EC%99%80-arguments-%EC%B0%A8%EC%9D%B4\" aria-label=\"4 rest와 arguments 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Rest와 Arguments 차이</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Argument</code> 오브젝트</p>\n<ul>\n<li>파라미터 작성에 관계 없이 전체를 설정</li>\n<li><code class=\"language-text\">Array-like</code> 형태, <code class=\"language-text\">Array</code> 메소드를 사용할 수 없음</li>\n<li><code class=\"language-text\">__proto__</code>가 <code class=\"language-text\">Object</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Rest</code> 파라미터</p>\n<ul>\n<li>매핑되지 않은 나머지 파라미터만 설정</li>\n<li><code class=\"language-text\">Array</code> 오브젝트 형태, <code class=\"language-text\">Array</code> 메소드를 사용할 수 있음</li>\n<li><code class=\"language-text\">__proto__</code>가 <code class=\"language-text\">Array</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Argument 오브젝트</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> param <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// arguments의 __proto__가 Object</span>\n  <span class=\"token function\">book</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// rest 파라미터</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// rest의 __proto__가 Array</span>\n  <span class=\"token function\">point</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-function-spread\">1. Function Spread</a></li>\n<li><a href=\"#2-rest-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0\">2. Rest 파라미터</a></li>\n<li><a href=\"#3-array-like\">3. Array-like</a></li>\n<li><a href=\"#4-rest%EC%99%80-arguments-%EC%B0%A8%EC%9D%B4\">4. Rest와 Arguments 차이</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 07, 2021","title":"Rest 파라미터","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-spread-2/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-spread-1/","nextSlug":"/study-js-es6-iteration-3/","prevSlug":"/study-js-es6-spread-2/"}},"staticQueryHashes":["1073350324","2938748437"]}