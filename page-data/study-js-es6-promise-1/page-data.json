{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-promise-1/","result":{"data":{"cur":{"id":"ac4b0d0d-14ef-593e-9d33-003ade61ac74","html":"<br>\n<h1 align=\"center\">\n  👋  Promise 개요, Promise 처리 흐름, Promise 상태\n</h1>\n<br>\n<h2 id=\"1-promise-개요\" style=\"position:relative;\"><a href=\"#1-promise-%EA%B0%9C%EC%9A%94\" aria-label=\"1 promise 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Promise 개요</h2>\n<ul>\n<li>\n<p>JS는 기본적으로 <code class=\"language-text\">동기</code>로실행</p>\n<ul>\n<li>실행이 끝나야 다음 코드를 실행함</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Promise</code> 는 비동기로 처리(실행)함</p>\n<ul>\n<li>코드를 연속으로 처리(실행)하지 않고, 중간에 흐름이 끊어졌다가 연결된 코드를 처리 할 수 있는 환경이 되었을 때 실행함</li>\n<li>이를 위한 메커니즘을 갖고 있음</li>\n</ul>\n</li>\n<li><code class=\"language-text\">DOM</code> 스펙에서 <code class=\"language-text\">JS</code> 스펙으로 전환</li>\n</ul>\n<br>\n<h2 id=\"2-promise-처리-흐름\" style=\"position:relative;\"><a href=\"#2-promise-%EC%B2%98%EB%A6%AC-%ED%9D%90%EB%A6%84\" aria-label=\"2 promise 처리 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Promise 처리 흐름</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Promise</code> 처리(실행) 흐름 개요</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resovle<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Promise'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성공'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">(</span><span class=\"token parameter\">reson</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'실패'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'마지막'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Promise</span>\n<span class=\"token comment\">// 마지막</span>\n<span class=\"token comment\">// 성공</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">new Promise()</code> 를 실행함</p>\n<ul>\n<li>파라미터의 함수를 실행함</li>\n<li><code class=\"language-text\">resolve()</code> 를 호출 하지 않음</li>\n<li><code class=\"language-text\">console.log(\"Promise\")</code> 를 실행</li>\n<li><code class=\"language-text\">obj</code> 변수에 <code class=\"language-text\">Promise</code> 인스턴스 할당</li>\n</ul>\n</li>\n<li><code class=\"language-text\">obj.then()</code>을 실행하지 않음</li>\n<li>마지막 줄의 <code class=\"language-text\">console.log(\"마지막\")</code> 실행함</li>\n<li>\n<p><code class=\"language-text\">resolve()</code> 실행</p>\n<ul>\n<li><code class=\"language-text\">then()</code> 의 첫 번째 파라미터 함수 실행</li>\n<li><code class=\"language-text\">console.log(\"성공\")</code> 실행</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"3-promise-상태\" style=\"position:relative;\"><a href=\"#3-promise-%EC%83%81%ED%83%9C\" aria-label=\"3 promise 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Promise 상태</h2>\n<ul>\n<li>\n<p>상태는 3가지이며, 하나만 발생함</p>\n<ul>\n<li><code class=\"language-text\">pending, settled(fulfilled, rejected)</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">pending</code> 상태</p>\n<ul>\n<li><code class=\"language-text\">new Promise()</code> 로 인스턴스 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pending'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성공'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">reson</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'실패'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'마지막'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// pending</span>\n<span class=\"token comment\">// 마지막</span>\n<span class=\"token comment\">// 성공</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">settled</code> 상태</p>\n<ul>\n<li><code class=\"language-text\">pending</code>이 종료된 상태를 나타내며 <code class=\"language-text\">fulfilled</code>와 <code class=\"language-text\">rejected</code> 상태로 구분</li>\n<li>바인딩한 핸들러 함수가 호출됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pending'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'성공'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">reson</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'실패'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'마지막'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// pending</span>\n<span class=\"token comment\">// 마지막</span>\n<span class=\"token comment\">// 성공</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">fulfilled(성공)</code> : <code class=\"language-text\">then()</code> 의 첫 번째 함수 호출</li>\n<li><code class=\"language-text\">rejected(실패)</code> : <code class=\"language-text\">then()</code> 의 두 번째 함수 호출</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-promise-%EA%B0%9C%EC%9A%94\">1. Promise 개요</a></li>\n<li><a href=\"#2-promise-%EC%B2%98%EB%A6%AC-%ED%9D%90%EB%A6%84\">2. Promise 처리 흐름</a></li>\n<li><a href=\"#3-promise-%EC%83%81%ED%83%9C\">3. Promise 상태</a></li>\n</ul>\n</div>","excerpt":"1. Promise 개요 JS는 기본적으로 로실행 실행이 끝나야 다음 코드를 실행함  는 비동기로 처리(실행)함 코드를 연속으로 처리(실행)하지 않고, 중간에 흐름이 끊어졌다가 연결된 코드를 처리 할 수 있는 환경이 되었을 때 실행함 이를 위한 메커니즘을 갖고 있음  스펙에서  스펙으로 전환 2. Promise 처리 흐름  처리(실행) 흐름 개요  를 실행함 파라미터의 함수를 실행함  를 호출 하지 않음  를 실행  변수에  인스턴스 할당 을 실행하지 않음 마지막 줄의  실행함  실행  의 첫 번째 파라미터 함수 실행  실행 3. Promise 상태 상태는 3가지이며, 하나만 발생함   상태  로 인스턴스 생성  상태 이 종료된 상태를 나타내며 와  상태로 구분 바인딩한 핸들러 함수가 호출됨  :  의 첫 번째 함수 호출  :  의 두 번째 함수 호출 1. Promise 개요 2. Promise 처리 흐름 3. Promise 상태","frontmatter":{"date":"December 15, 2021","title":"Promise - 개요, 처리 흐름, 상태","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-promise-1/"}},"next":{"id":"ffb300ed-2c2a-528e-a3d7-bde6f81673b5","html":"<br>\n<h1 align=\"center\">\n  👋  Module - export/import 형태, 변수/함수/Class, as, *, default\n</h1>\n<br>\n<h2 id=\"1-export-import-형태\" style=\"position:relative;\"><a href=\"#1-export-import-%ED%98%95%ED%83%9C\" aria-label=\"1 export import 형태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. export, import 형태</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">export</code> 대상에 <code class=\"language-text\">export</code> 키워드 작성</p>\n<ul>\n<li><code class=\"language-text\">export function name(){...} 변수, function, Class, Object</code></li>\n</ul>\n</li>\n<li>\n<p>중괄호 <code class=\"language-text\">{}</code> 에 <code class=\"language-text\">import</code> 이름 작성</p>\n<ul>\n<li><code class=\"language-text\">import {name,,, nameN} from \"./export.mjs\";</code></li>\n</ul>\n</li>\n<li>\n<p>한 번에 <code class=\"language-text\">export</code> 선언</p>\n<ul>\n<li><code class=\"language-text\">export {name1, ..., nameN};</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">export, import</code> 이름 변경</p>\n<ul>\n<li><code class=\"language-text\">export {fromName as toName};</code></li>\n<li><code class=\"language-text\">import {toName as name} from \"./export.mjs\";</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">export</code> default</p>\n<ul>\n<li><code class=\"language-text\">export default function name(){...}</code></li>\n<li><code class=\"language-text\">import name from \"./export.mjs\";</code></li>\n</ul>\n</li>\n<li>\n<p>전체 <code class=\"language-text\">import</code></p>\n<ul>\n<li><code class=\"language-text\">import * as name from \"./export.mjs\";</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-변수-함수-class\" style=\"position:relative;\"><a href=\"#2-%EB%B3%80%EC%88%98-%ED%95%A8%EC%88%98-class\" aria-label=\"2 변수 함수 class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 변수, 함수, Class</h2>\n<ul>\n<li>\n<p>변수, 함수 <code class=\"language-text\">export/import</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> id <span class=\"token operator\">+</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// import.mjs</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> point<span class=\"token punctuation\">,</span> getPoint <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code123</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">Class export/import</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">setPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">point</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point <span class=\"token operator\">=</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// import.mjs</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Book <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">setPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">700</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 700</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">export</code> 리스트 형태로 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n\n<span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> id <span class=\"token operator\">+</span> poin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> point<span class=\"token punctuation\">,</span> getPoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// import.mjs</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> point<span class=\"token punctuation\">,</span> getPoint <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code123</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"3-as-\" style=\"position:relative;\"><a href=\"#3-as-\" aria-label=\"3 as  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. as, *</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">as</code>로 <code class=\"language-text\">export/import</code> 이름 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n\n<span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> id <span class=\"token operator\">+</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> point <span class=\"token keyword\">as</span> asPoint<span class=\"token punctuation\">,</span> getPoint <span class=\"token keyword\">as</span> asGetPoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// import.js</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> asPoint <span class=\"token keyword\">as</span> point<span class=\"token punctuation\">,</span> asGetPoint <span class=\"token keyword\">as</span> getPoint <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">*</code> 로 <code class=\"language-text\">export</code> 전체를 <code class=\"language-text\">import</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n\n<span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> id <span class=\"token operator\">+</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> point<span class=\"token punctuation\">,</span> getPoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// import.js</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> all <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code123</span>\n\n<span class=\"token comment\">// as all에서 all이 Object 이름이 됨</span>\n<span class=\"token comment\">// all = {point: 값, getPoint: 함수} 형태가 되므로 all.point로 값을 구할 수 있음</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"4-default\" style=\"position:relative;\"><a href=\"#4-default\" aria-label=\"4 default permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. default</h2>\n<ul>\n<li>\n<p>모듈에 <code class=\"language-text\">export</code> 가 하나만 있는 것을 명시적으로 나타낼 때 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> param <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// import.js</span>\n<span class=\"token keyword\">import</span> getPoint <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code100</span>\n\n<span class=\"token comment\">// 모듈 파일에 default가 아닌 것을 같이 작성할 수 있지만 일반적으로 default 하나만 작성함</span>\n<span class=\"token comment\">// 모듈 파일에 default를 다수 작성하면 에러 발생</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">default</code> 를 리스트 형태로 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> param <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> getPoint <span class=\"token keyword\">as</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// import.js</span>\n<span class=\"token keyword\">import</span> getPoint <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code100</span></code></pre></div>\n</li>\n<li>\n<p>함수 이름을 작성하지 않은 형태</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> param <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// import.js</span>\n<span class=\"token keyword\">import</span> getPoint <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code100</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">*</code> 로 <code class=\"language-text\">default</code> 를 <code class=\"language-text\">import</code></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// export.mjs</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> param <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// import.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> all <span class=\"token keyword\">from</span> <span class=\"token string\">'./export.mjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code100</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-export-import-%ED%98%95%ED%83%9C\">1. export, import 형태</a></li>\n<li><a href=\"#2-%EB%B3%80%EC%88%98-%ED%95%A8%EC%88%98-class\">2. 변수, 함수, Class</a></li>\n<li><a href=\"#3-as-\">3. as, *</a></li>\n<li><a href=\"#4-default\">4. default</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 14, 2021","title":"Module - export/import 형태, 변수/함수/Class, as, *, default","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-module-3/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-promise-1/","nextSlug":"/study-js-es6-module-3/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}