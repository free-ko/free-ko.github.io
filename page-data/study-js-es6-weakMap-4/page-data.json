{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-weakMap-4/","result":{"data":{"cur":{"id":"791070a9-a11e-5243-a63a-e3eaed8d578c","html":"<br>\n<h1 align=\"center\">\n  👋  Map과 WeakMap 차이\n</h1>\n<br>\n<h2 id=\"map과-weakmap-차이\" style=\"position:relative;\"><a href=\"#map%EA%B3%BC-weakmap-%EC%B0%A8%EC%9D%B4\" aria-label=\"map과 weakmap 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map과 WeakMap 차이</h2>\n<ul>\n<li>\n<p>참조하는 <code class=\"language-text\">object</code>를 삭제하면 <code class=\"language-text\">Map</code>은 그대로 갖고 있지만 <code class=\"language-text\">WeakMap</code>은 <code class=\"language-text\">GC</code>처리로 삭제됨</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> mapObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>key<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tmapObj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Map\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t- 즉시 실행 함수는 일회용으로 변수를 저장하지 않을 때 사용함\n\t- 함수가 끝나면 obj 변수를 GC가 메모리에서 지움\n\t- Map은 obj 변수가 지워지더라도 Map에 설정된 obj를 지우지 않고 유지 함\n\t- mapObj를 펼치면 entry가 있음\n*/</span>\n\n<span class=\"token keyword\">let</span> weakObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>key<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tweakObj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"WeakMap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t- 앞의 실행 환경과 같음\n\t- 다만, Map이 아닌 WeakMap에 저장함\n\t- WeakMap은 obj 변수가 삭제되면 WeakMap에 설정된 obj를 삭제함\n\t- weakObj를 펼치면 entry가 있음\n*/</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>weakObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mapObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n\t1. mapObj에는 entry가 있지만 weakObj는 없음\n\t2. GC가 obj를 지우면서 WeakMap의 obj도 지우기 때문\n*/</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#map%EA%B3%BC-weakmap-%EC%B0%A8%EC%9D%B4\">Map과 WeakMap 차이</a></li>\n</ul>\n</div>","excerpt":"Map과 WeakMap 차이 참조하는 를 삭제하면 은 그대로 갖고 있지만 은 처리로 삭제됨 Map과 WeakMap 차이","frontmatter":{"date":"November 09, 2021","title":"Map과 WeakMap 차이","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-weakMap-4/"}},"next":{"id":"6b99ade0-8cd2-528e-b56e-c0ec7f2a04bd","html":"<br>\n<h1 align=\"center\">\n  👋  가비지 컬렉션 처리\n</h1>\n<br>\n<h2 id=\"가비지-컬렉션\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%EC%85%98\" aria-label=\"가비지 컬렉션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가비지 컬렉션</h2>\n<ul>\n<li>참조하는 object가 바뀌면 참조했던 오브젝트가 가비지 컬렉션 처리 됨</li>\n<li>\n<p>가비지 컬렉션 처리</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\npoint<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">,</span> <span class=\"token string\">'변경 전'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// sports에 Function 오브젝트를 할당하고 이것을 WeakMap 인스턴스에 key로 설정</span>\n\n<span class=\"token function-variable function\">sports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\npoint<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 새로운 함수를 생성하여 할당함</span>\n<span class=\"token comment\">// 바로 위의 sports가 참조하는 메모리 주소가 바뀜</span>\n<span class=\"token comment\">// sprots가 참조하는 메모리 주소가 바뀌면 앞의 sports가 참조했던 오브젝트를 호출할 수 없게 됨</span>\n<span class=\"token comment\">// 이렇게 사용할 수 없게 된 {point: 1} 오브젝트는 GC대상이 됨</span>\n<span class=\"token comment\">// 엔진이 주기적으로 GC처리를 함</span>\n\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">,</span> <span class=\"token string\">'변경 후'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// sports를 key로 하여 WeakMap에 설정함</span>\n<span class=\"token comment\">// 앞에서 sports를 key로 하여 설정했으며 여기서도 sports를 key로 하여 설정하므로 값이 대체되어야 하지만</span>\n<span class=\"token comment\">// 두 개의 sports가 참조하는 주소가 다르므로 sports가 추가됨</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>WeakMap 인스턴스의 GC상태</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\npoint<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">,</span> <span class=\"token string\">'변경 전'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t1. 아래에서 sports 변수에 {point: 2}를 할당하므로\n\t\t- sports가 참조하는 오브젝트가 바뀜\n*/</span>\n\n<span class=\"token function-variable function\">sports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\npoint<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">,</span> <span class=\"token string\">'변경 후'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t1. obj의 [[Entries]]를 펼치면 0과 1이 있음\n\t\t- 변숫값은 바뀌어 하나이지만\n\t\t- WeakMap 인스턴스에는 두 개가 있음\n\n\t2. {point: 1}과 {point: 2}의 메모리 주소가 다르며\n\t\t- sports는 사람이 보는 것으로\n\t\t- WeakMap은 값인 메모리 주소가 다르므로 각각 저장 합니다.\n\n3. 그래서 sports로 저장하지 않고 \n\t\t- 인덱스를 부여하여 저장하는 것\n\t\t- 엔진은 인덱스가 key이며\n\t\t- sports는 프로퍼티 value에서 프로퍼티 키 임\n*/</span>\n\n<span class=\"token function\">setTimout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">debugger</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">debugger</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t1. {point: 1}의 sports를 사용할 수 없으므로\n\t\t- GC가 {point: 1}의 sports를 메모리에서 지움\n\t\t- 또한 obj의 \"변경 전\"도 삭제 함\n\n\t2. 인덱스 1번이 0번이 됨\n\n\t3. Map 오브젝트에서 entry를 삭제해도 인덱스를 정리 함\n*/</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%EC%85%98\">가비지 컬렉션</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 08, 2021","title":"가비지 컬렉션 처리","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-weakMap-3/"}},"prev":{"id":"b98e6379-01ff-5c6d-bdfa-6674a197dc8d","html":"<br>\n<h1 align=\"center\">\n  👋  Set 오브젝트 개요, new Set(), Set과 Map 비교\n</h1>\n<br>\n<h2 id=\"1set-오브젝트\" style=\"position:relative;\"><a href=\"#1set-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8\" aria-label=\"1set 오브젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Set 오브젝트</h2>\n<ul>\n<li>\n<p>Set 오브젝트는 <code class=\"language-text\">value</code>(값)의 컬렉션</p>\n<ul>\n<li><code class=\"language-text\">[value1, ... ,valueN]</code> 형태로 작성</li>\n<li>Set은 대괄호 <code class=\"language-text\">[ ]</code>가 하나</li>\n<li>작성한 순서로 전개됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ABC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">size: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">.</span>size<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> vlaue <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// size: 3</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// ABC</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"2-new-set\" style=\"position:relative;\"><a href=\"#2-new-set\" aria-label=\"2 new set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. new Set()</h2>\n<ul>\n<li>\n<p>Set 인스턴스 생성, 반환</p>\n<ul>\n<li>파라미터에 값을 작성</li>\n<li>프리미티브, 오브젝트 타입 사용 가능</li>\n<li><code class=\"language-text\">size</code> 프로퍼티</li>\n<li>Set 인스턴스의 엘리먼트 수를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">size: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">.</span>size<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// size : 4</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> value <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. 같은 값이 있으면, 첫 번째의 1을 유지하며 세 번째의 1을 설정하지 않음</span>\n<span class=\"token comment\">// 2. Same-Value-Zero 비교 알고리즘으로 비교</span>\n<span class=\"token comment\">// 3. obj.size 세 번째의 1이 설정되지 않으므로 값은 4</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// []</span>\n<span class=\"token comment\">// {}</span></code></pre></div>\n</li>\n<li>\n<p>Set 오브젝트 구조</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> set <span class=\"token operator\">=</span> Set<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n\t1. Set 오브젝트에 Symbol(Symbol.species)가 있음\n\t\t- 따라서, constructor를 오버라이드 할 수 있음\n\n\t2. prototype을 펼치면 Symbol.iterator가 있음\n*/</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n\t1. 오른쪽의 obj를 펼치면 [[Entries]]가 있음\n\n\t2. [[Entries]]를 펼치면 0: \"one\" 형태 임\n\n3. 인덱스를 부여하여 key로 사용하고\n\t- \"one\", \"two\"를 value로 설정함\n\n\t4. 인덱스를 부여하는 구조는 Map과 같음\n\n\t5. 인덱스를 부여하여 저장하므로 작성한 순서로 읽혀짐\n*/</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"3-set과-map-비교\" style=\"position:relative;\"><a href=\"#3-set%EA%B3%BC-map-%EB%B9%84%EA%B5%90\" aria-label=\"3 set과 map 비교 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Set과 Map 비교</h2>\n<ul>\n<li>\n<p>저장 형태</p>\n<ul>\n<li><code class=\"language-text\">Map</code> : key와 value 작성, Key를 key로 사용하여 <code class=\"language-text\">[key, value]</code>로 저장</li>\n<li><code class=\"language-text\">Set</code> : <code class=\"language-text\">value</code>만 작성, <code class=\"language-text\">value</code>를 key로 사용하여 <code class=\"language-text\">[value]</code>로 저장</li>\n</ul>\n</li>\n<li>\n<p>값을 구하는 형태</p>\n<ul>\n<li><code class=\"language-text\">Map</code> : <code class=\"language-text\">get(key)</code> 형태로 <code class=\"language-text\">value</code>를 구할 수 있음</li>\n<li><code class=\"language-text\">Set</code> : <code class=\"language-text\">get()</code> 메소드가 없음</li>\n<li>값 하나를 구할 수 없음, 반복으로 값을 구하거나 이터레이터 사용</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1set-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8\">1.Set 오브젝트</a></li>\n<li><a href=\"#2-new-set\">2. new Set()</a></li>\n<li><a href=\"#3-set%EA%B3%BC-map-%EB%B9%84%EA%B5%90\">3. Set과 Map 비교</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 10, 2021","title":"Set 오브젝트 개요, new Set(), Set과 Map 비교","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-setObject-1/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-weakMap-4/","nextSlug":"/study-js-es6-weakMap-3/","prevSlug":"/study-js-es6-setObject-1/"}},"staticQueryHashes":["1073350324","2938748437"]}