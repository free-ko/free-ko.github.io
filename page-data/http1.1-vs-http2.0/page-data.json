{"componentChunkName":"component---src-templates-blog-template-js","path":"/http1.1-vs-http2.0/","result":{"data":{"cur":{"id":"0a5f9d0b-9210-50e9-811e-76fdabef2479","html":"<h2 id=\"-http11\" style=\"position:relative;\"><a href=\"#-http11\" aria-label=\" http11 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ HTTP/1.1</h2>\n<ul>\n<li><strong>지속 연결(Persistent Connections)</strong>: 하나의 TCP 연결을 통해 여러 HTTP 요청과 응답을 처리할 수 있습니다.</li>\n<li><strong>청크 전송(Chunked Transfer)</strong>: 데이터를 청크 단위로 전송하여 동적 콘텐츠 전송을 용이하게 합니다.</li>\n<li><strong>캐시 제어(Cache Control)</strong>: 세밀한 캐싱 옵션을 제공하여 웹 성능을 개선합니다.</li>\n<li><strong>에러 처리 개선</strong>: 다양한 HTTP 상태 코드를 통해 더 명확한 에러 응답을 제공합니다.</li>\n</ul>\n<h3 id=\"http11의-지속-연결과-네트워크-효율성\" style=\"position:relative;\"><a href=\"#http11%EC%9D%98-%EC%A7%80%EC%86%8D-%EC%97%B0%EA%B2%B0%EA%B3%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%9A%A8%EC%9C%A8%EC%84%B1\" aria-label=\"http11의 지속 연결과 네트워크 효율성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP/1.1의 지속 연결과 네트워크 효율성</h3>\n<p>HTTP/1.1에서의 지속 연결 기능은 웹 성능과 효율성을 크게 향상시키는 역할을 합니다.</p>\n<ul>\n<li><strong>연결 오버헤드 감소</strong>: 각 요청마다 새로운 연결을 수립하는 대신, 하나의 연결을 재사용하여 시간과 자원을 절약합니다.</li>\n<li><strong>네트워크 자원의 효율적 사용</strong>: 하나의 연결을 통해 여러 요청과 응답을 처리함으로써 네트워크 자원을 효율적으로 활용합니다.</li>\n<li><strong>TCP 연결의 성능 향상</strong>: 지속적인 연결을 통해 TCP 연결이 시간이 지남에 따라 성능이 향상됩니다.</li>\n</ul>\n<br>\n<h2 id=\"-http20\" style=\"position:relative;\"><a href=\"#-http20\" aria-label=\" http20 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ HTTP/2.0</h2>\n<ul>\n<li><strong>멀티플렉싱(Multiplexing)</strong>: 하나의 연결에서 여러 요청과 응답을 동시에 처리할 수 있습니다.</li>\n<li><strong>헤더 압축(Header Compression)</strong>: HPACK 압축을 사용하여 헤더 데이터를 효율적으로 전송합니다.</li>\n<li><strong>서버 푸시(Server Push)</strong>: 서버가 클라이언트의 요청을 기다리지 않고 능동적으로 리소스를 푸시할 수 있습니다.</li>\n<li><strong>HTTPS와의 통합</strong>: 대부분 HTTPS와 함께 사용되어 보안을 강화합니다.</li>\n</ul>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-http11\">✅ HTTP/1.1</a></p>\n<ul>\n<li><a href=\"#http11%EC%9D%98-%EC%A7%80%EC%86%8D-%EC%97%B0%EA%B2%B0%EA%B3%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%9A%A8%EC%9C%A8%EC%84%B1\">HTTP/1.1의 지속 연결과 네트워크 효율성</a></li>\n</ul>\n</li>\n<li><a href=\"#-http20\">✅ HTTP/2.0</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","excerpt":"✅ HTTP/1.1 지속 연결(Persistent Connections): 하나의 TCP 연결을 통해 여러 HTTP 요청과 응답을 처리할 수 있습니다. 청크 전송(Chunked Transfer): 데이터를 청크 단위로 전송하여 동적 콘텐츠 전송을 용이하게 합니다. 캐시 제어(Cache Control): 세밀한 캐싱 옵션을 제공하여 웹 성능을 개선합니다. 에러 처리 개선: 다양한 HTTP 상태 코드를 통해 더 명확한 에러 응답을 제공합니다. HTTP/1.1의 지속 연결과 네트워크 효율성 HTTP/1.1에서의 지속 연결 기능은 웹 성능과 효율성을 크게 향상시키는 역할을 합니다. 연결 오버헤드 감소: 각 요청마다 새로운 연결을 수립하는 대신, 하나의 연결을 재사용하여 시간과 자원을 절약합니다. 네트워크 자원의 효율적 사용: 하나의 연결을 통해 여러 요청과 응답을 처리함으로써 네트워크 자원을 효율적으로 활용합니다. TCP 연결의 성능 향상: 지속적인 연결을 통해 TCP 연결이 시간이 지남…","frontmatter":{"date":"January 24, 2024","title":"HTTP/1.1과 HTTP/2.0","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/http1.1-vs-http2.0/"}},"next":{"id":"eec4a994-ae90-500f-8518-8ca07e5e9e2d","html":"<h2 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<h3 id=\"1-업무-회고\" style=\"position:relative;\"><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\" aria-label=\"1 업무 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 업무 회고</h3>\n<ul>\n<li>new FileReader를 통해서 업로드한 이미지를 Preview로 사용자에게 보여줄 수 있음.</li>\n<li>의사소통을 잘 하기 위해서는 현 상황에 대해 정확하게 이해를 바탕으로 의사소통을 해야 한다. 그래야 다른 팀원분들에게 혼란을 주지 않을 수 있다. 또한 빠르게 일을 마무리할려고 이해가 되지 않는데, 무조건적으로 책임을 짓는 행위도 조심해야 한다.</li>\n<li>\n<p>네트워크 SSH, HTTP, HTTPS 정리</p>\n<ul>\n<li>\n<p>SSH (Secure Shell)</p>\n<ul>\n<li>목적: 원격으로 서버나 다른 컴퓨터에 안전하게 접속하고, 명령을 실행하기 위한 프로토콜</li>\n<li>특징: 암호화를 사용하여 네트워크 상의 데이터를 보호. 이를 통해 사용자 인증 정보 및 전송되는 데이터가 안전하게 유지됨</li>\n<li>사용 예: 서버 관리, 파일 전송, 네트워크 서비스 등에 사용</li>\n</ul>\n</li>\n<li>\n<p>HTTP (Hypertext Transfer Protocol)</p>\n<ul>\n<li>목적: 웹 서버와 클라이언트 간에 문서를 교환하기 위한 프로토콜</li>\n<li>특징: 텍스트, 이미지, 비디오 등 다양한 형태의 데이터를 전송할 수 있으며, 주로 웹 페이지의 내용을 브라우저로 전송하는 데 사용.</li>\n<li>주의점: 암호화되지 않아 데이터가 노출될 위험 존재</li>\n</ul>\n</li>\n<li>\n<p>HTTPS (HTTP Secure)</p>\n<ul>\n<li>목적: HTTP의 보안 버전으로, 웹 서버와 클라이언트 간의 안전한 통신을 보장하기 위한 프로토콜</li>\n<li>특징: SSL/TLS 암호화를 통해 데이터를 보호. 이로 인해 개인 정보, 금융 정보 등 중요한 데이터가 안전하게 전송됨</li>\n<li>사용 예: 온라인 쇼핑, 인터넷 뱅킹, 개인 정보를 다루는 웹 사이트 등에서 주로 사용됨</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>media-query와 userAgent의 사용 목적 차이(PC일 때 무조건 Dialog를 띄우는 로직을 media-query로 작성하고 있어, 다른 방법을 모색하는 중에 userAgnet를 발견)</p>\n<ul>\n<li>media-query: 디스플레이어 환경에 초점을 맞춘 스타일링에 사용됨</li>\n<li>userAgent: 사용자의 브라우저나 운영체제 등의 환경에 따른 기능적인 대응을 위해 사용됨</li>\n</ul>\n</li>\n<li>\n<p>Content-Type의 종류</p>\n<ul>\n<li>\n<p>application/x-www-form-urlencoded</p>\n<ul>\n<li>이 콘텐츠 유형은 HTML 폼이 서버로 데이터를 전송할 때 주로 사용.</li>\n<li>데이터는 key=value 쌍으로 인코딩되며, 여러 쌍은 <code class=\"language-text\">&amp;</code> 문자로 구분됨 ex) name=John&#x26;age=30</li>\n<li>이 인코딩 방식은 URL에 쿼리 문자열을 넣는 방식과 유사</li>\n<li>간단한 평문 데이터를 전송할 때 주로 사용되지만, JSON처럼 복잡한 데이터 구조를 표현하는 데는 제한적</li>\n</ul>\n</li>\n<li>\n<p>application/json</p>\n<ul>\n<li>이 콘텐츠 유형은 데이터를 JSON 형식으로 전송할 때 사용됨</li>\n<li>JSON 형식은 자바스크립트 객체를 표현하는 표준 텍스트 포맷으로, { “key”: “value” }와 같이 표현됨</li>\n<li>JSON은 중첩된 객체와 배열을 포함할 수 있어, 복잡한 데이터 구조를 효율적으로 표현하고 전송할 수 있음</li>\n<li>웹 API와의 통신에서 많이 사용되며, 현대 웹 개발에서 표준적인 데이터 교환 형식으로 널리 채택되고 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Grant-Type(OAuth 2.0 인증 프로세스에서 사용되는 개념으로, 어떤 방식으로 토큰을 발급받을지를 정의합)의 종류</p>\n<ul>\n<li>\n<p>Authorization Code (인가 코드)</p>\n<ul>\n<li>주로 서버 측 애플리케이션에서 사용됨</li>\n<li>사용자가 먼저 서비스 제공자에게 접근 권한을 부여하고, 이후에 이 권한을 증명하는 인가 코드를 받음. 이 코드를 사용해 애플리케이션이 액세스 토큰을 요청함</li>\n<li>보안성이 높은 방식. 사용자의 인증 정보는 클라이언트와 서비스 제공자 간에만 공유되며, 인가 코드 자체는 사용 후 무효화됨</li>\n</ul>\n</li>\n<li>\n<p>Refresh Token (갱신 토큰)</p>\n<ul>\n<li>이미 인증을 받아 액세스 토큰을 발급받은 상태에서 추가적인 인증 없이 토큰을 갱신할 때 사용됨</li>\n<li>초기 인증 시 발급된 액세스 토큰의 유효 시간이 만료되었을 때, 이 갱신 토큰을 사용해 새로운 액세스 토큰을 요청함</li>\n<li>사용자가 자주 로그인하는 번거로움 없이, 서비스에 지속적으로 접근할 수 있게 해줌</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br>\n<h3 id=\"2-일상-회고\" style=\"position:relative;\"><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\" aria-label=\"2 일상 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 일상 회고</h3>\n<p>일을하면서 나도모르게 마음이 급해져서 스스로 이슈에 대해 정확하게 이해하지 않고 넘어갈려고 말이 먼저 나올 때가 자주있었다. 그런데 이 부분은 나뿐만아니라, 동료분들과 의사소통을 할 때 매우 안 좋은 영향을 끼친다는 사실을 다시 한 번 깨닫게 되었다. 어쩌면 일 뿐만이 아니라 내 삶을 돌아보았을 때, 정확하게 이해 하고 행동하지 않아서 일을 하면서 나온게 아닐까 되돌아 보게 되었다. 이해를 바탕으로 먼저는 내 삶을 바라보고 그 다음 누군가과 협력을 할 때, 정확학 의사소통을 위해서 이해를 바탕으로 하는 연습과 의식적으로 인지하면서 행동해야 겠다.</p>\n<p>그리고 실수를 할 때, 스스로 회고하는 태도는 좋지만 나도 모르게 스스로 자괴감에 빠져 멘탈이 나가는 경우가 종종 있는 것 같다. 그럴 때마다 글로써 상황과 해결방안을 정리해보고 이것도 안되면 가벼운 산책을 하거나 정말로 힘들면 친한 주변 사람이나 동료분들에게 객관적인 피드백을 통해 나아졌던 것 같다.</p>\n<p>최근 동료로 부터 받은 피드백 중 스스로 일을 못한다고 생각이 들 때면 1년, 3년 뒤에 그 때가서 다시 생각하고 지금은 배우는 과정이니깐 당연한 것이라고 말씀해주셨다. 마지막으로 나와 타인을 비교하지 말고 스스로 자신만의 길을 한 걸음씩 가는 것에 집중하라 피드백을 주셨다.</p>\n<p>위와 같은 피드백을 듣고 곱씹을 때마다 어려우면서도 쉬운 것 같다는 생각을 한다.</p>\n<p>마지막으로 하루 중에 가장 많은 시간을 투자하는 ‘일’을 내 삶과 연결 짓고 어떻게 하면 내 삶에 조금이나마 도움을 줄 수 있는 시간으로 바꿀 수 있는 지 고민을 해보고 있다. 이것도 쉽지 않은 것 같다. 막상 이런 생각을 할 때마다 ‘내가 정말 원하는게 무엇일까?‘라는 질문에 대답도 못해서 고민의 해결에 도달하지 않고 뫼비우스띠 처럼 계속 제 자리에 멈춰 고민만 하는 것 같다. 그래도 안하는 것 보다는 하는게 낫다는 생각을 해서 여전히 지금도 주어진 하루를 어떻게 하면 내 삶에 가치있는 시간으로 바꿀 수 있는지를 계속 고민을 하는 것 같다.</p>\n<p>갈 길은 멀지만 그래도 길을 걷고 있는 사실에 감사함을 느낀다.</p>\n<p>이번 한 주도 고생했다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/FileReader\">File Reader</a></li>\n<li><a href=\"https://mantine.dev/hooks/use-os/\">Mantine이 제공하는 OS를 판별하는 Hooks</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n<ul>\n<li><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\">1. 업무 회고</a></li>\n<li><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\">2. 일상 회고</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 20, 2024","title":"2024년 1월 3주차 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-240120/"}},"prev":{"id":"db946d8f-1bbb-5c18-b135-61b5439a7c6d","html":"<h2 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<h3 id=\"1-업무-회고\" style=\"position:relative;\"><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\" aria-label=\"1 업무 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 업무 회고</h3>\n<ol>\n<li>\n<p>Nullish Coalescing Operator (<code class=\"language-text\">??</code>)와 Logical OR Operator (<code class=\"language-text\">||</code>)</p>\n<ul>\n<li>?? 연산자는 왼쪽 피연산자가 null 또는 undefined인 경우에만 오른쪽 피연산자를 사용</li>\n<li>\n<p>|| 연산자는 왼쪽 피연산자가 false, 0, ”, null, undefined, NaN과 같은 falsy 값일 때 오른쪽 피연산자를 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> defaultValue <span class=\"token operator\">=</span> <span class=\"token string\">'defaultValue'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ?? 연산자</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">B</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> result1 <span class=\"token operator\">=</span> <span class=\"token constant\">A</span> <span class=\"token operator\">??</span> defaultValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'defaultValue'</span>\n<span class=\"token keyword\">const</span> result2 <span class=\"token operator\">=</span> <span class=\"token constant\">B</span> <span class=\"token operator\">??</span> defaultValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'defaultValue'</span>\n\n<span class=\"token comment\">// || 연산자</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">C</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">D</span> <span class=\"token operator\">=</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> result3 <span class=\"token operator\">=</span> <span class=\"token constant\">C</span> <span class=\"token operator\">||</span> defaultValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'defaultValue'</span>\n<span class=\"token keyword\">const</span> result4 <span class=\"token operator\">=</span> <span class=\"token constant\">D</span> <span class=\"token operator\">||</span> defaultValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'defaultValue'</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>API를 통해서 데이터를 가져올 때, <code class=\"language-text\">timeout</code>에 대한 처리를 사용자 관점에서 고려하자. 예를 들어서 20000 값을 주었을 때, 사용자 입장에서는 20초동안 API의 호출에 대한 응답값이 없을 경우 사용자는 데이터가 오지 안왔기 때문에 로딩 애니메이션을 보고 있어야 한다. 단순히 FE에서 API의 성능이 안 좋아, timeout 값을 20000으로 수정해서 처리하는 것은 UX관점에서는 완전한 해결을 한 것이 아니다. 그래서 항상 유저 관점에서 개발을 할 수 있도록 노력하자.</li>\n<li>PM, PD로 부터 전달받은 유저플로우 혹은 디자인 시안을 보고 개발 공수가 그려질 수 있도록 경험과 실력을 겸비해야 한다. 그래야 개발 단에서 일정관리를 명확하게 가시화를 하여 비즈니스 영역에서도 사용자에게 정확한 일정을 토대로 서비스를 선사할 수 있기 때문이다.</li>\n<li>항상 ‘왜?‘를 가슴에 품고 내가 이해하지 못한 부분에 대해서는 집요하게 이해 할 수 있도록 노력해야 한다. 그것이 나뿐만 아니라, 팀 동료에게 정확한 의사소통을 하는데 도움을 줄 수 있기 때문이다.</li>\n<li>\n<p>시뮬레이터에서 동작되는 웹뷰를 디버깅하는 방법</p>\n<ul>\n<li><code class=\"language-text\">webviewDebuggingEnabled={true}</code>는 React Native에서 사용되는 이 속성은 WebView 컴포넌트 내에서의 웹 콘텐츠 디버깅을 활성화하는 데 사용.</li>\n<li><code class=\"language-text\">webviewDebuggingEnabled={true}</code>를 설정하면 개발자는 크롬 개발자 도구(Chrome DevTools)를 사용하여 WebView 내부의 HTML, CSS, JavaScript 등을 검사하고 디버깅할 수 있음. 이를 통해 웹 콘텐츠의 레이아웃 문제를 해결하거나 JavaScript 코드의 오류를 찾는 등의 작업을 용이하게 할 수 있음</li>\n</ul>\n</li>\n<li>AWS의 서버를 통해 유저 정보를 조회하는 쿼리를 실행 했을 때, 로컬에서 동작이 되었어도 문제가 발생한다면 이는 AWS의 컴퓨터 성능이 낮아서 발생한 이유일 수 있다.</li>\n<li>Redux Persist는 Redux의 확장 기능으로써 Redux 스토어의 상태를 브라우저의 로컬 스토리지나, 세션 스토리지에 저장할 수 있도록 해주는 도구. 이를 통해 새로고침을 했을 때, Redux 스토어의 상태를 유지할 수 있음</li>\n<li>TailwindCSS에서 이미지 비율을 1:1로 적용할려면 <code class=\"language-text\">aspect-square</code>를 적용하면 됨</li>\n<li>\n<p>ErrorBoundary(<a href=\"https://github.com/bvaughn/react-error-boundary#readme\">React-Error-Boundary 라이브러리</a>)</p>\n<ul>\n<li>\n<p>Error Fallback 컴포넌트에서 만약 데이터 가져오는 훅이 있을 경우, 데이터를 가져오는 과정에서 에러가 나면 ErrorBoundary는 자식 컴포넌트의 에러만 감지할 수 있기 때문에 ErrorFallback 내부 컴포넌트의 에러를 잡지 못해서 해당 컴포넌트가 UI를 렌더링을 하는 경우라면 UI를 렌더링 하지 못할 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">AllCollectionsWithErrorBoundary</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> reset <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useQueryErrorResetBoundary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ErrorBoundary</span></span> <span class=\"token attr-name\">FallbackComponent</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>AllCollections<span class=\"token punctuation\">.</span>ErrorFallback<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onReset</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>reset<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AllCollections.Skeleton</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AllCollections</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ErrorBoundary</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n<h3 id=\"2-일상-회고\" style=\"position:relative;\"><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\" aria-label=\"2 일상 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 일상 회고</h3>\n<p>일을하면서 불필요한 말을 많이 했던 것 같습니다. 다양한 상황 속에서 대응하기 보다는 반응을 해서 그런 것 같습니다. 굳이 하지 말아도 되는 말들을 해서, 많이 후회스러운 날들이 많았습니다.</p>\n<p>조금씩 개선하기 위해서 말을 하기 전에 3초 생각하고 말을 하는 연습을 의식적으로 해볼려고 합니다.</p>\n<p>2024년도 벌써 1개월이 다 가는 이 때, 그냥 주어진 시간 속에서 살아가는 것이 아닌, 0.001%라도 의식적으로 어제보다 나은 날을 만들기 위해 노력하는 자신이 되고 싶다는 생각을 해보며 이번 한 주 회고를 마무리해봅니다.</p>\n<p>이번 한 주도 수고했습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n<ul>\n<li><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\">1. 업무 회고</a></li>\n<li><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\">2. 일상 회고</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"January 27, 2024","title":"2024년 1월 4주차 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-240127/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/http1.1-vs-http2.0/","nextSlug":"/write-log-240120/","prevSlug":"/write-log-240127/"}},"staticQueryHashes":["1073350324","2938748437"]}