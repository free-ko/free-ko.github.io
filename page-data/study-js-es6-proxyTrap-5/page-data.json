{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-proxyTrap-5/","result":{"data":{"cur":{"id":"d2dbe2b8-70bb-590e-b566-a24fb01358b8","html":"<br>\n<h1 align=\"center\">\n  👋 defineProperty(), preventExtensions() , isExtensible() 트랩\n</h1>\n<br>\n<h2 id=\"1-defineproperty\" style=\"position:relative;\"><a href=\"#1-defineproperty\" aria-label=\"1 defineproperty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. defineProperty()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Object.defineProperty()</code> 의 트랩임</p>\n<ul>\n<li>\n<p><code class=\"language-text\">target</code> 에 프로퍼티를 추가하거나 속성값을 변경함</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> desc</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>desc<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      desc<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> desc<span class=\"token punctuation\">.</span>value <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> desc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">,</span> <span class=\"token string\">'point'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  writable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1. Object.defineProperty(obj, \"point\", {...}, defineProperty() 트랩이 호출됨</span>\n<span class=\"token comment\">// 2. 트랩: defineProperty(target, key, desc){...} desc에 {...}에 작성한 디스크립터가 설정됨</span>\n<span class=\"token comment\">// 3. 트랩: if(desc.value > 0){...}, value 속성값이 100이며, 0보다 크므로 100에 -1을 곱해 -100으로 바꿈</span>\n<span class=\"token comment\">// 4. 트랩에서 속성 값을 바꿀 수 있음</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-defineproperty-트랩-호출\" style=\"position:relative;\"><a href=\"#2-defineproperty-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\" aria-label=\"2 defineproperty 트랩 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. defineProperty() 트랩 호출</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">defineProperty()</code> 트랩이 호출되는 형태</p>\n<ul>\n<li><code class=\"language-text\">Object.defineProperty()</code></li>\n<li><code class=\"language-text\">Reflect.defineProperty()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"3-defineproperty-트랩-준수사항\" style=\"position:relative;\"><a href=\"#3-defineproperty-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\" aria-label=\"3 defineproperty 트랩 준수사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. defineProperty() 트랩 준수사항</h2>\n<br>\n<ul>\n<li><code class=\"language-text\">strict mode</code> 일 때 트랩에서 <code class=\"language-text\">false</code> 를 반환하여 <code class=\"language-text\">TypeError</code></li>\n<li>\n<p><code class=\"language-text\">target</code> 오브젝트가 확장 불가이면 프로퍼티를 추가 할 수 없음</p>\n<ul>\n<li><code class=\"language-text\">Object.preventExtensions(target);</code></li>\n</ul>\n</li>\n<li><code class=\"language-text\">target</code> 오브젝트의 프로퍼티가 <code class=\"language-text\">[[Writable]]: false</code> 또는 <code class=\"language-text\">[[Configurable]]: false</code> 이면 프로퍼티 값을 변경할 수 없음</li>\n</ul>\n<br>\n<h2 id=\"4-preventextensions\" style=\"position:relative;\"><a href=\"#4-preventextensions\" aria-label=\"4 preventextensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. preventExtensions()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Object.preventExtensions()</code> 트랩임</p>\n<ul>\n<li><code class=\"language-text\">target</code> 오브젝트에 오브젝트의 확장 금지를 설정함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">preventExtensions</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">preventExtensions</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">preventExtensions</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isExtensible</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 1. const obj = Object.preventExtensions(proxy); preventExtensions() 트랩이 호출됨</span>\n<span class=\"token comment\">// 2. 트랩: if(target.point){...} point에 값이 있을 때만 확장 금지를 설정하기 위해 비교한 것</span>\n<span class=\"token comment\">// 3. 트랩에서 true를 반환하면 true를 반환하지 않고 Proxy 인스턴스를 반환함</span>\n<span class=\"token comment\">// 4. console.log(obj.point); Proxy 인스턴스의 point 프로퍼티 값을 출력함</span>\n<span class=\"token comment\">// 5. console.log(Object.isExtensible(target)) 확장 불가 상태이므로 false를 반환함</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"5-preventextensions-트랩-호출\" style=\"position:relative;\"><a href=\"#5-preventextensions-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\" aria-label=\"5 preventextensions 트랩 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. preventExtensions() 트랩 호출</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">preventExtensions()</code> 트랩이 호출되는 형태</p>\n<ul>\n<li><code class=\"language-text\">Object.preventExtensions()</code></li>\n<li><code class=\"language-text\">Reflect.preventExtensions()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"6-preventextensions-트랩-준수-사항\" style=\"position:relative;\"><a href=\"#6-preventextensions-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98-%EC%82%AC%ED%95%AD\" aria-label=\"6 preventextensions 트랩 준수 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. preventExtensions() 트랩 준수 사항</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">target</code> 오브젝트가 확장 불가 일 때</p>\n<ul>\n<li>즉, <code class=\"language-text\">Object.isExtensible(target)</code> 결과가 <code class=\"language-text\">false</code>일 때</li>\n<li><code class=\"language-text\">false</code> 를 반환하면 <code class=\"language-text\">TypeError</code>, <code class=\"language-text\">true</code> 만 반환할 수 있음</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"7-isextensible\" style=\"position:relative;\"><a href=\"#7-isextensible\" aria-label=\"7 isextensible permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. isExtensible()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Object.isExtensible()</code> 트랩임</p>\n<ul>\n<li><code class=\"language-text\">targe</code>의 확장 가능 여부를 반환 함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">isExtensible</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">isExtensible</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isExtensible</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">seal</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">isExtensible</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 1. console.log(Object.isExtensible(obj)); isExtensible() 트랩이 호출됨</span>\n<span class=\"token comment\">// 2. target 오브젝트가 확장 가능 상태이므로 true를 반환함</span>\n<span class=\"token comment\">// 3. Object.seal(target); target 오브젝트를 확장 불가 상태로 설정 함</span>\n<span class=\"token comment\">// 4. console.log(Object.isExtensible(obj)) 확장 불가 상태이므로 false를 반환함</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">false</code> 를 반환하는 오브젝트 상태</p>\n<ul>\n<li><code class=\"language-text\">Object.seal()</code></li>\n<li><code class=\"language-text\">Object.freeze()</code></li>\n<li><code class=\"language-text\">Object.preventExtensions()</code></li>\n<li><code class=\"language-text\">Reflect.preventExtensions()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"8-isextensible-트랩-호출\" style=\"position:relative;\"><a href=\"#8-isextensible-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\" aria-label=\"8 isextensible 트랩 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. isExtensible() 트랩 호출</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">isExtensible()</code> 트랩이 호출되는 형태</p>\n<ul>\n<li><code class=\"language-text\">Object.isExtensible()</code></li>\n<li><code class=\"language-text\">Relfect.isExtensible()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"9isextensible-트랩-준수-사항\" style=\"position:relative;\"><a href=\"#9isextensible-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98-%EC%82%AC%ED%95%AD\" aria-label=\"9isextensible 트랩 준수 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9.isExtensible() 트랩 준수 사항</h2>\n<ul>\n<li><code class=\"language-text\">Object.isExtensible(target)</code> 결과와 같은 값을 반환해야 함</li>\n<li>즉, 결과를 바꿀 수 없음</li>\n<li>같지 않으면 <code class=\"language-text\">TypeError</code>가 발생함</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-defineproperty\">1. defineProperty()</a></li>\n<li><a href=\"#2-defineproperty-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\">2. defineProperty() 트랩 호출</a></li>\n<li><a href=\"#3-defineproperty-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\">3. defineProperty() 트랩 준수사항</a></li>\n<li><a href=\"#4-preventextensions\">4. preventExtensions()</a></li>\n<li><a href=\"#5-preventextensions-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\">5. preventExtensions() 트랩 호출</a></li>\n<li><a href=\"#6-preventextensions-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98-%EC%82%AC%ED%95%AD\">6. preventExtensions() 트랩 준수 사항</a></li>\n<li><a href=\"#7-isextensible\">7. isExtensible()</a></li>\n<li><a href=\"#8-isextensible-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\">8. isExtensible() 트랩 호출</a></li>\n<li><a href=\"#9isextensible-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98-%EC%82%AC%ED%95%AD\">9.isExtensible() 트랩 준수 사항</a></li>\n</ul>\n</div>","excerpt":"1. defineProperty()  의 트랩임  에 프로퍼티를 추가하거나 속성값을 변경함 2. defineProperty() 트랩 호출  트랩이 호출되는 형태   3. defineProperty() 트랩 준수사항  일 때 트랩에서  를 반환하여   오브젝트가 확장 불가이면 프로퍼티를 추가 할 수 없음   오브젝트의 프로퍼티가  또는  이면 프로퍼티 값을 변경할 수 없음 4. preventExtensions()  트랩임  오브젝트에 오브젝트의 확장 금지를 설정함 5. preventExtensions() 트랩 호출  트랩이 호출되는 형태   6. preventExtensions() 트랩 준수 사항  오브젝트가 확장 불가 일 때 즉,  결과가 일 때  를 반환하면 ,  만 반환할 수 있음 7. isExtensible()  트랩임 의 확장 가능 여부를 반환 함  를 반환하는 오브젝트 상태     8. isExtensible() 트랩 호출  트랩이 호출되는 형태   9.isExtensib…","frontmatter":{"date":"December 02, 2021","title":"defineProperty(), preventExtensions() , isExtensible() 트랩","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-proxyTrap-5/"}},"next":{"id":"8cf81bc1-413f-54fa-ad43-72a1ad3e64f7","html":"<br>\n<h1 align=\"center\">\n  👋 has() 트랩, deleteProperty() 트랩\n</h1>\n<br>\n<h2 id=\"1-has\" style=\"position:relative;\"><a href=\"#1-has\" aria-label=\"1 has permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. has()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">in</code> 연산자의 트랩임</p>\n<ul>\n<li><code class=\"language-text\">target</code> 에 <code class=\"language-text\">key</code> 의 존재 여부를 반환함</li>\n<li>프로퍼티 값을 <code class=\"language-text\">true/false</code>로 변환하여 반환함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'point'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'booK'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 1. console.log(\"point\" in obj); has() 트랩이 호출됨</span>\n<span class=\"token comment\">// 2. has(target, key){...} target이 target에, \"point\"가 key에 설정됨</span>\n<span class=\"token comment\">// 3. return target[key]; target에 point가 있으며 값은 100임</span>\n<span class=\"token comment\">// 4. 이때, 100을 그대로 return하지 않고 true/false로 변환하여 return함</span>\n<span class=\"token comment\">// 5. 100은 true로 변환하므로 true를 반환함 0을 true/false로 변환하여 false임</span>\n<span class=\"token comment\">// 6. console.log(\"booK\" in obj); obj에 book이 없지만, has() 트랩을 호출함</span>\n<span class=\"token comment\">// 7. return target[key]; undefined를 반환하게 되지만 undefined를 false로 변환하여 반환 함</span></code></pre></div>\n<ul>\n<li>두 번째 파라미터에 <code class=\"language-text\">Symbol</code> 작성 가능</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-has-트랩-호출\" style=\"position:relative;\"><a href=\"#2-has-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\" aria-label=\"2 has 트랩 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. has() 트랩 호출</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">has()</code> 트랩이 호출되는 형태</p>\n<ul>\n<li><code class=\"language-text\">key in proxy</code></li>\n<li><code class=\"language-text\">ke in Object.create(proxy, {프로퍼티})</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> bonus<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  point<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> value<span class=\"token operator\">:</span> <span class=\"token number\">500</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'point'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bonus'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// 1. console.log(\"point\" in obj); obj 인스턴스 프로퍼티로 point가 있으므로 has() 트랩을 호출하지 않음</span>\n<span class=\"token comment\">// 2. point 값 500을 반환하지 않고 true/false로 변환하여 반환하므로 ture가 반환됨</span>\n<span class=\"token comment\">// 3. console.log(\"bonus\" in obj); obj 인스턴스 프로퍼티로 bonus가 없으므로 has() 트랩을 호출 함</span>\n<span class=\"token comment\">// 4. has() 트랩에서 target[key]의 값은 100이며 100을 true/false로 변환하면 true임</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">Reflect.has()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"3-has-트랩-준수사항\" style=\"position:relative;\"><a href=\"#3-has-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\" aria-label=\"3 has 트랩 준수사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. has() 트랩 준수사항</h2>\n<ul>\n<li>\n<p>오브젝트에 프로퍼티가 있으면서</p>\n<ul>\n<li>오브젝트가 프로퍼티 추가 금지이거나 <code class=\"language-text\">[[Configurable]]: flase</code> 이면</li>\n<li><code class=\"language-text\">false</code> 를 지정하여 반환할 수 없지만 <code class=\"language-text\">ture</code> 는 지정하여 반환 할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>강제로 <code class=\"language-text\">ture/false</code> 를 반환하지 않고 <code class=\"language-text\">has()</code> 트랩에서 구한 값을 <code class=\"language-text\">ture/false</code> 로 변환하여 반환 함</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">preventExtensions</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n<span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  consle<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'has 트랩 실행'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// return false;</span>\n  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'point'</span> <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1. Object.preventExtensions(target); target 오브젝트를 프로퍼티 추가 금지 상태로 설정함</span>\n<span class=\"token comment\">// 2. console.log(\"point\" in obj); 추가 금지 상태라도 has() 트랩이 호출 됨</span>\n<span class=\"token comment\">// 3. // reuturn false; 추가 금지 상태에서 false를 지정하여 반환하면 에러가 발생함 그래서 주석으로 처리 했음</span>\n<span class=\"token comment\">// 4. return target[key]; has() 트랩에서 구한 값을 true/false로 변환하여 반환하면 에러가 나지 않음</span>\n\n<span class=\"token comment\">// 실행결과</span>\n<span class=\"token comment\">// has 트랩 실행</span>\n<span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"4-deleteproperty\" style=\"position:relative;\"><a href=\"#4-deleteproperty\" aria-label=\"4 deleteproperty permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. deleteProperty()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">delete</code> 연산자의 트랩임</p>\n<ul>\n<li>오브젝트의 프로퍼티를 삭제함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">delete</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> ture<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">delete</span> target<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// 1. console.log(delete obj.point) deleteProperty() 트랩이 호출 됨</span>\n<span class=\"token comment\">// 2. if(key in target) {...} target 오브젝트에 point 프로퍼티가 있으므로 point 프로퍼티를 삭제하고 ture를 반환함</span>\n<span class=\"token comment\">// 3. console.log(target.point) 트랩에서 point 프로퍼티를 삭제했으므로 undefined가 출력됨</span>\n<span class=\"token comment\">// 4. console.log(delete obj.point); deleteProperty() 트랩이 호출됨 트랩에서 target에 point 프로퍼티가 없으므로 false를 반환 함</span>\n<span class=\"token comment\">// 5. console.log(delete target.point); deleteProperty() 트랩이 호출되지 않음 [[Delete]]가 호출됨 일반적으로 delete 처리임</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">delete</code> 연산자는 프로퍼티가 없어도 <code class=\"language-text\">true</code>를 반환하므로 코드처럼 조건을 체크하여 <code class=\"language-text\">true/false</code>를 반환하면 완전하게 처리할 수 있음</li>\n</ul>\n<br>\n<h2 id=\"4-deleteproperty-트랩-호출\" style=\"position:relative;\"><a href=\"#4-deleteproperty-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\" aria-label=\"4 deleteproperty 트랩 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. deleteProperty() 트랩 호출</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">deleteProprerty()</code> 트랩이 호출되는 형태</p>\n<ul>\n<li><code class=\"language-text\">delete[key]</code></li>\n<li><code class=\"language-text\">Reflect.deleteProperty()</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"5-deleteproperty-트랩-준수사항\" style=\"position:relative;\"><a href=\"#5-deleteproperty-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\" aria-label=\"5 deleteproperty 트랩 준수사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. deleteProperty() 트랩 준수사항</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">target</code> 오브젝트의 프로퍼티가</p>\n<ul>\n<li><code class=\"language-text\">[[Configurable]]: false</code> 이면 프로퍼티를 삭제할 수 없으며 에러가 발생함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObje<span class=\"token punctuation\">.</span><span class=\"token function\">ctdefinedProperty</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token string\">\"point\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> configurable<span class=\"token operator\">:</span> flase\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">deleteProperty</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> descriptor <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>descriptor<span class=\"token punctuation\">.</span>configurable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">delete</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>delte obj<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 1. console.log(delete obj.point) deleteProeprty() 트랩이 호출됨</span>\n<span class=\"token comment\">// 2. Object.getWonPropertyDescriptor(target, key); point 프로퍼티의 디스크립터를 구함</span>\n<span class=\"token comment\">// 3. if(descriptor.configurable){...} configurable이 ture이면 삭제할 수 있으며 point 프로퍼티를 삭제하고 true를 반환함</span>\n<span class=\"token comment\">// 4. 한편, {configurable: false}이므로 false를 반환함</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-has\">1. has()</a></li>\n<li><a href=\"#2-has-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\">2. has() 트랩 호출</a></li>\n<li><a href=\"#3-has-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\">3. has() 트랩 준수사항</a></li>\n<li><a href=\"#4-deleteproperty\">4. deleteProperty()</a></li>\n<li><a href=\"#4-deleteproperty-%ED%8A%B8%EB%9E%A9-%ED%98%B8%EC%B6%9C\">4. deleteProperty() 트랩 호출</a></li>\n<li><a href=\"#5-deleteproperty-%ED%8A%B8%EB%9E%A9-%EC%A4%80%EC%88%98%EC%82%AC%ED%95%AD\">5. deleteProperty() 트랩 준수사항</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 01, 2021","title":"has() 트랩, deleteProperty() 트랩","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-proxyTrap-4/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-proxyTrap-5/","nextSlug":"/study-js-es6-proxyTrap-4/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}