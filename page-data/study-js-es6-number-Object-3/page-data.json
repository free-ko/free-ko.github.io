{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-number-Object-3/","result":{"data":{"cur":{"id":"67da35c0-8723-56e7-9a58-9f94e2576798","html":"<br>\n<h1 align=\"center\">\n  👋  Number 함수: isNaN(), isInteger(), isSafeInteger(), isFinite()\n</h1>\n<br>\n<h2 id=\"1-isnan\" style=\"position:relative;\"><a href=\"#1-isnan\" aria-label=\"1 isnan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. isNaN()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">NaN</code> 값의 여부를 체크</p>\n<ul>\n<li><code class=\"language-text\">NaN</code> 값이면 <code class=\"language-text\">true</code>, 아니면 <code class=\"language-text\">false</code> 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DEF'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true, true,</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//  true, true,</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'200'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, false,</span></code></pre></div>\n<ol>\n<li>글로벌 오브젝트의 <code class=\"language-text\">isNaN(\"DEF\")</code> 값 타입이 <code class=\"language-text\">Number</code>가 아닌 것을 체크 함, <code class=\"language-text\">DEF</code>가 <code class=\"language-text\">String</code> 타입이므로 <code class=\"language-text\">true</code> 반환</li>\n<li><code class=\"language-text\">NaN</code>와 <code class=\"language-text\">0 / 0</code> 은 값이 <code class=\"language-text\">NaN</code>이므로 <code class=\"language-text\">true</code>가 됨</li>\n<li><code class=\"language-text\">Number.isNaN(\"ABC\")</code> 값이 <code class=\"language-text\">NaN</code>가 아니므로 <code class=\"language-text\">false</code>가 됨</li>\n<li>글로벌 오브젝트의 <code class=\"language-text\">isNaN(\"200\")</code> 값을 숫자로 변환하고 그 결과로 비교 함, 변환한 값 <code class=\"language-text\">200</code>이 <code class=\"language-text\">Number</code> 이므로 <code class=\"language-text\">false</code> 반환</li>\n</ol>\n</li>\n<li>\n<p>NaN 체크 방법</p>\n<ul>\n<li><code class=\"language-text\">NaN === NaN</code> 결과가 <code class=\"language-text\">false</code>이므로 사용 불가</li>\n<li><code class=\"language-text\">isNaN()</code>, 글로벌 오브젝트</li>\n<li><code class=\"language-text\">Number.isNaN()</code></li>\n<li><code class=\"language-text\">Object.is(NaN, NaN)</code> : <code class=\"language-text\">true</code></li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-isinteger\" style=\"position:relative;\"><a href=\"#2-isinteger\" aria-label=\"2 isinteger permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. isInteger()</h2>\n<ul>\n<li>파라미터 값이 <code class=\"language-text\">정수</code>이면 <code class=\"language-text\">true</code>, 아니면 <code class=\"language-text\">false</code> 반환</li>\n<li>\n<p>정수로 인식</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n</li>\n<li>\n<p>정수가 아닌 것으로 인식</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<ol>\n<li>값을 <code class=\"language-text\">Number</code>로 변환하여 체크하지 않음</li>\n<li><code class=\"language-text\">Numbe</code>r로 변환하면, <code class=\"language-text\">\"12\"</code>와 <code class=\"language-text\">true</code>가 <code class=\"language-text\">Number</code>이므로 정수로 인식됨</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"3-issafeinteger\" style=\"position:relative;\"><a href=\"#3-issafeinteger\" aria-label=\"3 issafeinteger permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. isSafeInteger()</h2>\n<ul>\n<li>파라미터 값이 <code class=\"language-text\">sfae 정수</code>이면 <code class=\"language-text\">true</code> 아니면 <code class=\"language-text\">false</code> 반환</li>\n<li><code class=\"language-text\">-(2의 53승 - 1)</code> ~ <code class=\"language-text\">+(2의 53승 -1)</code> : <code class=\"language-text\">true</code> 아니면 <code class=\"language-text\">false</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> isSafe <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span>isSafeInteger<span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span><span class=\"token number\">7.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_SAFE_INTEGER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// 7.0은 정수이며, 값 범위에 속하므로 true</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> isSafe <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span>isSafeInteger<span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span><span class=\"token number\">7.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSafe</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 7.1은 정수가 아님</span>\n<span class=\"token comment\">// 값을 Number로 반환하여 체크하지 않음</span>\n<span class=\"token comment\">// Number로 변환하면, \"100\"이 Number이므로 정수로 인식</span></code></pre></div>\n<br>\n<h2 id=\"4-isfinite\" style=\"position:relative;\"><a href=\"#4-isfinite\" aria-label=\"4 isfinite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. isFinite()</h2>\n<ul>\n<li>파라미터 값이 유한 값이면 <code class=\"language-text\">true</code> 아니면 <code class=\"language-text\">false</code></li>\n<li>\n<p>글로벌 오브젝트의 <code class=\"language-text\">isFinite()</code>와 체크 결과가 다름</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span>isFinite<span class=\"token punctuation\">,</span>\nglobal <span class=\"token operator\">=</span> isFinite<span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true, true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token string\">'70'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token string\">'80'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, true</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, true</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, false</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">global</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false, false</span></code></pre></div>\n</li>\n<li>함수는 오브젝트에 속해야 하므로 <code class=\"language-text\">Number</code>와 관련된 것은 <code class=\"language-text\">Number</code> 오브젝트의 함수 사용, 글로벌 오브젝트의 함수는 글로벌 사용이 목적</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-isnan\">1. isNaN()</a></li>\n<li><a href=\"#2-isinteger\">2. isInteger()</a></li>\n<li><a href=\"#3-issafeinteger\">3. isSafeInteger()</a></li>\n<li><a href=\"#4-isfinite\">4. isFinite()</a></li>\n</ul>\n</div>","excerpt":"1. isNaN()  값의 여부를 체크  값이면 , 아니면  반환 글로벌 오브젝트의  값 타입이 가 아닌 것을 체크 함, 가  타입이므로  반환 와  은 값이 이므로 가 됨  값이 가 아니므로 가 됨 글로벌 오브젝트의  값을 숫자로 변환하고 그 결과로 비교 함, 변환한 값 이  이므로  반환 NaN 체크 방법  결과가 이므로 사용 불가 , 글로벌 오브젝트   :  2. isInteger() 파라미터 값이 이면 , 아니면  반환 정수로 인식 정수가 아닌 것으로 인식 값을 로 변환하여 체크하지 않음 r로 변환하면, 와 가 이므로 정수로 인식됨 3. isSafeInteger() 파라미터 값이 이면  아니면  반환  ~  :  아니면  4. isFinite() 파라미터 값이 유한 값이면  아니면  글로벌 오브젝트의 와 체크 결과가 다름 함수는 오브젝트에 속해야 하므로 와 관련된 것은  오브젝트의 함수 사용, 글로벌 오브젝트의 함수는 글로벌 사용이 목적 1. isNaN() 2. isInte…","frontmatter":{"date":"September 17, 2021","title":"Number 함수","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-number-Object-3/"}},"next":{"id":"cd8aae05-647c-57e0-a632-c0ddb9ffa249","html":"<br>\n<h1 align=\"center\">\n  👋  진수, EPSILON: Number.EPSILON, 진수\n</h1>\n<br>\n<h2 id=\"1-numberepslon\" style=\"position:relative;\"><a href=\"#1-numberepslon\" aria-label=\"1 numberepslon permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Number.EPSLON</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Number.EPSILON</code></p>\n<ul>\n<li>아주 작은 값</li>\n<li>2.220446049250313080847263361816E-16</li>\n<li>또는 2^-52</li>\n</ul>\n</li>\n<li>\n<p>사용 사례</p>\n<ul>\n<li>미세한 값 차이 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0.3000000000000000004</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>total <span class=\"token operator\">===</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<ol>\n<li>JS가 부동소수점 처리를 하기 때문(IEEE 74)</li>\n<li>이처럼 미세한 값 차이로 일치하지 않을 때 <code class=\"language-text\">EPSILON</code>을 사용</li>\n<li>미세한 값 차이를 같은 값으로 간주</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">EPSILON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<ul>\n<li>값 차이가 <code class=\"language-text\">Number.EPSILON</code>보다 작으면 <code class=\"language-text\">true</code>를 반환`</li>\n<li><code class=\"language-text\">0 / 0</code>으로 <code class=\"language-text\">NaN</code>가 되는 것을 방지</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN</span>\n\n<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">EPSILON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">(0 + Number.EPSILON)</code> 처럼 작은 값을 더해 나누면 <code class=\"language-text\">0</code>이 됨</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-진수\" style=\"position:relative;\"><a href=\"#2-%EC%A7%84%EC%88%98\" aria-label=\"2 진수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 진수</h2>\n<ul>\n<li>\n<p>Binary(2진수)</p>\n<ul>\n<li><code class=\"language-text\">0b0101</code>, <code class=\"language-text\">0B0101</code> 형태로 작성</li>\n<li>숫자 <code class=\"language-text\">0</code> 다음에 <code class=\"language-text\">b/B</code> 작성하고 이어서 <code class=\"language-text\">0</code> 또는 <code class=\"language-text\">1</code>로 값을 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0b111</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7</span>\n\n<span class=\"token comment\">// 1 + 2 + 4</span></code></pre></div>\n</li>\n<li>\n<p>Octal(8진수)</p>\n<ul>\n<li><code class=\"language-text\">0O0105</code> 형태로 작성</li>\n<li>숫자 <code class=\"language-text\">0</code> 다음에 영문 <code class=\"language-text\">o/O</code> 작성하고 이어서 <code class=\"language-text\">0~7</code>로 값을 작성</li>\n<li>ES3는 첫 자리에 영문 <code class=\"language-text\">o/O</code> 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0o1111</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 1 + 8 + 64</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-numberepslon\">1. Number.EPSLON</a></li>\n<li><a href=\"#2-%EC%A7%84%EC%88%98\">2. 진수</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 16, 2021","title":"진수, EPSILON","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-number-Object-2/"}},"prev":{"id":"a6997a29-aed5-56e6-8879-4b09cc55481b","html":"<br>\n<h1 align=\"center\">\n  👋  Unicode, ES5 호환성\n</h1>\n<br>\n<h2 id=\"1-unicode\" style=\"position:relative;\"><a href=\"#1-unicode\" aria-label=\"1 unicode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Unicode</h2>\n<ul>\n<li>유니코드는 U+0031 형태</li>\n<li>\n<p>코드 포인트</p>\n<ul>\n<li><code class=\"language-text\">0031</code>이 코드 포인트</li>\n<li>문자 코드라고도 부름</li>\n<li>코드 포인트로 <code class=\"language-text\">문자/이모지</code> 등을 표현</li>\n<li>4자리 이상의 UTF-16진수 형태</li>\n</ul>\n</li>\n<li>\n<p>110만개 정도 표현</p>\n<ul>\n<li>U+0000 ~ U+10FFFF</li>\n</ul>\n</li>\n<li>\n<p>Plane(평면)</p>\n<ul>\n<li>코드 포인트 전체를 17개 plane으로 나눔</li>\n<li>하나의 plane은 65535(U+FFFF)개</li>\n</ul>\n</li>\n<li>\n<p>첫 번째 Plane</p>\n<ul>\n<li>BMP(Basic Multillingual Plane) 라고 부름</li>\n<li>일반적인 문자(연문자, 숫자)가 여기에 속함</li>\n<li>한글의 코드 포인트도 여기에 속함</li>\n</ul>\n</li>\n<li>\n<p>첫 번째 Plane을 제외한 Plane</p>\n<ul>\n<li>Supplementary Plane, Astral Plane이라고 부름</li>\n<li>5자리 이상의 코드 포인트를 표현할 수 있음</li>\n<li>ES6+에서 지원</li>\n</ul>\n</li>\n<li>\n<p>이스케이프 시퀀스(Escape Sequence)</p>\n<ul>\n<li>역슬래시와 16진수로 값을 작성</li>\n<li>이를 16진수 이스케이프 시퀀스라고 부름</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> escape <span class=\"token operator\">=</span> <span class=\"token string\">'₩₩x31₩x32₩x33'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>escaep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'₩₩'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \\</span></code></pre></div>\n</li>\n<li>\n<p>유니코드 이스케이프 시퀀스</p>\n<ul>\n<li>Unficode Escape Sequence</li>\n<li>이스케이프 시퀀스를 유니코드로 작성한 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> escape <span class=\"token operator\">=</span> <span class=\"token string\">'₩₩x31₩x32₩x33'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>escaep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span>\n\n<span class=\"token keyword\">const</span> unicode <span class=\"token operator\">=</span> <span class=\"token string\">'₩u0034₩u0035₩u0036'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>unicode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 456</span></code></pre></div>\n</li>\n<li>\n<p>UES 값 범위</p>\n<ul>\n<li>UTF-16진수로 U+0000에서 U+FFFF까지 사용 가능</li>\n</ul>\n</li>\n<li>\n<p>ES5 문제</p>\n<ul>\n<li>U+FFFF 보다 큰 코드 포인트는 어떻게 작성할 것인가?</li>\n</ul>\n</li>\n<li>\n<p>유니코드 코드 포인트 이스케이프</p>\n<ul>\n<li>코드 포인트 값에 관계 없이 사용할 수 있는 형태 필요</li>\n<li><code class=\"language-text\">₩u{31}</code>, <code class=\"language-text\">₩u{1f418}</code> 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> unicode <span class=\"token operator\">=</span> <span class=\"token string\">'₩u0034₩u0035₩u0036'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>unicode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 456</span>\n\n<span class=\"token keyword\">const</span> es6 <span class=\"token operator\">=</span> <span class=\"token string\">'₩u{34}₩u{35}₩u{36}'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>es6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 456</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'₩u{1f418}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 코끼리 이모지</span></code></pre></div>\n<br>\n<h2 id=\"2-es5-호환성\" style=\"position:relative;\"><a href=\"#2-es5-%ED%98%B8%ED%99%98%EC%84%B1\" aria-label=\"2 es5 호환성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ES5 호환성</h2>\n<ul>\n<li>Surrogate Pair</li>\n<li><code class=\"language-text\">₩u{1f418}</code> 형탵를 ES5에서 사용 불가</li>\n<li>ES5에서는 두 개의 유니코드 이스케이프 시퀀스 사용</li>\n<li>이를 <code class=\"language-text\">Surrogate pair</code>라고 함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> pair <span class=\"token operator\">=</span> <span class=\"token string\">'₩uD83D₩uDC18'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 코끼리 이모지</span></code></pre></div>\n<ul>\n<li>유니코드 사용의 참조 사항</li>\n<li>브라우저, 스마트폰에 따라 표시되는 문자 모습이 다름</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-unicode\">1. Unicode</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 18, 2021","title":"Unicode, ES5 호환성","categories":"JS","author":"Kay","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-string-1/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/study-js-es6-number-Object-3/","nextSlug":"/study-js-es6-number-Object-2/","prevSlug":"/study-js-es6-string-1/"}},"staticQueryHashes":["1073350324","2938748437"]}