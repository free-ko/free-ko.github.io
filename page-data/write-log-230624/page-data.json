{"componentChunkName":"component---src-templates-blog-template-js","path":"/write-log-230624/","result":{"data":{"cur":{"id":"c4b41970-424e-56b3-b897-50bfabd8661f","html":"<h2 id=\"업무를-통해-배운점\" style=\"position:relative;\"><a href=\"#%EC%97%85%EB%AC%B4%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%B0%B0%EC%9A%B4%EC%A0%90\" aria-label=\"업무를 통해 배운점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>업무를 통해 배운점</h2>\n<ol>\n<li>개발 하기 앞서 스스로 설계를 해보고, 어려운 문제라도 단순하게 생각을 해보자.</li>\n<li>스스로 오버 스택이 아닌지 판단 할 줄 알아야 하며, 단순하게 해결할 수 있는 방법이 없는지 고민해 봐야 한다.</li>\n<li>PR을 할 때(특히 비즈니스적으로 중요한 서비스 개발), 내가 개발한 사항을 다른 팀원분들도 테스트 할 수 있도록 문서에 작성해야 한다.</li>\n<li>해피 케이스를 생각하고 개발을 진행한 뒤에, 다양한 케이스를 고려해서 개발을 해야 한다. 이 때 개발하는 과정에서 재사용성을 고려하지 않거나 특정 컴포넌트 안에 비즈니스 로직이 얽혀 있으면 추후에 요구사항에 맞게 개발하기가 쉽지 않다.</li>\n<li>데이터의 초깃 값을 <code class=\"language-text\">Null</code>로 하는 이유는, 만약에 서버로 부터 요청한 데이터가 <code class=\"language-text\">[]</code>이고 초깃 값이 <code class=\"language-text\">[]</code>이면 현재 어떤 상황인지 명확하지가 않아, 초깃 값을 <code class=\"language-text\">Null</code>로 명시해, 서버로부터 가져온 데이터가 확실하게 어떤 데이터인지 구분할 필요가 있다.</li>\n<li>핸들러 함수를 만들더라고 각 요구사항에 대비할 수 있도록 Util 함수를 맵핑 할 수 있도록 빼는 연습이 필요하다. 예를 들어 특정 상황에 목록 아이템을 클릭 했을 때, Toast를 띄워야 한다면, 핸들러 함수 안에 세부적으로 요청하는 함수를 외부에서 주입하도록 개발을 진행하면 유연하게 요구사항을 대처할 수 있을 것 같다.</li>\n<li>BE에서 전달해주는 DB 값을 잘 활용하자. FE에서 BE에 주는 값을 가지고 FE에서만 사용하는 값을 조작해야 하는 상황과 그렇지 않은 상황을 구분해 개발을 시작해야 하자.</li>\n</ol>\n<br>\n<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<p>결론부터 말하자면 정신이 없다. 업무도 많고, 익숙하지 않은 환경에서 개발을 진행하다보니 개인적으로 많이 힘이 드는 부분이 있다. 또한 개발 공부를 시작한 이후로 제대로 쉬지도 않고 지금까지 달려온 것 같다. 스스로 임계점에 있는 느낌이 든다. 물론 이 임계점을 넘으면 분명 내가 경험해 보지 못한 시야를 볼 수 있어 많은 기대가 있지만, 그래도 제대로 쉬고 싶은 생각이 있다.</p>\n<p>하지만, 지금은 아닌 것 같다.</p>\n<p>내가 생각했을 때, 현재 하고 있는 업무가 비즈니스 적으로 너무나 중요하다고 느껴져 조금 만 더 힘을 내고 싶다.</p>\n<p>그리고 요즘들어 개발 생산성을 높이기위한 방법이 무엇이 있는지 고민을 하고 있다. 주어진 시간은 한정적인데 어떻게 하면 더 빠르고 더 퀄리티 높은 개발을 할 수 있는지 혹은 그렇게 하고 있는 사람들은 어떻게 하는지가 매우 관심사 이다.</p>\n<p>개인적으로 이번 스프린트를 끝내고 따로 시간을 내어서 디자인 시스템을 구축하고 싶다. 디자인 시스템만 제대로 잡혀있어도 개발 생상성을 높일 수 있을 것 같고 퀄리티 면에서는 PR을 날리기 전에 Chat GPT에서 코드 검사하는 로직을 적용하면 어떨까 하는 생각을 하고 있다.(물론 팀내에서 중요하게 여기는 컨벤션을 학습시켜야 한다.)</p>\n<p>이런 저런 생각이 많은 한 주였다. 몸도 많이 지쳤는데 여전히 머리는 아직 풀지 않은 로직을 생각하고 있다. 이럴 때 스스로 ‘무언가에 집중’하는 삶을 살고 있구나 생각을 한다.</p>\n<p>마지막으로 전 직장 CTO분과 점심을 먹었다. 함께 일했었던 이야기, 근황 그리고 덕담 등 다양한 주제에 대해 이야기를 나누었다. 오랜만에 뵈서 너무나 기뻤고 같이 일하는 팀원들과의 시간이 너무나도 중요하고 소중한 거구나 라는 것을 새삼 다시 느끼게 되었다.</p>\n<p>언제 또 전 직장 동료분들과 같이 일 할 수 있을까? 확률로는 많이 높지 않기에 현재 동료들과 함께 일하는 시간을 소중하게 여기자.</p>\n<p>이번 주도 수고했다.</p>\n<p>p.s\n항상 저를 응원해주시는 사람들에게 감사함을 전합니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://velog.io/@jeonbyeongmin/Chat-GPT%ED%95%9C%ED%85%8C-%EC%BD%94%EB%93%9C%EB%A6%AC%EB%B7%B0-%EC%8B%9C%EC%BC%B0%EC%8A%B5%EB%8B%88%EB%8B%A4..-feat.-Github-Action\">Chat GPT로 코드리뷰 시키기</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%97%85%EB%AC%B4%EB%A5%BC-%ED%86%B5%ED%95%B4-%EB%B0%B0%EC%9A%B4%EC%A0%90\">업무를 통해 배운점</a></li>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"업무를 통해 배운점 개발 하기 앞서 스스로 설계를 해보고, 어려운 문제라도 단순하게 생각을 해보자. 스스로 오버 스택이 아닌지 판단 할 줄 알아야 하며, 단순하게 해결할 수 있는 방법이 없는지 고민해 봐야 한다. PR을 할 때(특히 비즈니스적으로 중요한 서비스 개발), 내가 개발한 사항을 다른 팀원분들도 테스트 할 수 있도록 문서에 작성해야 한다. 해피 케이스를 생각하고 개발을 진행한 뒤에, 다양한 케이스를 고려해서 개발을 해야 한다. 이 때 개발하는 과정에서 재사용성을 고려하지 않거나 특정 컴포넌트 안에 비즈니스 로직이 얽혀 있으면 추후에 요구사항에 맞게 개발하기가 쉽지 않다. 데이터의 초깃 값을 로 하는 이유는, 만약에 서버로 부터 요청한 데이터가 이고 초깃 값이 이면 현재 어떤 상황인지 명확하지가 않아, 초깃 값을 로 명시해, 서버로부터 가져온 데이터가 확실하게 어떤 데이터인지 구분할 필요가 있다. 핸들러 함수를 만들더라고 각 요구사항에 대비할 수 있도록 Util 함수를 맵핑…","frontmatter":{"date":"June 24, 2023","title":"6월 4주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230624/"}},"next":{"id":"e5b4516e-3b35-5980-9622-77649014f1d7","html":"<h2 id=\"ama-자기-평가\" style=\"position:relative;\"><a href=\"#ama-%EC%9E%90%EA%B8%B0-%ED%8F%89%EA%B0%80\" aria-label=\"ama 자기 평가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AMA 자기 평가</h2>\n<p>조직 리더분께서 팀내 평가제도에 대한 주제로 이야기를 해주셨고 그 중에, 자기 평가에 대한 말씀을 해주셨을 때 개인적으로 인사이트를 얻어 아래와 같이 내용을 정리해보았습니다.</p>\n<p>결국 제가 팀에서 필요한 인재가 되기 위해서는 누구도 시키지 않은 일뿐만 아니라, 팀에서 필요한 비즈니스 서비스를 제한된 시간 안에 기능 개발을 함께 일하는 동료들과 잘 협업해서 수행하는 것이 가장 중요하는 것이고 더 나아가 개발 효율을 증진시키기 위해 끊임없이 노력하는 태도와 실제 성과를 만들어 내는 것도 중요하다는 사실을 알게 되었습니다.</p>\n<p>업무 회고를 진행할 때에는 ‘사실’기반으로 팀내 어떤 목표(문제)를 해결하고자 어떤 노력을 통해 해결했고 결국 어떠한 성과를 만들어냈는지 작성하면 좋을 것 같은 생각이 들었습니다. 그런데 만약 스프린트 기간내에 특정 문제를 해결하지 못했다면 왜 못했는지 반성을 통해 앞으로 해결하지 못한 부분을 어떻게 해결할 것인지 계획을 수립하는 부분도 필요할 것 같습니다.</p>\n<p>입사한지 얼마 되지 않았지만, 다시 한번 업무를 하면서 틈틈히 업무를 하면서 세세한 부분까지 기록을 하는 노력을 해야겠다는 생각이 들었습니다.</p>\n<br>\n<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<p>전 직장 동료의 결혼 축하를 위해, 전 직장 동료분들을 만났습니다. 너무나 반가웠고 그동안 나누지 못했던, 이야기 꽃들을 피웠습니다.</p>\n<p>동료분들의 이직 경험담 등을 들으면서 개인적으로 많은 동기부여가 되었던 것 같습니다.</p>\n<p>함께 일했던 동료분께서 ‘이제 주니어라는 틀을 깨고 미들 더나아가 시니어로 가야 할 때가 온 것 같다.‘라는 말씀을 해주셨을 때,\n솔직히 머리로 망치를 맞은 것 같았습니다.</p>\n<p>스스로 주니어라고 생각하면서 일을 하면, 주니어에 머무를 수 밖에 없다는 생각에 다시 한번 되돌아 보게 되었습니다.</p>\n<p>그리고 제가 좋아하는 스터디언 영상에서도 연차가 쌓이면 저절로 리더가 되는 것이 아니라, 리더가 되기 위해 끊임없이 노력을 통해서 리더가 된다는 내용에서 인상깊게 보았던 기억이 있습니다.</p>\n<p>같은 맥락으로 저 또한 리더가 되기 위해서는 스스로 주니어라고 생각하는 것이 아니라, 리더가 되기 위한 준비 과정에서 부족한 부분을 하나씩 채워가는 자세로 임해야 한다는 것을 전 직장 동료분과 대화를 통해 반성하게 되었습니다.</p>\n<p>또한 조직 리더분과 함께 점심을 먹으면서 앞으로 제가 리더가 되기 위한 능력 중 가장 중요한 것은 ‘자기 객관화(메타인지)‘라는 것도 알게 되었습니다.</p>\n<blockquote>\n<p>자기 객관화(메타인지)</p>\n<p>자신의 인지 과정에 대하여 한 차원 높은 시각에서 관찰, 발견, 통제하는 정신 작용</p>\n</blockquote>\n<p>물론 리더가 되기 위해 자기 객관화 능력을 키우는 것도 중요하겠지만, 단순히 리더가 되기 위해 자기 객관화 능력을 키우는 것을 넘어 끊임없이 나를 알아가는 시간을 갖으면서 주어진 삶을 제대로 살아가고 싶습니다.</p>\n<p>오랜만에 들어본 전 직장 동료분들의 웃음소리, 고유의 분위기 등 너무나 즐겁고 잊지 못할 시간이었습니다.</p>\n<p>언젠간 시간이 지나, 다시 함께 일할 날을 고대하며 이번 한 주도 수고했습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#ama-%EC%9E%90%EA%B8%B0-%ED%8F%89%EA%B0%80\">AMA 자기 평가</a></li>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 17, 2023","title":"6월 3주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230617/"}},"prev":{"id":"94da810f-2c09-5bef-b483-5c9c12b03a4c","html":"<h2 id=\"아이템-53-ts-기능보다는-ecmascript-기능을-사용하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-53-ts-%EA%B8%B0%EB%8A%A5%EB%B3%B4%EB%8B%A4%EB%8A%94-ecmascript-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"아이템 53 ts 기능보다는 ecmascript 기능을 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 53: TS 기능보다는 ECMAScript 기능을 사용하기</h2>\n<ol>\n<li>\n<p>JS에 새로 추가된 기능은 TS의 초기 기능과 호환성 문제를 발생</p>\n<ul>\n<li>JS의 신규 기능을 그대로 채택하고 TS 초기 버전과 호환성을 포기 그러나 이미 사용되고 있던 몇 가지 기능(호환성 문제로 지양하는 방식) 있음</li>\n</ul>\n</li>\n<li>\n<p>열거형(enum)</p>\n<ul>\n<li>몇몇 값의 모음을 나타내는 방식</li>\n<li>문제점</li>\n<li>숫자 열거형에 0, 1, 2 외의 다른 숫자가 할당되면 매우 위험</li>\n<li>상수 열거형(const enum)은 런타임에 완전히 제거되어, 문자열 열거형에서 문제를 일으킴</li>\n<li>preserveConstEnums 플래그를 설정한 상수 열거형은 런타임 코드에 정보를 유지함</li>\n<li>문자열 열거형은 구조적 타이핑이 아닌 명목적 타이핑을 사용함</li>\n<li>문자열 열거형의 명목적 타이핑은 JS와 동작이 다르다는 문제가 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">enum</span> Flavor <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">VANILLA</span> <span class=\"token operator\">=</span> <span class=\"token string\">'vanilla'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">CHOCOLATE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'chocolate'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">STRAWBERRY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> flavor <span class=\"token operator\">=</span> Flavor<span class=\"token punctuation\">.</span><span class=\"token constant\">CHOCOLATE</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 타입이 Flavor</span>\nflavor <span class=\"token operator\">=</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🚨 'strawberry' 형식은 'Flavor' 형식에 할당할 수 없습니다</span>\n\n<span class=\"token comment\">// 열거형 대신 리터럴 타입의 유니온 사용을 권장</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Flavor</span> <span class=\"token operator\">=</span> <span class=\"token string\">'vanilla'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'chocolate'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>매개변수 속성</p>\n<ul>\n<li>생성자의 매개변수를 사용하여 클래스 초기화 시 TS는 간결한 문법을 제공</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">public</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>문제점</p>\n<ul>\n<li>실제로는 코드가 늘어남</li>\n<li>매개변수 속성은 런타임에는 실제로 사용되지만, TS에서는 사용되지 않는 것처럼 보임</li>\n<li>매개변수 속성과 일반 속성을 섞어서 사용하면 클래스의 설계가 혼란스러워 짐</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>네임스페이스와 트리플 슬래시 임포트</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// ES2015 스타일의 모듈(import와 export) 사용을 권장</span>\n\n<span class=\"token keyword\">namespace</span> foo <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/// &lt;reference path=\"other.ts\" /></span>\nfoo<span class=\"token punctuation\">.</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"5\">\n<li>\n<p>데코레이터</p>\n<ul>\n<li>클래스, 메서드, 속성에 annotation을 붙이거나 기능을 추가하는 것</li>\n<li>문제점</li>\n<li>표준화가 완료되지 않았기 때문에 비표준으로 바뀌거나 호환성이 깨질 가능성이 있음</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"아이템-54-객체를-순회하는-노하우\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-54-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%88%9C%ED%9A%8C%ED%95%98%EB%8A%94-%EB%85%B8%ED%95%98%EC%9A%B0\" aria-label=\"아이템 54 객체를 순회하는 노하우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 54: 객체를 순회하는 노하우</h2>\n<ol>\n<li>\n<p>편집기에서 오류가 발생하는 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n one<span class=\"token operator\">:</span> <span class=\"token string\">'uno'</span><span class=\"token punctuation\">,</span>\n two<span class=\"token operator\">:</span> <span class=\"token string\">'dos'</span><span class=\"token punctuation\">,</span>\n three<span class=\"token operator\">:</span> <span class=\"token string\">'tres'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> k <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// 🚨 obj에 인덱스 시그니처가 없기 때문에 엘리먼트는 암시적으로 'any' 타입</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// k가 string 으로 인식되기 때문</span>\n<span class=\"token comment\">// k의 타입을 더욱 구체적으로 명시해서 해결가능</span>\n<span class=\"token keyword\">let</span> k<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> <span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 정상</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">k</code>가 <code class=\"language-text\">string</code>으로 추론된 이유</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// a, b, c 외에 다른 속성이 존재하는 객체도 foo 함수의 매개변수 abc에 할당 가능하기 때문</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">ABC</span></span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  b<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  c<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>abc<span class=\"token operator\">:</span> <span class=\"token constant\">ABC</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> k <span class=\"token keyword\">in</span> abc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> abc<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 🚨</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">keyof</code>을 사용하는 것의 문제</p>\n<ul>\n<li><code class=\"language-text\">v</code>도 <code class=\"language-text\">string | number</code>로 한정되어 범위가 너무 좁아짐</li>\n</ul>\n</li>\n<li>\n<p>단지 객체의 키와 값을 순회하고 싶다면 <code class=\"language-text\">Object.entries</code>를 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>abc<span class=\"token operator\">:</span> <span class=\"token constant\">ABC</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>abc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   k<span class=\"token punctuation\">;</span> <span class=\"token comment\">// string 타입</span>\n   v<span class=\"token punctuation\">;</span> <span class=\"token comment\">// any 타입</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://github.com/pagers-org/Effective-TypeScript\">이펙티브 타입스크립트 Study</a></li>\n<li><a href=\"http://www.yes24.com/Product/Goods/102124327\">이펙티브 타입스크립트 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-53-ts-%EA%B8%B0%EB%8A%A5%EB%B3%B4%EB%8B%A4%EB%8A%94-ecmascript-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">아이템 53: TS 기능보다는 ECMAScript 기능을 사용하기</a></li>\n<li>\n<p><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-54-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%88%9C%ED%9A%8C%ED%95%98%EB%8A%94-%EB%85%B8%ED%95%98%EC%9A%B0\">아이템 54: 객체를 순회하는 노하우</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 25, 2023","title":"Effective TypeScript 7장","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/effective-typescript-7/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/write-log-230624/","nextSlug":"/write-log-230617/","prevSlug":"/effective-typescript-7/"}},"staticQueryHashes":["1073350324","2938748437"]}