{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-let/","result":{"data":{"cur":{"id":"437a7b4b-db57-5b7e-935a-f7563b551f34","html":"<br>\n<h1 align=\"center\">\n  👋 let 변수 개요, let 변수 선언, 블록 스코프\n</h1>\n<br>\n<h2 id=\"1-let-변수-개요\" style=\"position:relative;\"><a href=\"#1-let-%EB%B3%80%EC%88%98-%EA%B0%9C%EC%9A%94\" aria-label=\"1 let 변수 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) let 변수 개요</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'밖:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 안: 농구</span>\n<span class=\"token comment\">// 밖: 축구</span></code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">let book = \"책\";</code></p>\n<ul>\n<li>블록 스코프를 가진 변수</li>\n<li>변수가 선언된 블록이 스코프</li>\n</ul>\n</li>\n<li>\n<p>스코프 적용 기준</p>\n<ul>\n<li>블록<code class=\"language-text\">{}</code>, 문, 표현시</li>\n</ul>\n</li>\n<li>\n<p>블록<code class=\"language-text\">{}</code> 안과 밖이 스코프가 다름</p>\n<ul>\n<li>변수 이름이 같아도 값이 대체되지 않음</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-let-변수-선언\" style=\"position:relative;\"><a href=\"#2-let-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"2 let 변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) let 변수 선언</h2>\n<ul>\n<li>\n<p>Syntax</p>\n<ul>\n<li><code class=\"language-text\">let name1 [= value1] [, name2 [= value2]]</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">name1</code>, <code class=\"language-text\">name2</code>에 변수 이름 작성</p>\n<ul>\n<li>식별자로 사용</li>\n<li><code class=\"language-text\">[ ]</code>는 생략 가능을 나타냄</li>\n<li>값을 할당하지 않아도 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> book<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">let book;</code></li>\n<li>값을 할당하지 않고 변수만 선언할 수 있음, 초깃값 <code class=\"language-text\">undefined</code>가 할당됨</li>\n<li><code class=\"language-text\">let one, two;</code></li>\n<li>콤마로 구분하여 다수를 선언할 수 있음</li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">value1</code>, <code class=\"language-text\">value2</code>에 초깃값 작성</p>\n<ul>\n<li>표현식 작성 가능, 평가 결과 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> book <span class=\"token operator\">=</span> <span class=\"token string\">'책'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> one <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\ntwo <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// let five = 5, let six = 6;</span>\n<span class=\"token comment\">// let five = 5, var six = 6;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">let book = \"책\";</code></li>\n<li>변수를 선언하고 초깃값을 할당했습니다.</li>\n<li><code class=\"language-text\">let one = 1, two = (10 + 20);</code></li>\n<li>콤마로 구분하여 다수의 변수를 선언하고 값을 할당한 형태임</li>\n<li><code class=\"language-text\">let five = 5, let six = 6;</code></li>\n<li><code class=\"language-text\">SyntaxError</code> 발생, <code class=\"language-text\">let</code>을 처음에 한 번만 작성함</li>\n<li><code class=\"language-text\">let five = 5, var six = 6;</code></li>\n<li>콤마로 구분하여 let과 var을 같이 사용할 수 없음</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"3-블록-스코프\" style=\"position:relative;\"><a href=\"#3-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"3 블록 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 블록 스코프</h2>\n<ul>\n<li>\n<p>블록 기준</p>\n<ul>\n<li>중괄호 <code class=\"language-text\">{ 코드 }</code></li>\n<li><code class=\"language-text\">function name() { 코드 }</code></li>\n<li><code class=\"language-text\">if (a === 1) { 코드 }</code></li>\n</ul>\n</li>\n<li>\n<p>블록 안과 밖이 스코프가 다름</p>\n<ul>\n<li>변수 이름이 같아도 값이 대체되지 않음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 블록 스코프</span>\n\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'밖:'</span><span class=\"token punctuation\">,</span> sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">if (sports) {...}</code> 블록 <code class=\"language-text\">{}</code> 안과 밖에 <code class=\"language-text\">let sports</code>를 작성했으며 스코프가 다르므로 같은 이름을 사용할 수 있음</li>\n<li>변숫값이 대체되지 않고 유지 됨</li>\n<li>블록 안에서 블록 밖의 변수는 접근 할수 있지만(<code class=\"language-text\">if</code>문 안의 <code class=\"language-text\">sports</code>의 <code class=\"language-text\">let</code>를 빼면 밖의 <code class=\"language-text\">sports</code>에 접근)</li>\n<li>블록 밖에서 블록 안의 변수는 접근 할수 없음</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'축구'</span><span class=\"token punctuation\">;</span>\n\nsports <span class=\"token operator\">=</span> <span class=\"token string\">'농구'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 농구</span>\n\n<span class=\"token comment\">// let sports = \"배구\";</span>\n\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">let</span> sports <span class=\"token operator\">=</span> <span class=\"token string\">'탁구'</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sports<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">sports = \"농구\";</code> 스코프에서 <code class=\"language-text\">sports</code> 식별자를 해결함, 바로 앞에 있으므로 값을 할당</li>\n<li><code class=\"language-text\">// let sports = \"배구\";</code> <code class=\"language-text\">let</code>을 사용하여 같은 스코프에 같은 이름의 변수를 선언할 수 없음</li>\n<li><code class=\"language-text\">{ let sports =\"탁구\"; }</code> 블록 <code class=\"language-text\">{}</code>을 사용했으므로 스코프가 다르므로 <code class=\"language-text\">let</code>을 사용하여 변수를 선언할 수 있음</li>\n</ol>\n</li>\n<li>스코프에 같은 이름 사용 불가</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-let-%EB%B3%80%EC%88%98-%EA%B0%9C%EC%9A%94\">1) let 변수 개요</a></li>\n<li><a href=\"#2-let-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\">2) let 변수 선언</a></li>\n<li><a href=\"#3-%EB%B8%94%EB%A1%9D-%EC%8A%A4%EC%BD%94%ED%94%84\">3) 블록 스코프</a></li>\n</ul>\n</div>","excerpt":"1) let 변수 개요  블록 스코프를 가진 변수 변수가 선언된 블록이 스코프 스코프 적용 기준 블록, 문, 표현시 블록 안과 밖이 스코프가 다름 변수 이름이 같아도 값이 대체되지 않음 2) let 변수 선언 Syntax  , 에 변수 이름 작성 식별자로 사용 는 생략 가능을 나타냄 값을 할당하지 않아도 됨  값을 할당하지 않고 변수만 선언할 수 있음, 초깃값 가 할당됨  콤마로 구분하여 다수를 선언할 수 있음 , 에 초깃값 작성 표현식 작성 가능, 평가 결과 사용  변수를 선언하고 초깃값을 할당했습니다.  콤마로 구분하여 다수의 변수를 선언하고 값을 할당한 형태임   발생, 을 처음에 한 번만 작성함  콤마로 구분하여 let과 var을 같이 사용할 수 없음 3) 블록 스코프 블록 기준 중괄호    블록 안과 밖이 스코프가 다름 변수 이름이 같아도 값이 대체되지 않음  블록  안과 밖에 를 작성했으며 스코프가 다르므로 같은 이름을 사용할 수 있음 변숫값이 대체되지 않고 유지 됨 블…","frontmatter":{"date":"September 01, 2021","title":"let 변수","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-let/"}},"next":{"id":"446e2c83-a4ef-5bf3-93b1-2e5e42cef9b6","html":"<br>\n<h1 align=\"center\">\n  👋 let 변수와 var 변수 차이\n</h1>\n<br>\n<h2 id=\"-요약\" style=\"position:relative;\"><a href=\"#-%EC%9A%94%EC%95%BD\" aria-label=\" 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 요약</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">for()</code>문에서 반복 할 때마다</p>\n<ul>\n<li><code class=\"language-text\">var</code> 변수는 스코프를 갖지 않음</li>\n<li><code class=\"language-text\">let</code> 변수는 스코프를 가짐</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"1-var-변수와-스코프\" style=\"position:relative;\"><a href=\"#1-var-%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"1 var 변수와 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) var 변수와 스코프</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// var변수와 스코프</span>\n\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.sports'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>\n<p>어떤 것을 클릭하더라도 항상 <code class=\"language-text\">for()</code>문이 끝났을 때의 값인 <code class=\"language-text\">3</code>을 출력함</p>\n<ul>\n<li>전체의 스코프에서 하나의 값으로 할당되기 때문</li>\n<li>for문의 마지막 값인 <code class=\"language-text\">3</code>이 <code class=\"language-text\">var</code> 선언된 <code class=\"language-text\">k</code> 즉 글로벌 변수에 할당 됨.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">var k = 0;</code> 에서 k 변수의 스코프는 함수 임</li>\n</ol>\n<br>\n<h2 id=\"2-let-변수와-스코프\" style=\"position:relative;\"><a href=\"#2-let-%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"2 let 변수와 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) let 변수와 스코프</h2>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// let변수와 스코프</span>\n\n<span class=\"token keyword\">var</span> node <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.sports'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">'yellow'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 0</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span></code></pre></div>\n<ul>\n<li>이벤트를 설정할 때의 <code class=\"language-text\">k</code>값을 출력 합니다.</li>\n</ul>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EC%9A%94%EC%95%BD\">💡 요약</a></li>\n<li><a href=\"#1-var-%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\">1) var 변수와 스코프</a></li>\n<li><a href=\"#2-let-%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\">2) let 변수와 스코프</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 01, 2021","title":"let vs var","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-letVSvar/"}},"prev":{"id":"944938f0-3cf5-510c-87f6-813ce60b8755","html":"<br>\n<h1 align=\"center\">\n  👋 화살표 함수와 인스턴스, 화살표 함수 특징\n</h1>\n<br>\n<h2 id=\"1-화살표-함수와-인스턴스\" style=\"position:relative;\"><a href=\"#1-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"1 화살표 함수와 인스턴스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 화살표 함수와 인스턴스</h2>\n<ul>\n<li>인스턴스에서 화살표 함수의 <code class=\"language-text\">작성 위치</code>에 따라 <code class=\"language-text\">this</code>가 참조하는 오브젝트가 다름</li>\n</ul>\n<h3 id=\"1-code-classlanguage-textprototypecode에-메소드로-작성\" style=\"position:relative;\"><a href=\"#1-code-classlanguage-textprototypecode%EC%97%90-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A1%9C-%EC%9E%91%EC%84%B1\" aria-label=\"1 code classlanguage textprototypecode에 메소드로 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1). <code class=\"language-text\">prototype</code>에 메소드로 작성</h3>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">var</span> point <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 생성자 함수</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Point</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nPoint<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getPoint</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// new 연산자로 인스턴스를 만든 후 getPoint() 메소드를 호출 합니다.</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 200</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">prototype</code>에 화살표 함수를 연결하면 함수 안에서 <code class=\"language-text\">this</code>가 글로벌 오브젝트를 참조 함</li>\n<li><code class=\"language-text\">console.log(this.point)</code> 에서 글로벌 오브젝트의 <code class=\"language-text\">point</code> 값이 200을 출력</li>\n</ol>\n<br>\n<h3 id=\"2-code-classlanguage-textprototypecode의-메소드-안에-작성\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textprototypecode%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%95%88%EC%97%90-%EC%9E%91%EC%84%B1\" aria-label=\"2 code classlanguage textprototypecode의 메소드 안에 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2). <code class=\"language-text\">prototype</code>의 메소드 안에 작성</h3>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Point</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nPoint<span class=\"token punctuation\">.</span>prototpe<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getPoint</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>point <span class=\"token operator\">+</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 120</span>\n<span class=\"token comment\">// 101</span>\n<span class=\"token comment\">// 102</span></code></pre></div>\n<ol>\n<li><code class=\"language-text\">prototype</code>에 일반 함수를 연결하고, 함수 안에 화살표 함수를 작성한 형태 임.</li>\n<li><code class=\"language-text\">getPoint()</code>가 일반 함수 이므로 <code class=\"language-text\">this</code>가 생성한 인스턴스 참조</li>\n<li>또한, 화살표 함수에서도 <code class=\"language-text\">this</code>가 생성한 인스턴스를 참조 함</li>\n<li>화살표 함수의 스코프인 <code class=\"language-text\">getPoint()</code>의 <code class=\"language-text\">this</code>를 사용하기 때문</li>\n</ol>\n<br>\n<h2 id=\"2-화살표-함수-특징\" style=\"position:relative;\"><a href=\"#2-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%ED%8A%B9%EC%A7%95\" aria-label=\"2 화살표 함수 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 화살표 함수 특징</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">function</code> 대신 <code class=\"language-text\">=></code> 를 사용, 함수 표현식 형태</p>\n<ul>\n<li><code class=\"language-text\">prototype</code>이 없으므로 함수가 가벼움</li>\n<li><code class=\"language-text\">constructor</code>가 없으므로 <code class=\"language-text\">new</code> 연산자로 인스턴스를 생성할 수 없음</li>\n</ul>\n</li>\n<li>\n<p>화살표 함수에 <code class=\"language-text\">this</code>가 없음</p>\n<ul>\n<li>화살표 함수로 <code class=\"language-text\">Function</code> 오브젝트를 생성할 때</li>\n<li>정적으로 화살표 함수가 속한 스코프의 <code class=\"language-text\">this</code>를 화살표 함수에 바인딩 함</li>\n<li>바인딩 된 <code class=\"language-text\">this</code> 참조가 바뀌지 않으며 화살표 함수에서 <code class=\"language-text\">this</code>로 사용 함</li>\n<li>일반 함수는 <code class=\"language-text\">call()</code> 등으로 바꿀 수 있음</li>\n</ul>\n</li>\n<li>메소드보다 함수로 사용하는 것이 효율 성이 높음</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\">1. 화살표 함수와 인스턴스</a></p>\n<ul>\n<li><a href=\"#1-prototype%EC%97%90-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A1%9C-%EC%9E%91%EC%84%B1\">1). <code class=\"language-text\">prototype</code>에 메소드로 작성</a></li>\n<li><a href=\"#2-prototype%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%95%88%EC%97%90-%EC%9E%91%EC%84%B1\">2). <code class=\"language-text\">prototype</code>의 메소드 안에 작성</a></li>\n</ul>\n</li>\n<li><a href=\"#2-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98-%ED%8A%B9%EC%A7%95\">2. 화살표 함수 특징</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 02, 2021","title":"Arrow Function과 인스턴스","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-arrowFunction-4/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-let/","nextSlug":"/study-js-es6-letVSvar/","prevSlug":"/study-js-es6-arrowFunction-4/"}},"staticQueryHashes":["1073350324","2938748437"]}