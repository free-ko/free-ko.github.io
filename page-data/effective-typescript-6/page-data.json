{"componentChunkName":"component---src-templates-blog-template-js","path":"/effective-typescript-6/","result":{"data":{"cur":{"id":"6e10efb6-b3ff-561a-b1e0-2d650ed89e61","html":"<h2 id=\"아이템-45-devdependencies에-ts와-types-추가하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-45-devdependencies%EC%97%90-ts%EC%99%80-types-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"아이템 45 devdependencies에 ts와 types 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 45: devDependencies에 TS와 @types 추가하기</h2>\n<ol>\n<li>\n<p>npm의 의존성 구분</p>\n<ul>\n<li>dependencies: 현재 프로젝트 실행 시 필수적인 라이브러리</li>\n<li>devDependencies: 런타임에는 필요없는 라이브러리</li>\n<li>peerDependencies: 런타임에 필요하긴 하지만, 의존성을 직접 관리하지 않는 라이브러리</li>\n</ul>\n</li>\n<li>TS는 개발 도구일 뿐이고 타입 정보는 런타임에 존재하지 않기 때문에, TS와 관련된 라이브러리는 일반적으로 devDependencies에 속함</li>\n<li>\n<p>TS 프로젝트에서 고려해야 할 의존성</p>\n<ul>\n<li>TS 시스템 레벨로 설치하기보다는 devDependencies에 넣는 것을 권장\n→ npm install 시 팀원들 모두 항상 정확한 버전의 TS 설치 가능</li>\n<li>대부분의 TS IDE와 빌드 도구는 devDependencies를 통해 설치된 타입스크립트의 버전을 인식할 수 있음</li>\n<li>DefinitelyTyped에서 라이브러리에 대한 타입 정보를 얻을 수 있음</li>\n<li>@types 라이브러리는 타입 정보만 포함하고 있으며 구현체는 포함하지 않음</li>\n<li>원본 라이브러리 자체가 dependencies에 있더라도 @types 의존성은 devDependencies에 있어야 함</li>\n</ul>\n</li>\n</ol>\n<br>\n<h2 id=\"아이템-46-타입-선언과-관련된-3가지-버전-이해하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-46-%ED%83%80%EC%9E%85-%EC%84%A0%EC%96%B8%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-3%EA%B0%80%EC%A7%80-%EB%B2%84%EC%A0%84-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"아이템 46 타입 선언과 관련된 3가지 버전 이해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 46: 타입 선언과 관련된 3가지 버전 이해하기</h2>\n<ol>\n<li>\n<p>TS 사용 시 고려해야 할 사항</p>\n<ul>\n<li>라이브러리의 버전</li>\n<li>타입 선언(@types)의 버전</li>\n<li>타입스크립트의 버전</li>\n</ul>\n</li>\n<li>\n<p>타입스크립트에서 의존성을 사용하는 방식</p>\n<ul>\n<li>특정 라이브러리는 dependencies로, 타입 정보는 devDependencies로 설치</li>\n</ul>\n</li>\n<li>\n<p>실제 라이브러리와 타입 정보의 버전이 별도로 관리되는 방식의 문제점</p>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token list punctuation\">1.</span>  라이브러리를 업데이트했지만 실수로 타입 선언은 업데이트하지 않은 경우\n\n<span class=\"token code keyword\">    - 타입 선언도 업데이트하여 라이브러리와 버전을 맞춤\n    - 보강 기법 또는 타입 선언의 업데이트를 직접 작성</span>\n\n<span class=\"token list punctuation\">2.</span>  라이브러리보다 타입 선언의 버전이 최신인 경우\n\n<span class=\"token code keyword\">    - 라이브러리 버전을 올리거나 타입 선언의 버전을 내리기</span>\n\n<span class=\"token list punctuation\">3.</span>  프로젝트에서 사용하는 타입스크립트 버전보다 라이브러리에서 필요로 하는 타입스크립트 버전이 최신인 경우\n\n<span class=\"token code keyword\">    - 타입스크립트의 최신 버전을 사용\n    - 라이브러리 타입 선언의 버전을 내리거나, declare module 선언으로 라이브러리의 타입 정보를 없애 버림</span>\n\n<span class=\"token list punctuation\">4.</span>  @types 의존성이 중복되는 경우\n\n<span class=\"token code keyword\">    a. ex) @types/bar가 현재 호환되지 않는 버전의 @types/foo에 의존하는 경우</span>\n\n<span class=\"token code keyword\">    - 전역 네임스페이스에 있는 타입 선언 모듈인 경우 중복 문제가 발생\n      → 서로 버전이 호환되도록 업데이트</span>\n\n<span class=\"token code keyword\">    b. 일부 라이브러리는 자체적으로 타입 선언을 포함(번들링)</span>\n\n<span class=\"token code keyword\">    - package.json 의 types 필드가 .d.ts 파일을 가리키도록 되어 있음\n    - 버전 불일치 문제를 해결할 수 있지만, 네 가지 부수적인 문제점이 있음\n      - 번들된 타입 선언에 보강 기법으로 해결할 수 없는 오류가 있는 경우, 또는 공개 시점에는 잘 동작했지만 타입스크립트 버전이 올라가면서 오류가 발생하는 경우(번들된 타입에서는 @types의 버전 선택 불가능)\n      - 프로젝트 내의 타입 선언이 다른 라이브러리의 타입 선언에 의존하는 경우(devDependencies에 들어간 의존성을 다른 사용자는 설치할 수 없기 때문)\n        → DefinitelyTyped에 타입 선언을 공개하여 타입 선언을 @types로 분리\n      - 프로젝트의 과거 버전에 있는 타입 선언에 문제가 있는 경우\n        → 과거 버전으로 돌아가서 패치 업데이트를 함\n      - 타입 선언의 패치 업데이트를 자주 하기 어렵다는 문제</span></code></pre></div>\n</li>\n<li>잘 작성된 타입 선언은 라이브러리를 올바르게 사용하는 방법에 도움이 되며 생산성을 크게 향상시킴</li>\n<li>라이브러리 공개 시, 타입 선언을 자체적으로 포함하는 것과 타입 정보만 분리하여 DefinitelyTyped에 공개하는 것의 장단점을 비교 해야 함</li>\n<li>라이브러리가 타입스크립트로 작성된 경우만 타입 선언을 라이브러리에 포함하는 것을 권장</li>\n</ol>\n<br>\n<h2 id=\"아이템-47-공개-api에-등장하는-모든-타입을-익스포트하기\" style=\"position:relative;\"><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-47-%EA%B3%B5%EA%B0%9C-api%EC%97%90-%EB%93%B1%EC%9E%A5%ED%95%98%EB%8A%94-%EB%AA%A8%EB%93%A0-%ED%83%80%EC%9E%85%EC%9D%84-%EC%9D%B5%EC%8A%A4%ED%8F%AC%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"아이템 47 공개 api에 등장하는 모든 타입을 익스포트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>아이템 47: 공개 API에 등장하는 모든 타입을 익스포트하기</h2>\n<ol>\n<li>\n<p>라이브러리 제작자는 프로젝트 초기에 타입 익스포트부터 작성해야 함</p>\n<ul>\n<li>\n<p>타입을 익스포트하지 않았을 경우</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// 해당 라이브러리 사용자는 SecretName 또는 SecretSanta 를 직접 임포트할 수 없고, getGift만 임포트할 수 있음</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SecretName</span> <span class=\"token punctuation\">{</span>\n  first<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  last<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SecretSanta</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> SecretName<span class=\"token punctuation\">;</span>\n  gift<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getGift</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> SecretName<span class=\"token punctuation\">,</span> gift<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> SecretSanta <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>Parameters와 ReturnType을 이용해 추출</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">MySanta</span> <span class=\"token operator\">=</span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> getGift<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SecretSanta</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">MyName</span> <span class=\"token operator\">=</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token keyword\">typeof</span> getGift<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SecretName</span></code></pre></div>\n<p>→ 사용자가 추출하기 전에 공개 메서드에 사용된 타입은 익스포트 지향</p>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://github.com/pagers-org/Effective-TypeScript\">이펙티브 타입스크립트 Study</a></li>\n<li><a href=\"http://www.yes24.com/Product/Goods/102124327\">이펙티브 타입스크립트 책</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-45-devdependencies%EC%97%90-ts%EC%99%80-types-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\">아이템 45: devDependencies에 TS와 @types 추가하기</a></li>\n<li><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-46-%ED%83%80%EC%9E%85-%EC%84%A0%EC%96%B8%EA%B3%BC-%EA%B4%80%EB%A0%A8%EB%90%9C-3%EA%B0%80%EC%A7%80-%EB%B2%84%EC%A0%84-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\">아이템 46: 타입 선언과 관련된 3가지 버전 이해하기</a></li>\n<li>\n<p><a href=\"#%EC%95%84%EC%9D%B4%ED%85%9C-47-%EA%B3%B5%EA%B0%9C-api%EC%97%90-%EB%93%B1%EC%9E%A5%ED%95%98%EB%8A%94-%EB%AA%A8%EB%93%A0-%ED%83%80%EC%9E%85%EC%9D%84-%EC%9D%B5%EC%8A%A4%ED%8F%AC%ED%8A%B8%ED%95%98%EA%B8%B0\">아이템 47: 공개 API에 등장하는 모든 타입을 익스포트하기</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"아이템 45: devDependencies에 TS와 @types 추가하기 npm의 의존성 구분 dependencies: 현재 프로젝트 실행 시 필수적인 라이브러리 devDependencies: 런타임에는 필요없는 라이브러리 peerDependencies: 런타임에 필요하긴 하지만, 의존성을 직접 관리하지 않는 라이브러리 TS는 개발 도구일 뿐이고 타입 정보는 런타임에 존재하지 않기 때문에, TS와 관련된 라이브러리는 일반적으로 devDependencies에 속함 TS 프로젝트에서 고려해야 할 의존성 TS 시스템 레벨로 설치하기보다는 devDependencies에 넣는 것을 권장\n→ npm install 시 팀원들 모두 항상 정확한 버전의 TS 설치 가능 대부분의 TS IDE와 빌드 도구는 devDependencies를 통해 설치된 타입스크립트의 버전을 인식할 수 있음 DefinitelyTyped에서 라이브러리에 대한 타입 정보를 얻을 수 있음 @types 라이브러리는 타입 정보만 …","frontmatter":{"date":"May 29, 2023","title":"Effective TypeScript 6장","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/effective-typescript-6/"}},"next":{"id":"1ef8ad64-5791-5960-bf4a-a2bcc78f5302","html":"<h2 id=\"한-주-회고\" style=\"position:relative;\"><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\" aria-label=\"한 주 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한 주 회고</h2>\n<p>새로운 장소에서 새로운 시작을 하게 되었습니다. 개인적으로 팀원들 모두 좋은 사람 같았습니다. 또한 자신의 업무에 대해 책임감을 가지고 누구보다 열심히 하는 모습을 보면서 저도 강한 동기를 얻었습니다.</p>\n<p>특히 새로운 도메인 분야에서 도전을 하는 만큼, 누군가에게 꼭 도움을 줄 수 있는 사람이 될 수 있도록 다짐을 해봅니다.</p>\n<p>그리고 팀 리더 분께서 타운홀에서 좋은 이야기를 해주셨는데 문득’피드백은 비싸다’라는 말이 떠올랐습니다.</p>\n<p>저는 성장하기 위해 꼭 필요한 것 중 하나는 ‘피드백’이라고 생각합니다.</p>\n<p>이렇게 ‘피드백’을 자유롭게 할 수 있는 조직에 있다는 것만으로도 너무나 감사하며, 자기 객관화 능력을 키워갈 수 있다고 확신했습니다. 왜냐하면 6개월, 1년 동안 자신이 한 업무가 팀 내 그리고 조직에 어떠한 영향을 주었는지 셀프 회고를 해보고, 나와 같이 일한 동료로부터 피드백을 받아 내가 생각한 나의 모습과 타인이 생각한 나의 모습을 비교하면서 나를 온전히 바라볼 수 있기 때문입니다.</p>\n<p>그래서 저는 앞으로 솔직하고 세세하게 근무 시간에 무엇을 했는지 적으면서 어떻게 하면 팀 그리고 회사에 도움을 줄 수 있는지 생각하고, 더 나아가 우리가 만들어 가고 있는 이 서비스가 다른 사람들에게 어떻게 기억되길 원하는지 끝임없이 팀원들과 고민하면서 만들어 가고 싶습니다.</p>\n<p>물론 아직 프론트엔드 개발자로서 채워가야 할 능력들이 많지만, 하나씩 차분히 채워가는 맛으로 이번 도전을 즐기고 싶습니다.</p>\n<p>이번 주도 수고하셨습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%9C-%EC%A3%BC-%ED%9A%8C%EA%B3%A0\">한 주 회고</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 27, 2023","title":"5월 4주 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-230527/"}},"prev":{"id":"4c7b0dfc-18c1-513b-bbad-b829fe0e27f9","html":"<h2 id=\"들어가기-앞서\" style=\"position:relative;\"><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\" aria-label=\"들어가기 앞서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>들어가기 앞서</h2>\n<blockquote>\n<p>재택근무를 하다보면, 개인 컴퓨터에 회사 Github 계정을 함께 사용하는 경우가 발생할 수 있습니다.</p>\n<p>이 때, 아무런 개인 컴퓨터에 아무런 설정을 하지 않는다면 회사 Private Repo를 Clone하는 과정에서 문제가 발생할 수 있습니다.</p>\n<p>저 또한, 이러한 문제를 해결하기 위해 시간을 많이 사용했습니다.</p>\n<p>그래서 이번 글을 통해 저 처럼 고생하시는 분들이 조금이나마 도움을 드리기위해 글을 작성했습니다.</p>\n</blockquote>\n<br>\n<h2 id=\"1ssh-계정-만들기\" style=\"position:relative;\"><a href=\"#1ssh-%EA%B3%84%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1ssh 계정 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.SSH 계정 만들기</h2>\n<p>먼저 최상위 폴더에 있는 ssh 폴더로 이동을 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">cd ~/.ssh</code></pre></div>\n<p>그리고 SSH Key를 생성하는 명령어를 실행합니다. 아래는 개인 계정, 회사 계정을 나누어서 SSH를 생성했습니다.</p>\n<p>아래 명령어를 실행하면 다양한 질문을 하는데 저는 그냥 Enter를 계속 눌러 진행했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">ssh-keygen -t rsa -C &quot;company@gmail.com&quot; -f &quot;github-company&quot;\nssh-keygen -t rsa -C &quot;personal@gmail.com&quot; -f &quot;github-personal&quot;</code></pre></div>\n<blockquote>\n<p>-C는 ssh 키를 식별하는 데 도움을 주는 명령어 입니다.</p>\n<p>-f는 ssh 키가 저장되는 파일 이름을 나타내는 명령어 입니다.</p>\n</blockquote>\n<p>아래의 명령어를 통해 제대로 SSH가 제대로 생성되었는지 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">ls - l 실행 하면 아래와 같이 파일을 확인할 수 있습니다.\n\ngithub-company\ngithub-company.pub\n\ngithub-personal\ngithub-personal.pub</code></pre></div>\n<blockquote>\n<p>.pub이라는 공개키와, 개인키가 생성이 되었습니다. 추후에 Github 계정에 공개키를 등록할 때, .pub을 등록해야 합니다.</p>\n</blockquote>\n<br>\n<h2 id=\"2-ssh-agent에-생성한-ssh를-등록하기\" style=\"position:relative;\"><a href=\"#2-ssh-agent%EC%97%90-%EC%83%9D%EC%84%B1%ED%95%9C-ssh%EB%A5%BC-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\" aria-label=\"2 ssh agent에 생성한 ssh를 등록하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. SSH Agent에 생성한 SSH를 등록하기</h2>\n<p>SSH Agent는 개인키의 비밀번호를 암호화 해 기억해두고 처음 한 번만 개인키 비밀번호를 입력하면 다음부터는 기억한 비밀번호를 이용하므로 사용자는 또\n비밀번호를 입력하지 않아도 됩니다.</p>\n<p>소켓(Socket)을 생성해서 원격 서버와 통신하기 때문에 비밀번호가 유출될 염려도 없습니다.\n그래서 SSH Agent에 위에서 생성한 SSH를 등록을 해야 합니다.</p>\n<p>아래의 명령어를 통해 SSH를 SSH Agent에 등록해봅시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">ssh-add -K ~/.ssh/github-company\nssh-add -K ~/.ssh/github-personal</code></pre></div>\n<blockquote>\n<p>-K 옵션을 사용하면 다음에 SSH를 사용할 때마다 개인 키의 암호를 다시 입력할 필요 없이 자동으로 키체인에서 암호를 가져와 사용할 수 있습니다.</p>\n</blockquote>\n<p>아래의 명령어를 통해 정상적으로 SSH-Agent에 등록되었는지 확인해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">ssh-add -l\n\ncompany@gmail.com(RSA)\npersonal@gmail.com(RSA)</code></pre></div>\n<br>\n<h2 id=\"3-github에-공개키-등록하기\" style=\"position:relative;\"><a href=\"#3-github%EC%97%90-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\" aria-label=\"3 github에 공개키 등록하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Github에 공개키 등록하기</h2>\n<p>아래의 명령어를 통해 우리가 생성한 공개키를 한 번에 복사 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">vim ~/.ssh/github-company.pub\nvim ~/.ssh/github-personal.pub\n\npbcopy &lt; ~/.ssh/github-company.pub\npbcopy &lt; ~/.ssh/github-personal.pub</code></pre></div>\n<p>이제 Githbub 사이트에 들어가 <b>Settings -> SSH and GPG keys -> New SSH key</b> 순서로 들어가 등록해줍니다.</p>\n<br>\n<h2 id=\"4-ssh-config-파일-설정-후-ssh-연결-확인\" style=\"position:relative;\"><a href=\"#4-ssh-config-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95-%ED%9B%84-ssh-%EC%97%B0%EA%B2%B0-%ED%99%95%EC%9D%B8\" aria-label=\"4 ssh config 파일 설정 후 ssh 연결 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. SSH config 파일 설정 후, SSH 연결 확인</h2>\n<p>SSH config 파일은 ~/.ssh 폴더 밑에 위치해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">cd ~/.ssh\n\ntouch config // config 파일을 만들어 줍니다.\n\nopen config // config 파일을 열어 안에 내용을 수정해보겠습니다.</code></pre></div>\n<p>아래와 같은 내용으로 config를 작성합니다. SSH 클라이언트 config 파일의 내용은 섹션으로 나눠져 있고, 섹션의 시작은 <code class=\"language-text\">Host</code>지시자로 시작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">#company account\nHost github.com-compnay\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/github-company\n\n#personal account\nHost github.com-personal\n    HostName github.com\n    User git\n    IdentityFile ~/.ssh/github-personal</code></pre></div>\n<ul>\n<li>Host: SSH 연결에 사용될 대표 이름입니다.</li>\n</ul>\n<p>실제로 SSH 연결이 잘 되었는지 아래의 명령어를 통해 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">ssh -T git@github.com-company\n\nssh -T git@github.com-personal\n\n정상적으로 연결되었다면 아래와 같은 문구가 나옵니다.\nHi {깃허브 설정된 userName} You&#39;ve successfully authenticated ...</code></pre></div>\n<br>\n<h2 id=\"5-ssh로-repo-clone-설정하기\" style=\"position:relative;\"><a href=\"#5-ssh%EB%A1%9C-repo-clone-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"5 ssh로 repo clone 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. SSH로 Repo Clone 설정하기</h2>\n<p>이제 Repo를 Clone할 때, HTTPS가 아닌, SSH로 Clone을 받아야 합니다.</p>\n<p>해당 Repo 주소를 복사하게 되면, SSH의 기본 경로는 <code class=\"language-text\">git@github.com:{github계정}/{리포지토리명.git}</code> 입니다.</p>\n<p>이 때, 내가 Clone하고자 하는 Repo가 회사 Repo(당연히 회사 Github 계정이겠죠?)이면 SSH 경로를 SSH Config에 설정한 것에 맞춰서 변경해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">git clone git@github.com-{company or personal}:{company or personal github user-name}/{repo-name}.git\n\ngit clone git@github.com-company:company/company-test.git</code></pre></div>\n<br>\n<h2 id=\"6-각-계정에-맞게-remote-추가하기\" style=\"position:relative;\"><a href=\"#6-%EA%B0%81-%EA%B3%84%EC%A0%95%EC%97%90-%EB%A7%9E%EA%B2%8C-remote-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"6 각 계정에 맞게 remote 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 각 계정에 맞게 Remote 추가하기.</h2>\n<p>우리가 위에서 설정한 Github 계정에 맞게 Push와 Commit을 하기 위해서는 Repo별로 config에 user.email과 user.name을 설정을 해야 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">git config user.email &quot;company@gmail.com&quot;\ngit config user.name &quot;company&quot;\n\ngit config user.email &quot;personal@gmail.com&quot;\ngit config user.name &quot;personal&quot;</code></pre></div>\n<p>그리고 remote 또는 upstream에 company or personal을 잘 구분해서 등록해야 합니다. 그래야 commit or push를 할 때, 해당 계정에 맞게 ssh를 매칭할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cli\"><pre class=\"language-cli\"><code class=\"language-cli\">git remote add origin git@github.com-personal:personal\n\ngit remote add origin git@github.com-company:company</code></pre></div>\n<br>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h2>\n<p>이번 글을 작성하면서 다시 한 번 도움을 주신 팀원분들에게 진심으로 감사의 말씀을 전하고 싶습니다. 처음 설정하는 과정이었는데, 침착하게 기다려 주시고 참고할 자료를 제공해 주셨으며, 제가 해결하지 못한 부분에 직접 나서서 도와주신 것에 대해 정말 감사드립니다. 그래서 이번 경험을 통해 과정을 다시 한 번 정리하고, 혹시나 저처럼 고민하고 고생하고 있는 분들에게 도움이 되고자 글을 작성했습니다. 만약 글을 읽으시면서 부족한 부분이 있다면 언제든지 말씀해주시면 감사하겠습니다.</p>\n<p>마지막으로, 어려운 문제에 직면했을 때 부족함을 자책하는 대신, 차분하게 문제를 최대한 단순화하여 해결 가능한 부분을 나열하고 최선을 다하는 태도가 중요하다는 사실을 깨달았습니다. 그래서 앞으로도 문제에 직면했을 때에는 좌절하는 대신에 심호흡을 하며 차분히 해결해 나아갈 수 있는 개발자로 성장하기 위해 노력하겠습니다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://devlog.jwgo.kr/2019/04/17/ssh-keygen-and-ssh-agent/\">SSH Agent 개념</a></li>\n<li><a href=\"https://www.irgroup.org/posts/github-%EC%BB%B4%ED%93%A8%ED%84%B0-%ED%95%9C%EB%8C%80%EB%A1%9C-%EC%97%AC%EB%9F%AC-%EA%B3%84%EC%A0%95-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/\">컴퓨터 한대로 github 여러 계정 사용하기 1</a></li>\n<li><a href=\"https://usingu.co.kr/frontend/git/%ED%95%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EC%97%90%EC%84%9C-github-%EA%B3%84%EC%A0%95-%EC%97%AC%EB%9F%AC%EA%B0%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/\">컴퓨터 한대로 github 여러 계정 사용하기 2</a></li>\n<li><a href=\"https://gist.github.com/rahularity/86da20fe3858e6b311de068201d279e3\">How To Work With Multiple Github Accounts on a single Machine</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">Generating a new SSH key and adding it to the ssh-agent</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%93%A4%EC%96%B4%EA%B0%80%EA%B8%B0-%EC%95%9E%EC%84%9C\">들어가기 앞서</a></li>\n<li><a href=\"#1ssh-%EA%B3%84%EC%A0%95-%EB%A7%8C%EB%93%A4%EA%B8%B0\">1.SSH 계정 만들기</a></li>\n<li><a href=\"#2-ssh-agent%EC%97%90-%EC%83%9D%EC%84%B1%ED%95%9C-ssh%EB%A5%BC-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\">2. SSH Agent에 생성한 SSH를 등록하기</a></li>\n<li><a href=\"#3-github%EC%97%90-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\">3. Github에 공개키 등록하기</a></li>\n<li><a href=\"#4-ssh-config-%ED%8C%8C%EC%9D%BC-%EC%84%A4%EC%A0%95-%ED%9B%84-ssh-%EC%97%B0%EA%B2%B0-%ED%99%95%EC%9D%B8\">4. SSH config 파일 설정 후, SSH 연결 확인</a></li>\n<li><a href=\"#5-ssh%EB%A1%9C-repo-clone-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">5. SSH로 Repo Clone 설정하기</a></li>\n<li><a href=\"#6-%EA%B0%81-%EA%B3%84%EC%A0%95%EC%97%90-%EB%A7%9E%EA%B2%8C-remote-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\">6. 각 계정에 맞게 Remote 추가하기.</a></li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">마무리</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 29, 2023","title":"컴퓨터 한 대로 여러 Github 계정 사용하기","categories":"TIL","author":"Kay","emoji":"👋"},"fields":{"slug":"/setting-multi-github-profile/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/effective-typescript-6/","nextSlug":"/write-log-230527/","prevSlug":"/setting-multi-github-profile/"}},"staticQueryHashes":["1073350324","2938748437"]}