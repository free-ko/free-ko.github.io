{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-Symbol-Function-2/","result":{"data":{"cur":{"id":"34ccad72-518f-5016-9e6a-3cefd71057ed","html":"<br>\n<h1 align=\"center\">\n  👋 toString(), description, valueOf(), getOwnPropertySymbols()\n</h1>\n<h2 id=\"1-tostring\" style=\"position:relative;\"><a href=\"#1-tostring\" aria-label=\"1 tostring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. toString()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">Symbol</code> 을 생성했던 형태를 문자열로 변환하여 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbo</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sym <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sym<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'ABC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'+로 연결 불가'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// Symbol(100)</span>\n<span class=\"token comment\">// Symbol(book)</span>\n<span class=\"token comment\">// +로 연결 불가</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">Symbol</code> 값은 반환되지 않음</li>\n<li><code class=\"language-text\">+</code> 로 문자열을 연결하면 <code class=\"language-text\">TypeError</code></li>\n<li><code class=\"language-text\">toString()</code>으로 변환하면 연결은 되지만 <code class=\"language-text\">Symbol</code> 값은 연결되지 않음</li>\n</ul>\n<br>\n<h2 id=\"2-description\" style=\"position:relative;\"><a href=\"#2-description\" aria-label=\"2 description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. description</h2>\n<ul>\n<li><code class=\"language-text\">Symbol.prototype.descripon</code></li>\n<li>Syntax, ES2019</li>\n<li><code class=\"language-text\">Symbol(\"설명\").description;</code></li>\n<li><code class=\"language-text\">Symbol.for(\"키\").description;</code></li>\n<li><code class=\"language-text\">Symbol.iterator.description;</code></li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Symbol</code> 오브젝트의 주석, 설명을 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sports'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sports</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// book</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Symbol<span class=\"token punctuation\">.</span>iterator<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol.iterator</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">Symbol()</code> 함수의 파라미터를 반환</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">toString()</code>과 차이</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol(book)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol()</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol()</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// book</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// book</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"\"</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"3-valueof\" style=\"position:relative;\"><a href=\"#3-valueof\" aria-label=\"3 valueof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. valueOf()</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">valueOf()</code> 가 프리미티브 값을 반환하지만 <code class=\"language-text\">Symbol</code> 은 값을 반환하지 않고 <code class=\"language-text\">Symbol</code> 을 생성한 형태를 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol(100)</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'200'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol(200)</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">Symbol.for()</code> 는 <code class=\"language-text\">for</code> 를 제외하고 반환</li>\n</ul>\n<br>\n<h2 id=\"4-getwonpropertysymbols\" style=\"position:relative;\"><a href=\"#4-getwonpropertysymbols\" aria-label=\"4 getwonpropertysymbols permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. getWonPropertySymbols()</h2>\n<ul>\n<li><code class=\"language-text\">Object</code>의 함수이지만 <code class=\"language-text\">Symbol</code>이 대상이므로 여기서 다룸</li>\n<li>\n<p>파라미터의 <code class=\"language-text\">Object</code>에서 <code class=\"language-text\">Symbol</code>만 배열로 반환, 다른 프로퍼티는 반환하지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> point<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'two'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getWonPropertyName</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">getWonPropertySymbols</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> sym <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sym<span class=\"token punctuation\">.</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>obj<span class=\"token punctuation\">[</span>sym<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. Object.getWonPropertyName(obj), obj에서 프로퍼티 이름을 배열로 반환함, Symbol은 반환하지 않음</span>\n<span class=\"token comment\">// 2. Object.getOwnPropertySymbols(obj) obj에서 Symbol만 배열로 반환 함</span>\n<span class=\"token comment\">// 3. for-of 문으로 전개 됨</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// [point]</span>\n<span class=\"token comment\">// one: 200</span>\n<span class=\"token comment\">// two: 300</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-tostring\">1. toString()</a></li>\n<li><a href=\"#3-valueof\">3. valueOf()</a></li>\n<li><a href=\"#4-getwonpropertysymbols\">4. getWonPropertySymbols()</a></li>\n</ul>\n</div>","excerpt":"1. toString()  을 생성했던 형태를 문자열로 변환하여 반환  값은 반환되지 않음  로 문자열을 연결하면  으로 변환하면 연결은 되지만  값은 연결되지 않음 2. description  Syntax, ES2019     오브젝트의 주석, 설명을 반환  함수의 파라미터를 반환 과 차이 3. valueOf()  가 프리미티브 값을 반환하지만  은 값을 반환하지 않고  을 생성한 형태를 반환  는  를 제외하고 반환 4. getWonPropertySymbols() 의 함수이지만 이 대상이므로 여기서 다룸 파라미터의 에서 만 배열로 반환, 다른 프로퍼티는 반환하지 않음 1. toString() 3. valueOf() 4. getWonPropertySymbols()","frontmatter":{"date":"October 31, 2021","title":"toString(), description, valueOf(), getOwnPropertySymbols()","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-Symbol-Function-2/"}},"next":{"id":"075b5dcc-5666-585c-b8e0-cfc8dd66b2fa","html":"<br>\n<h1 align=\"center\">\n  👋 Symbol 함수: for(), keyFor()\n</h1>\n<h2 id=\"1-for\" style=\"position:relative;\"><a href=\"#1-for\" aria-label=\"1 for permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. for()</h2>\n<ul>\n<li>\n<p>글로벌 <code class=\"language-text\">Symbol</code> 레지스트리에</p>\n<ul>\n<li><code class=\"language-text\">{key: value}</code> 형태로 <code class=\"language-text\">Symbol</code> 을 저장</li>\n<li><code class=\"language-text\">파라미터()</code>의 문자열이 <code class=\"language-text\">Key</code>가 되고 <code class=\"language-text\">Symbol()</code>로 생성한 값이 <code class=\"language-text\">value</code>가 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sports'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol(sports)</span>\n\n<span class=\"token comment\">// 1. {key: value} 형태로 one에 설정함, one이 글로벌 Symbol 레지스트리에 저장됨</span>\n<span class=\"token comment\">// 2. 파라미터인 'sports'가 key가 되고 Symbol()로 생성한 값이 value가 됨</span>\n<span class=\"token comment\">// 3. Symbol(\"sports\") 함수에서 파라미터가 주석이었던 것과는 차이가 있음</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">registry</code> : 등록, 기록</li>\n</ul>\n</li>\n<li>\n<p>글로벌 <code class=\"language-text\">Symbol</code> 레지스트리는 공유 영역</p>\n<ul>\n<li>다른 오브젝트에서도 사용 가능</li>\n<li>같은 <code class=\"language-text\">key</code>가 존재하면 등록된 값을 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sports\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> two <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sports\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one <span class=\"token operator\">===</span> two<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Symbol(true)</span>\n\n<span class=\"token comment\">// 1. one의 key 값과 two의 key값이 같으므로 Symbol 값을 생성하지 않고 one에 설정된 값을 사용</span>\n<span class=\"token comment\">// 2. one === two 그래서 비교 결과가 true가 나옴</span>\n<span class=\"token comment\">// 3. Symbol.for(true) true를 문자열로 반환하여 key 값으로 사용</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"2-keyfor\" style=\"position:relative;\"><a href=\"#2-keyfor\" aria-label=\"2 keyfor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. keyFor()</h2>\n<ul>\n<li>글로벌 <code class=\"language-text\">Symbol</code> 레지스트리에서 <code class=\"language-text\">Symbol</code>의 <code class=\"language-text\">key</code> 값을 구함</li>\n<li>\n<p>파라미터에 <code class=\"language-text\">Symbol.for()</code> 로 등록한 <code class=\"language-text\">Symbol</code> 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> one <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token string\">'book'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> six <span class=\"token operator\">=</span> Symbol<span class=\"token punctuation\">.</span><span class=\"token function\">keyFor</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>six<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// book</span>\n\n<span class=\"token comment\">// 1. const six = Symbol.keyFor(one); 파라미터에 글로벌 Symbol 레지스트리에 등록한 Symbol을 작성함</span>\n<span class=\"token comment\">// 2. one의 key 값인 \"book\"을 반환</span></code></pre></div>\n</li>\n<li><code class=\"language-text\">Symbol key</code> 값이 존재하면 <code class=\"language-text\">key</code> 값을 반환하고 존재하지 않으면 <code class=\"language-text\">Undefined</code> 반환</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-for\">1. for()</a></li>\n<li><a href=\"#2-keyfor\">2. keyFor()</a></li>\n</ul>\n</div>","frontmatter":{"date":"October 30, 2021","title":"Symbol 함수 - for(), keyFor()","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-Symbol-Function-1/"}},"prev":{"id":"66e51b4f-0cf1-55fe-b225-6e48d0e255ee","html":"<br>\n<h1 align=\"center\">\n  👋  Map 오브젝트 형태, new Map()\n</h1>\n<h2 id=\"1-map-오브젝트\" style=\"position:relative;\"><a href=\"#1-map-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8\" aria-label=\"1 map 오브젝트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Map 오브젝트</h2>\n<ul>\n<li>Map 오브젝트 <code class=\"language-text\">key</code>와 <code class=\"language-text\">value</code>의 컬렉션</li>\n<li>\n<p>Map 오브젝트 형태</p>\n<ul>\n<li><code class=\"language-text\">[key, value]</code> 형태처럼</li>\n<li>대괄호 안에 <code class=\"language-text\">key</code>와 <code class=\"language-text\">value</code>를 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> book<span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'오브젝트'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> keyValue <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>keyValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// [key, value]</span>\n<span class=\"token comment\">// [{book: 200}, 오브젝트]</span>\n<span class=\"token comment\">// [100, Number]</span></code></pre></div>\n<ul>\n<li>다양한 타입을 <code class=\"language-text\">key</code>로 사용할 수 있음</li>\n</ul>\n</li>\n<li>\n<p>Map의 key 처리</p>\n<ul>\n<li><code class=\"language-text\">for-of</code> 문에서 작성한 순서대로 읽혀짐</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-new-map\" style=\"position:relative;\"><a href=\"#2-new-map\" aria-label=\"2 new map permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. new Map()</h2>\n<ul>\n<li>\n<p>Map 인스턴스를 생성하여 반환</p>\n<ul>\n<li>파라미터에 이터러블 오브젝트 작성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {}</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// object</span>\n\n<span class=\"token comment\">// 1. 파라미터를 배열 안에 배열로 작성함 대괄호 []가 2개임</span>\n<span class=\"token comment\">// 2. 100이 key이고 \"Number\"가 Value임</span>\n<span class=\"token comment\">// 3. new 연산자를 사용하지 않으면 TypeError</span>\n<span class=\"token comment\">// 4. 파라미터를 작성하지 않아도 됨</span>\n<span class=\"token comment\">// 5. 인스턴스를 생성하므로 타입은 object</span></code></pre></div>\n<ul>\n<li>Same-Value-Zero 비교 알고리즘</li>\n<li>\n<p>key 값을 비교</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Number'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'String'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. 100과 '100'은 타입이 다름</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// 100 : Number</span>\n<span class=\"token comment\">// 100 : String</span></code></pre></div>\n</li>\n<li>\n<p>key 값이 같으면 Value가 대체됨</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'첫 번째'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'두 번째'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. key 값이 타입까지 같으면 value가 대체됨</span>\n\n<span class=\"token comment\">// 실행 결과</span>\n<span class=\"token comment\">// 100 : 두 번째</span></code></pre></div>\n</li>\n<li>잘못 작성한 형태</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">og</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[[one, 1]]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> five<span class=\"token operator\">:</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span> <span class=\"token keyword\">of</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>key<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>value<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1. new Map([\"one\", 1]) 대괄호 2개를 작성해야 함</span>\n<span class=\"token comment\">// 2. new Map([{five: 5}]) key만 작성하면, 에러가 발생하지 않지만 key와 value에 undefined가 설정됨</span>\n\n<span class=\"token comment\">// 실행결과</span>\n<span class=\"token comment\">// [[one, 1]]</span>\n<span class=\"token comment\">// undefined : undefined</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1-map-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8\">1. Map 오브젝트</a></li>\n<li><a href=\"#2-new-map\">2. new Map()</a></li>\n</ul>\n</div>","frontmatter":{"date":"November 01, 2021","title":"Map 오브젝트 형태, new Map()","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-Map-Object-1/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-Symbol-Function-2/","nextSlug":"/study-js-es6-Symbol-Function-1/","prevSlug":"/study-js-es6-Map-Object-1/"}},"staticQueryHashes":["1073350324","2938748437"]}