{"componentChunkName":"component---src-templates-blog-template-js","path":"/write-log-240120/","result":{"data":{"cur":{"id":"eec4a994-ae90-500f-8518-8ca07e5e9e2d","html":"<h2 id=\"회고\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EA%B3%A0\" aria-label=\"회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회고</h2>\n<h3 id=\"1-업무-회고\" style=\"position:relative;\"><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\" aria-label=\"1 업무 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 업무 회고</h3>\n<ul>\n<li>new FileReader를 통해서 업로드한 이미지를 Preview로 사용자에게 보여줄 수 있음.</li>\n<li>의사소통을 잘 하기 위해서는 현 상황에 대해 정확하게 이해를 바탕으로 의사소통을 해야 한다. 그래야 다른 팀원분들에게 혼란을 주지 않을 수 있다. 또한 빠르게 일을 마무리할려고 이해가 되지 않는데, 무조건적으로 책임을 짓는 행위도 조심해야 한다.</li>\n<li>\n<p>네트워크 SSH, HTTP, HTTPS 정리</p>\n<ul>\n<li>\n<p>SSH (Secure Shell)</p>\n<ul>\n<li>목적: 원격으로 서버나 다른 컴퓨터에 안전하게 접속하고, 명령을 실행하기 위한 프로토콜</li>\n<li>특징: 암호화를 사용하여 네트워크 상의 데이터를 보호. 이를 통해 사용자 인증 정보 및 전송되는 데이터가 안전하게 유지됨</li>\n<li>사용 예: 서버 관리, 파일 전송, 네트워크 서비스 등에 사용</li>\n</ul>\n</li>\n<li>\n<p>HTTP (Hypertext Transfer Protocol)</p>\n<ul>\n<li>목적: 웹 서버와 클라이언트 간에 문서를 교환하기 위한 프로토콜</li>\n<li>특징: 텍스트, 이미지, 비디오 등 다양한 형태의 데이터를 전송할 수 있으며, 주로 웹 페이지의 내용을 브라우저로 전송하는 데 사용.</li>\n<li>주의점: 암호화되지 않아 데이터가 노출될 위험 존재</li>\n</ul>\n</li>\n<li>\n<p>HTTPS (HTTP Secure)</p>\n<ul>\n<li>목적: HTTP의 보안 버전으로, 웹 서버와 클라이언트 간의 안전한 통신을 보장하기 위한 프로토콜</li>\n<li>특징: SSL/TLS 암호화를 통해 데이터를 보호. 이로 인해 개인 정보, 금융 정보 등 중요한 데이터가 안전하게 전송됨</li>\n<li>사용 예: 온라인 쇼핑, 인터넷 뱅킹, 개인 정보를 다루는 웹 사이트 등에서 주로 사용됨</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>media-query와 userAgent의 사용 목적 차이(PC일 때 무조건 Dialog를 띄우는 로직을 media-query로 작성하고 있어, 다른 방법을 모색하는 중에 userAgnet를 발견)</p>\n<ul>\n<li>media-query: 디스플레이어 환경에 초점을 맞춘 스타일링에 사용됨</li>\n<li>userAgent: 사용자의 브라우저나 운영체제 등의 환경에 따른 기능적인 대응을 위해 사용됨</li>\n</ul>\n</li>\n<li>\n<p>Content-Type의 종류</p>\n<ul>\n<li>\n<p>application/x-www-form-urlencoded</p>\n<ul>\n<li>이 콘텐츠 유형은 HTML 폼이 서버로 데이터를 전송할 때 주로 사용.</li>\n<li>데이터는 key=value 쌍으로 인코딩되며, 여러 쌍은 <code class=\"language-text\">&amp;</code> 문자로 구분됨 ex) name=John&#x26;age=30</li>\n<li>이 인코딩 방식은 URL에 쿼리 문자열을 넣는 방식과 유사</li>\n<li>간단한 평문 데이터를 전송할 때 주로 사용되지만, JSON처럼 복잡한 데이터 구조를 표현하는 데는 제한적</li>\n</ul>\n</li>\n<li>\n<p>application/json</p>\n<ul>\n<li>이 콘텐츠 유형은 데이터를 JSON 형식으로 전송할 때 사용됨</li>\n<li>JSON 형식은 자바스크립트 객체를 표현하는 표준 텍스트 포맷으로, { “key”: “value” }와 같이 표현됨</li>\n<li>JSON은 중첩된 객체와 배열을 포함할 수 있어, 복잡한 데이터 구조를 효율적으로 표현하고 전송할 수 있음</li>\n<li>웹 API와의 통신에서 많이 사용되며, 현대 웹 개발에서 표준적인 데이터 교환 형식으로 널리 채택되고 있음</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Grant-Type(OAuth 2.0 인증 프로세스에서 사용되는 개념으로, 어떤 방식으로 토큰을 발급받을지를 정의합)의 종류</p>\n<ul>\n<li>\n<p>Authorization Code (인가 코드)</p>\n<ul>\n<li>주로 서버 측 애플리케이션에서 사용됨</li>\n<li>사용자가 먼저 서비스 제공자에게 접근 권한을 부여하고, 이후에 이 권한을 증명하는 인가 코드를 받음. 이 코드를 사용해 애플리케이션이 액세스 토큰을 요청함</li>\n<li>보안성이 높은 방식. 사용자의 인증 정보는 클라이언트와 서비스 제공자 간에만 공유되며, 인가 코드 자체는 사용 후 무효화됨</li>\n</ul>\n</li>\n<li>\n<p>Refresh Token (갱신 토큰)</p>\n<ul>\n<li>이미 인증을 받아 액세스 토큰을 발급받은 상태에서 추가적인 인증 없이 토큰을 갱신할 때 사용됨</li>\n<li>초기 인증 시 발급된 액세스 토큰의 유효 시간이 만료되었을 때, 이 갱신 토큰을 사용해 새로운 액세스 토큰을 요청함</li>\n<li>사용자가 자주 로그인하는 번거로움 없이, 서비스에 지속적으로 접근할 수 있게 해줌</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br>\n<h3 id=\"2-일상-회고\" style=\"position:relative;\"><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\" aria-label=\"2 일상 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 일상 회고</h3>\n<p>일을하면서 나도모르게 마음이 급해져서 스스로 이슈에 대해 정확하게 이해하지 않고 넘어갈려고 말이 먼저 나올 때가 자주있었다. 그런데 이 부분은 나뿐만아니라, 동료분들과 의사소통을 할 때 매우 안 좋은 영향을 끼친다는 사실을 다시 한 번 깨닫게 되었다. 어쩌면 일 뿐만이 아니라 내 삶을 돌아보았을 때, 정확하게 이해 하고 행동하지 않아서 일을 하면서 나온게 아닐까 되돌아 보게 되었다. 이해를 바탕으로 먼저는 내 삶을 바라보고 그 다음 누군가과 협력을 할 때, 정확학 의사소통을 위해서 이해를 바탕으로 하는 연습과 의식적으로 인지하면서 행동해야 겠다.</p>\n<p>그리고 실수를 할 때, 스스로 회고하는 태도는 좋지만 나도 모르게 스스로 자괴감에 빠져 멘탈이 나가는 경우가 종종 있는 것 같다. 그럴 때마다 글로써 상황과 해결방안을 정리해보고 이것도 안되면 가벼운 산책을 하거나 정말로 힘들면 친한 주변 사람이나 동료분들에게 객관적인 피드백을 통해 나아졌던 것 같다.</p>\n<p>최근 동료로 부터 받은 피드백 중 스스로 일을 못한다고 생각이 들 때면 1년, 3년 뒤에 그 때가서 다시 생각하고 지금은 배우는 과정이니깐 당연한 것이라고 말씀해주셨다. 마지막으로 나와 타인을 비교하지 말고 스스로 자신만의 길을 한 걸음씩 가는 것에 집중하라 피드백을 주셨다.</p>\n<p>위와 같은 피드백을 듣고 곱씹을 때마다 어려우면서도 쉬운 것 같다는 생각을 한다.</p>\n<p>마지막으로 하루 중에 가장 많은 시간을 투자하는 ‘일’을 내 삶과 연결 짓고 어떻게 하면 내 삶에 조금이나마 도움을 줄 수 있는 시간으로 바꿀 수 있는 지 고민을 해보고 있다. 이것도 쉽지 않은 것 같다. 막상 이런 생각을 할 때마다 ‘내가 정말 원하는게 무엇일까?‘라는 질문에 대답도 못해서 고민의 해결에 도달하지 않고 뫼비우스띠 처럼 계속 제 자리에 멈춰 고민만 하는 것 같다. 그래도 안하는 것 보다는 하는게 낫다는 생각을 해서 여전히 지금도 주어진 하루를 어떻게 하면 내 삶에 가치있는 시간으로 바꿀 수 있는지를 계속 고민을 하는 것 같다.</p>\n<p>갈 길은 멀지만 그래도 길을 걷고 있는 사실에 감사함을 느낀다.</p>\n<p>이번 한 주도 고생했다.</p>\n<br>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/FileReader\">File Reader</a></li>\n<li><a href=\"https://mantine.dev/hooks/use-os/\">Mantine이 제공하는 OS를 판별하는 Hooks</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%9A%8C%EA%B3%A0\">회고</a></p>\n<ul>\n<li><a href=\"#1-%EC%97%85%EB%AC%B4-%ED%9A%8C%EA%B3%A0\">1. 업무 회고</a></li>\n<li><a href=\"#2-%EC%9D%BC%EC%83%81-%ED%9A%8C%EA%B3%A0\">2. 일상 회고</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"회고 1. 업무 회고 new FileReader를 통해서 업로드한 이미지를 Preview로 사용자에게 보여줄 수 있음. 의사소통을 잘 하기 위해서는 현 상황에 대해 정확하게 이해를 바탕으로 의사소통을 해야 한다. 그래야 다른 팀원분들에게 혼란을 주지 않을 수 있다. 또한 빠르게 일을 마무리할려고 이해가 되지 않는데, 무조건적으로 책임을 짓는 행위도 조심해야 한다. 네트워크 SSH, HTTP, HTTPS 정리 SSH (Secure Shell) 목적: 원격으로 서버나 다른 컴퓨터에 안전하게 접속하고, 명령을 실행하기 위한 프로토콜 특징: 암호화를 사용하여 네트워크 상의 데이터를 보호. 이를 통해 사용자 인증 정보 및 전송되는 데이터가 안전하게 유지됨 사용 예: 서버 관리, 파일 전송, 네트워크 서비스 등에 사용 HTTP (Hypertext Transfer Protocol) 목적: 웹 서버와 클라이언트 간에 문서를 교환하기 위한 프로토콜 특징: 텍스트, 이미지, 비디오 등 다양한 형태의…","frontmatter":{"date":"January 20, 2024","title":"2024년 1월 3주차 회고","categories":"Log","author":"Kay","emoji":"👋"},"fields":{"slug":"/write-log-240120/"}},"next":{"id":"a3c1dc5b-2caa-55a1-91b3-5c86c561d073","html":"<h2 id=\"-webpack\" style=\"position:relative;\"><a href=\"#-webpack\" aria-label=\" webpack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ Webpack</h2>\n<ul>\n<li>여러 개의 entry point로 의존성 그래프를 빌드하여, 각 모듈을 하나 이상의 모듈로 합침.</li>\n<li>JS 이외 파일(CSS, 애셋 파일 등) 처리 시 loader 필요</li>\n<li>parcel, rollup보다 code splitting 안전성 높음</li>\n<li>webpack-dev-server 지원 (live-reload 지원)</li>\n<li>가장 역사가 깊으며, 레퍼런스가 많고 안정적이다</li>\n<li>\n<p>tree-shaking을 ES6 모듈에서만 지원하기 때문에 SideEffects 항목 별도 기재 필요</p>\n<ul>\n<li>{ sideEffects: false } 를 표시하여 사용하지 않는 export는 제거해도 괜찮음을 webpack에게 알려줌</li>\n<li>즉 side effect가 발생해도, 해당 구문을 사용하지 않는다면 제거함</li>\n</ul>\n</li>\n<li>많은 서드파티를 필요로 하는 복잡한 애플리케이션 임</li>\n</ul>\n<br>\n<h2 id=\"-parcel\" style=\"position:relative;\"><a href=\"#-parcel\" aria-label=\" parcel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ Parcel</h2>\n<ul>\n<li>zero-configuration</li>\n<li>\n<p>빠른 빌드 속도</p>\n<ul>\n<li>parcel의 JS 컴파일러, CSS transformer, sourcemap은 성능을 위해 Rust로 작성되었으ㅁ</li>\n<li>parcel의 JS 컴파일러는 SWC를 기반으로 트리셰이킹, 핫-리로딩 등을 지원</li>\n<li>SWC는 Rust 기반</li>\n<li>ES6 및 CommonJS 모듈 모두에 대해 tree-shaking을 지원</li>\n<li>워커 쓰레드를 사용한 병렬 빌드</li>\n<li>캐싱을 사용한 빠른 빌드 속도</li>\n<li>모든 것은 캐시됨(transformation, dependency resolution, bundling, optimizing 등)</li>\n<li>코드가 바뀌면 부분적으로 캐시를 무효화. → webpack보다 최대 20배 빠름 (캐시 사용 시)</li>\n</ul>\n</li>\n<li>\n<p>플러그인 없이 JS, CSS, HTML, 파일 애셋, 그 외 많은 것들에 대한 지원을 기본으로 제공</p>\n<ul>\n<li>JS 이외 파일 처리 시에도 별도의 loader 불필요</li>\n<li>앱 진입을 위한 HTML을 직접 읽을 수 있음\n-0 JS 엔트리포인트를 지정할 필요가 없음</li>\n</ul>\n</li>\n<li>\n<p>필요하다면 Babel, PostCSS, PostHTML같은 트랜스파일러들을 기본으로 지원</p>\n<ul>\n<li>.babelrc, .postcssrc 등의 파일을 발견하면 자동으로 변환(node_modules까지도)</li>\n</ul>\n</li>\n<li>\n<p>동적 import 문을 사용해서 output 번들을 분할 할 수 있음</p>\n<ul>\n<li>이를 통해 초기 로드시 필요한 것들만 로드할 수 있음</li>\n<li>dev에서는, 브라우저에서 요청이 있을 때까지 번들링을 지연할 수 있음</li>\n<li>실제 필요한 페이지만 로드하며, 적절하게 code split 시 dev server 실행 시간을 줄여줌</li>\n</ul>\n</li>\n<li>\n<p>HMR 기본 지원</p>\n<ul>\n<li>React, Vue 사용 시에도 fast refresh 가능</li>\n</ul>\n</li>\n<li>dev server 기본 제공</li>\n<li>\n<p>프로덕션 자동 최적화</p>\n<ul>\n<li>tree shaking: 동적 모듈 import, 공용 모듈, CSS 모듈에 대해서도 적용됨</li>\n<li>최소화 및 난독화: JS, CSS, HTML, SVG minifier를 제공</li>\n<li>이미지 최적화 지원</li>\n</ul>\n</li>\n<li>\n<p>코드 스플리팅</p>\n<ul>\n<li>앱의 여러 파트에서 동일한 모듈에 의존하고 있다면, 해당 모듈을 자동으로 별도의 번들로 분리해줌</li>\n<li>CSS도 마찬가지로 지원</li>\n</ul>\n</li>\n<li>모든 output 파일에 대해 content hash를 제공함</li>\n<li>브라우저 캐시에 유리</li>\n</ul>\n<br>\n<h2 id=\"-rollup\" style=\"position:relative;\"><a href=\"#-rollup\" aria-label=\" rollup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ Rollup</h2>\n<ul>\n<li>ES6 모듈(ESM) 형식으로 빌드 결과물을 생성함. (webpack은 only CommonJS 형태만 가능)</li>\n<li>\n<p>여러 개의 모듈을 하나의 단일 모듈로 합쳐서 코드를 최적화함</p>\n<ul>\n<li>진입점을 다르게 설정하여 번들링 가능</li>\n<li>코드들을 동일한 수준으로 호이스팅 한 후 한 번에 번들링을 진행</li>\n<li>code splitting에 강점 (중복 제거에 특화)이 있음</li>\n<li>cf) webpack의 ModuleConcatenationPlugin이 비슷한 역할</li>\n</ul>\n</li>\n<li>\n<p>트리셰이킹 기본 지원</p>\n<ul>\n<li>JS 이외 파일 처리 시 플러그인 사용코드를 정적으로 분석하여 미사용 코드는 제외함</li>\n</ul>\n</li>\n<li>데브서버 지원, 하지만 live-reload를 위해서는 추가 플러그인 설치가 필요함</li>\n<li>HMR: 플러그인으로 지원</li>\n<li>파일의 해시 캐스캐이딩(hash cascading; 하나의 파일의 해시가 바뀌면 그것을 참조한 파일의 해시도 알아서 바뀜) 이 약함</li>\n<li>CommonJS 종속성이 많음</li>\n<li>서드파티 라이브러리 통합이 어려움</li>\n</ul>\n<br>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-webpack\">✅ Webpack</a></li>\n<li><a href=\"#-parcel\">✅ Parcel</a></li>\n<li><a href=\"#-rollup\">✅ Rollup</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 18, 2024","title":"JS 번들러 비교","categories":"Study","author":"Kay","emoji":"👋"},"fields":{"slug":"/compare-js-bundlers/"}},"prev":{"id":"4423566c-7740-59ce-970e-a7c1522a7538","html":"<h1 id=\"글또-9기-시작\" style=\"position:relative;\"><a href=\"#%EA%B8%80%EB%98%90-9%EA%B8%B0-%EC%8B%9C%EC%9E%91\" aria-label=\"글또 9기 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>글또 9기 시작</h1>\n<p>저번 글또 8기를 하면서 느낀점은, 너무나도 많은 개발자 분들께서 진심으로 글을 매주 작성하시는 모습을 통해 많은 동기부여와 좋은 컨텐츠를 볼 수 있었고 또한, 수많은 고민들을 통해 나 혼자만 힘들게 아니다라는 사실을 알게 되었고 무엇보다 글을 쓰는 습관을 조금은 드릴 수 있어서 너무나 좋았다.</p>\n<p>단 한가지 아쉬운점을 말하라고 한다면, 적극적으로 외부 활동 참여와 다양한 사람들과 커피챗을 해보지 못한 것이였다.\n다양한 사람들이 있는 만큼 다양한 경험을 들을 수 있는 기회들이 분명있었는데, 단순히 일 때문에 바쁘다는 핑계로 스스로 합리화를 해버렸던 것 같다.</p>\n<p>그래서 이번 기수에는 적극적으로 다양한 직군의 개발자 분들과 커피챗 신청과 외부 행사에 참여해볼 생각이다.</p>\n<p>마지막으로 다른 분들이 어떤식으로 글을 전개해 나아가는지 흐름을 파악해서 나의 글쓰기 실력을 한층 더 높일 수 있는 시간을 가지고 싶다.</p>\n<br/>\n<h3 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h3>\n<p><a href=\"https://www.notion.so/ac5b18a482fb4df497d4e8257ad4d516\">글또 소개</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 02, 2024","title":"글또 9기 - O.T","categories":"Study","author":"Kay","emoji":"✍️"},"fields":{"slug":"/study-geulddo-9-OT/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/write-log-240120/","nextSlug":"/compare-js-bundlers/","prevSlug":"/study-geulddo-9-OT/"}},"staticQueryHashes":["1073350324","2938748437"]}