{"componentChunkName":"component---src-templates-blog-template-js","path":"/study-js-es6-module-2/","result":{"data":{"cur":{"id":"1ca569c8-c1c7-53b9-96ee-10ce3c1c551f","html":"<br>\n<h1 align=\"center\">\n  👋  Module - 스코프, export 값 유지, this 참조\n</h1>\n<br>\n<h2 id=\"1-module-스코프\" style=\"position:relative;\"><a href=\"#1-module-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"1 module 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. module 스코프</h2>\n<ul>\n<li><code class=\"language-text\">Module</code> 코드는 <code class=\"language-text\">\"use strict\"</code> 에서 실행됨</li>\n<li>\n<p>다른 파일에서 모듈의 변수/함수 사용 불가</p>\n<ul>\n<li>별도의 스코프를 갖기 때문</li>\n</ul>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">/*\n\t&lt;script type = &quot;module&quot; src=&quot;./access_export.mjs&quot;&gt;&lt;/script&gt;\n\texport function point(){};\n\n\texport 모듈 파일을 &lt;script&gt;에 작성하지 않지만 악세스 불가를 설명하기 위해 작성함\n*/\n\nlet result;\n\ntry {\n  result = point;\n} catch {\n  result = &#39;모듈에서 사용 불가&#39;;\n}\n\ndocumnet.getElementById(&#39;result&#39;).innerHTML = result;</code>\n        </deckgo-highlight-code>\n<ul>\n<li><code class=\"language-text\">&lt;script type = \"module\">&lt;/script></code> 에 <code class=\"language-text\">type=\"module\"</code> 을 작성하면 별도의 스코프를 갖음</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">window</code> 를 사용하여 공유할 수 있지만, 이름이 같으면 대체될 수 있음</p>\n<ul>\n<li>상황에 따라 어쩔 수 없이 사용할 때는 이름이 중복되지 않도록 해야 함</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-export-값-유지\" style=\"position:relative;\"><a href=\"#2-export-%EA%B0%92-%EC%9C%A0%EC%A7%80\" aria-label=\"2 export 값 유지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. export 값 유지</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">import</code> 한 <code class=\"language-text\">Module</code> 을 다시 <code class=\"language-text\">import</code> 하더라도 값이 대체되지 않고 이전에 <code class=\"language-text\">import</code>한 값이 유지 됨</p>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">// kee_export.mjs\nexport const point = {\nvalue: &#39;초깃값&#39;,\n};\n\n// keep_one.mjs\nimport { point } from &#39;./keep_export.mjs&#39;;\ndocumnet.getElementById(&#39;one&#39;).innerHTML = &#39;1. &#39; + point.value;\n\npoint.value = &#39;값 변경&#39;;\n\n// keep_two.mjs\nimport { point } from &#39;./keep_export.mjs&#39;;\ndocumnet.getElementById(&#39;two&#39;).innerHTML = &#39;2. &#39; + point.value;\n\n// 실행 결과\n// 1. 초깃값\n// 2. 값 변경</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>브라우저에서 실행되는 형태</p>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">// keep_one.mjs\n\n/*\n\tkee_export.mjs\n\texport const point = {\n\t\tvalue: &quot;초깃값&quot;\n\t};\n*/\n\nimport { point } from &#39;./keep_export.mjs&#39;;\ndocumnet.getElementById(&#39;one&#39;).innerHTML = &#39;1. &#39; + point.value;\n\n// {point}의 value 프로퍼티 값을 변경함\npoint.value = &#39;값 변경&#39;;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">// keep_two.mjs\n\n/*\n\tkee_export.mjs\n\texport const point = {\n\t\tvalue: &quot;초깃값&quot;\n\t};\n\n\timport {point} from &quot;./keep_export.mjs&quot;;\n\tdocumnet.getElementById(&quot;one&quot;).innerHTML = &quot;1. &quot; + point.value;\n\t\n\t// {point}의 value 프로퍼티 값을 변경함\n\tpoint.value = &quot;값 변경&quot;;\n*/\n\nimport { point } from &#39;./keep_export.mjs&#39;;\n// {point}.value 값이 &quot;초깃값&quot;으로 설정되지 않고\n// &quot;값 변경&quot;을 유지 함\n\ndocumnet.getElementById(&#39;two&#39;).innerHTML = &#39;2. &#39; + point.value;</code>\n        </deckgo-highlight-code>\n</li>\n</ul>\n<br>\n<h2 id=\"3-this-참조\" style=\"position:relative;\"><a href=\"#3-this-%EC%B0%B8%EC%A1%B0\" aria-label=\"3 this 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. this 참조</h2>\n<ul>\n<li>글로벌 오브젝트에서 <code class=\"language-text\">this</code> 는 <code class=\"language-text\">window</code> 오브젝트를 참조 함</li>\n<li><code class=\"language-text\">&lt;script type=\"module\"></code> 로 작성된 파일에서 <code class=\"language-text\">this</code> 값은 <code class=\"language-text\">undefined</code> 임</li>\n<li>\n<p><code class=\"language-text\">Module</code>과 <code class=\"language-text\">Global</code>에서 <code class=\"language-text\">this</code></p>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">// this_js.js\n\nconst win = this;\n\ndocument.getElementById(&#39;js&#39;).innerHTML = this.Array.name;</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"tsx\"  >\n          <code slot=\"code\">// this_import.mjs\n\n/*\n\tthis.export.mjs\n\texport const point = {\n\t\tvalue: &quot;초깃값&quot;\n\t};\n\n\t&lt;script type=&quot;module&quot; src=&quot;./this_import.mjs&quot;&gt;&lt;/script&gt;\n*/\n\nimport { point } from &#39;./this_export.mjs&#39;;\n\n// type=&quot;module&quot; 파일에서 this는 undefined임\ndocument.getElementById(&#39;one&#39;).innerHTML = this;</code>\n        </deckgo-highlight-code>\n</li>\n</ul>\n<deckgo-highlight-code language=\"toc\"  >\n          <code slot=\"code\"></code>\n        </deckgo-highlight-code>","excerpt":"1. module 스코프  코드는  에서 실행됨 다른 파일에서 모듈의 변수/함수 사용 불가 별도의 스코프를 갖기 때문  에  을 작성하면 별도의 스코프를 갖음  를 사용하여 공유할 수 있지만, 이름이 같으면 대체될 수 있음 상황에 따라 어쩔 수 없이 사용할 때는 이름이 중복되지 않도록 해야 함 2. export 값 유지  한  을 다시  하더라도 값이 대체되지 않고 이전에 한 값이 유지 됨 브라우저에서 실행되는 형태 3. this 참조 글로벌 오브젝트에서  는  오브젝트를 참조 함  로 작성된 파일에서  값은  임 과 에서","frontmatter":{"date":"December 13, 2021","title":"Module - 스코프, export 값 유지, this 참조","categories":"JS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-js-es6-module-2/"}},"next":{"id":"ee7ffa0f-be23-5768-a134-4cabd5d1b677","html":"<br>\n<h1 align=\"center\">\n  👋  HTTP(HyperText Transfer Protocol)\n</h1>\n<br>\n<h2 id=\"1-모든-것이-http--http-메시지에-모든-것을-전송\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EB%93%A0-%EA%B2%83%EC%9D%B4-http--http-%EB%A9%94%EC%8B%9C%EC%A7%80%EC%97%90-%EB%AA%A8%EB%93%A0-%EA%B2%83%EC%9D%84-%EC%A0%84%EC%86%A1\" aria-label=\"1 모든 것이 http  http 메시지에 모든 것을 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모든 것이 HTTP : HTTP 메시지에 모든 것을 전송</h2>\n<ul>\n<li>HTML, TEXT</li>\n<li>Image, 음성, 영상, 파일</li>\n<li>JSON, XML(API)</li>\n<li>거의 모든 형태의 데이터 전송 가능</li>\n<li>서버간에 데이터를 주고 받을 때도 대부분 HTTP 사용</li>\n</ul>\n<br>\n<h2 id=\"2-http-역사\" style=\"position:relative;\"><a href=\"#2-http-%EC%97%AD%EC%82%AC\" aria-label=\"2 http 역사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. HTTP 역사</h2>\n<ul>\n<li>HTTp/0.9 1991년 : GET 메서드만 지원, HTTP 헤더 X</li>\n<li>HTTP/1.0 1995년 : 메서드, 헤더 추가</li>\n<li><strong>HTTP/1.1 1997년 : 가장 많이 사용, 우리에게 가장 중요한 버전</strong></li>\n<li>HTTP/2 2015년 : 성능 개선</li>\n<li>HTTP/3 진행중 : TCP 대신 UDP 사용, 성능 개선</li>\n</ul>\n<br>\n<h2 id=\"3-기반-프로토콜\" style=\"position:relative;\"><a href=\"#3-%EA%B8%B0%EB%B0%98-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C\" aria-label=\"3 기반 프로토콜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 기반 프로토콜</h2>\n<ul>\n<li>TCP: HTTP/1.1, HTTP</li>\n<li>UDP: HTTP/3</li>\n<li>점점 HTTP/2, HTTP/3도 점점 증가</li>\n</ul>\n<br>\n<h2 id=\"4-http-특징\" style=\"position:relative;\"><a href=\"#4-http-%ED%8A%B9%EC%A7%95\" aria-label=\"4 http 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. HTTP 특징</h2>\n<ul>\n<li>클라이언트 서버 구조</li>\n<li>무상태 프로토콜, 비연결성</li>\n<li>HTTP 메시지</li>\n<li>단순함, 확장 가능</li>\n</ul>\n<deckgo-highlight-code language=\"toc\"  >\n          <code slot=\"code\"></code>\n        </deckgo-highlight-code>","frontmatter":{"date":"December 13, 2021","title":"HTTP - 3.HTTP 기본(1)","categories":"CS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-cs-HTTP-3/"}},"prev":{"id":"406cead8-67af-56d6-8d47-214c73242562","html":"<br>\n<h1 align=\"center\">\n  👋  HTTP 특징\n</h1>\n<br>\n<h2 id=\"1-클라이언트-서버-구조\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%A1%B0\" aria-label=\"1 클라이언트 서버 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클라이언트 서버 구조</h2>\n<ul>\n<li><code class=\"language-text\">Request - Response</code> 구조</li>\n<li>클라이언트는 서버에 요청을 보내고, 응답을 대기</li>\n<li>\n<p>서버가 요청에 대한 결과를 만들어서 응답</p>\n<ul>\n<li>각각 역할을 나뉘었다는 것이 포인트</li>\n<li>클라이언트는 UI/UX에 집중하고, 서버는 비즈니스 로직이나, 데이터만 관리</li>\n<li>이렇게 독립적으로 분리하면 각각 고도화 진행 가능</li>\n<li>또한 문제가 발생하면 각각 독립적으로 처리만 하면 됨</li>\n</ul>\n</li>\n</ul>\n<br>\n<h2 id=\"2-무상태-프로토콜--stateless\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B4%EC%83%81%ED%83%9C-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C--stateless\" aria-label=\"2 무상태 프로토콜  stateless permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 무상태 프로토콜 = Stateless</h2>\n<ul>\n<li>\n<p>서버가 클라이언트의 상태를 보존 X</p>\n<ul>\n<li>상태 유지 : ex) 중간에 다른 점원이 바뀌면 안됨(만약에 바뀌면 상태 정보를 다른 점원에게 미리 알려줘야 함)</li>\n<li>상태 유지 X : ex) 점원이 바뀌어도 정확하게 결과를 얻을 수 있음, 갑자기 클라이언트 요청이 증가해도 서버를 대거 투입 가능, 응답 서버를 쉽게 바뀔 수 있음(무한 서버 증설 가능)</li>\n</ul>\n</li>\n<li>장점 : 서버 확장성 높음</li>\n<li>단점 : 클라이언트가 추가 데이터 전송</li>\n<li>\n<p>실무의 한계</p>\n<ol>\n<li>모든 것을 무상태로 설계할 수 있는 경우도 있고, 없는 경우도 있음</li>\n<li>무상태 : ex) 로그인이 필요 없는 단순한 서비스 소개 화면</li>\n<li>상태 유지: ex) 로그인</li>\n<li>로그인한 사용자의 경우, 로그인 했다는 상태를 서버에 유지</li>\n<li>일반적으로 브라우저 쿠키와 서버 세션 등을 이용해서 상태 유지</li>\n<li>상태 유지는 최소한만 사용</li>\n</ol>\n</li>\n</ul>\n<br>\n<h2 id=\"3-비-연결성connectionless\" style=\"position:relative;\"><a href=\"#3-%EB%B9%84-%EC%97%B0%EA%B2%B0%EC%84%B1connectionless\" aria-label=\"3 비 연결성connectionless permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 비 연결성(connectionless)</h2>\n<h3 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h3>\n<ul>\n<li>HTTP는 기본이 연결을 유지 않는 모델</li>\n<li>일반적으로 초 단위의 이하의 빠른 속도로 응답</li>\n<li>1시간 동안 수천명이 서비스를 사용해도 실제 서버에서 동시에 처리하는 요청은 수십개 이하로 매우 작음\nex) 웹 브라우저에서 계속 연속해서 검색 버튼을 누르지 않음</li>\n<li>서버 자원을 매우 효율적으로 사용할 수 있음</li>\n</ul>\n<h3 id=\"한계와-극복\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EA%B3%84%EC%99%80-%EA%B7%B9%EB%B3%B5\" aria-label=\"한계와 극복 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한계와 극복</h3>\n<ul>\n<li>TCP/IP 연결을 새로 맺어야 함 - 3 way handshake 시간 추가</li>\n<li>웹 브라우저로 사이트를 요청하면 HTML 뿐만아니라 JS, CSS 추가 이미지 등 수많은 자원이 함께 다운로드</li>\n<li>지금은 HTTP 지속 연결로 문제 해결</li>\n<li>HTTP/2, HTTP/3에서 더 많은 최적화</li>\n</ul>\n<br>\n<h3 id=\"stateless를-기억하자서버-개발자들이-어려워하는-업무\" style=\"position:relative;\"><a href=\"#stateless%EB%A5%BC-%EA%B8%B0%EC%96%B5%ED%95%98%EC%9E%90%EC%84%9C%EB%B2%84-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%93%A4%EC%9D%B4-%EC%96%B4%EB%A0%A4%EC%9B%8C%ED%95%98%EB%8A%94-%EC%97%85%EB%AC%B4\" aria-label=\"stateless를 기억하자서버 개발자들이 어려워하는 업무 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stateless를 기억하자(서버 개발자들이 어려워하는 업무)</h3>\n<ul>\n<li>정말 같은 시간에 딱 맞추어 발생하는 대용량 트래픽\nex) 선착순 이벤트, 명절 KTX 예약, 학과 수업등록</li>\n</ul>\n<deckgo-highlight-code language=\"toc\"  >\n          <code slot=\"code\"></code>\n        </deckgo-highlight-code>","frontmatter":{"date":"December 14, 2021","title":"HTTP - 3.HTTP 기본(2)","categories":"CS","author":"우기","emoji":"👨‍💻"},"fields":{"slug":"/study-cs-HTTP-4/"}},"site":{"siteMetadata":{"siteUrl":"https://free-ko.github.io","comments":{"utterances":{"repo":"zoomkoding/zoomkoding-gatsby-blog"}}}}},"pageContext":{"slug":"/study-js-es6-module-2/","nextSlug":"/study-cs-HTTP-3/","prevSlug":"/study-cs-HTTP-4/"}},"staticQueryHashes":["1073350324","2938748437"]}